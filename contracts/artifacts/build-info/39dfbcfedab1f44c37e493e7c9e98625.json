{
	"id": "39dfbcfedab1f44c37e493e7c9e98625",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/FixedSupplyToken.sol": {
				"content": "pragma solidity ^0.5.0;\r\n\r\n// ----------------------------------------------------------------------------------------------\r\n// Sample fixed supply token contract\r\n// Enjoy. (c) BokkyPooBah 2017. The MIT Licence.\r\n// ----------------------------------------------------------------------------------------------\r\n\r\n\r\n// ERC Token Standard #20 Interface\r\n// https://github.com/ethereum/EIPs/issues/20\r\n\r\n\r\n\r\n//\r\n//      Project-3-Group-1\r\n//      *****************\r\n//\r\n//      Group Membere:  Xu (Flora) Zhao\r\n//                      Md Muhasenul Haque\r\n//                      Samuel Nayacakalou\r\n//\r\n//      Date:           March 2023\r\n//\r\n//      Original Code:  https://github.com/tomw1808/distributed_exchange_truffle_class_3\r\n//\r\n\r\n\r\n// Adding SafeMath Library to improve security\r\n// @NOTE: This only works in Remix. Alternatively, paste the contents of SafeMath.sol directly here above ArcadeToken. You should use version 2.5.\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\";\r\n\r\ncontract ERC20Interface {\r\n    // Get the total token supply\r\n    function totalSupply() view public returns (uint256);\r\n\r\n    // Get the account balance of another account with address _owner\r\n    function balanceOf(address _owner) view public returns (uint256);\r\n\r\n    // Send _value amount of tokens to address _to\r\n    function transfer(address _to, uint256 _value) public returns (bool success);\r\n\r\n    // Send _value amount of tokens from address _from to address _to\r\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\r\n\r\n    // Allow _spender to withdraw from your account, multiple times, up to the _value amount.\r\n    // If this function is called again it overwrites the current allowance with _value.\r\n    // this function is required for some DEX functionality\r\n    function approve(address _spender, uint256 _value) public returns (bool success);\r\n\r\n    // Returns the amount which _spender is still allowed to withdraw from _owner\r\n    function allowance(address _owner, address _spender) view public returns (uint256 remaining);\r\n\r\n    // Triggered when tokens are transferred.\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n\r\n    // Triggered whenever approve(address _spender, uint256 _value) is called.\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\n\r\ncontract FixedSupplyToken is ERC20Interface {\r\n    string public constant symbol = \"FIXED\";\r\n    string public constant name = \"Example Fixed Supply Token\";\r\n    uint8 public constant decimals = 0;\r\n    uint256 _totalSupply = 1000000;\r\n\r\n//      Project-3-Group-1\r\n//      *****************\r\n// Using SafeMath Library for improved security\r\n    using SafeMath for uint256;\r\n\r\n    // Owner of this contract\r\n    address public owner;\r\n\r\n    // Balances for each account\r\n    mapping (address => uint256) balances;\r\n\r\n    // Owner of account approves the transfer of an amount to another account\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n\r\n    // Functions with this modifier can only be executed by the owner\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    // Constructor\r\n    //function FixedSupplyToken() public {\r\n    // FIXED -  Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead [duplicate]\r\n    //https://ethereum.stackexchange.com/questions/47175/defining-constructors-as-functions-with-the-same-name-as-the-contract-is-depreca\r\n    \r\n    constructor() public {  // New Constructor definition\r\n\r\n        owner = msg.sender;\r\n        balances[owner] = _totalSupply;\r\n    }\r\n\r\n    function totalSupply() view public returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    // What is the balance of a particular account?\r\n    function balanceOf(address _owner) view public returns (uint256) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    // Transfer the balance from owner's account to another account\r\n    function transfer(address _to, uint256 _amount) public returns (bool success) {\r\n        if (balances[msg.sender] >= _amount\r\n        && _amount > 0\r\n\r\n\r\n\t//      Project-3-Group-1\r\n    //      *****************\r\n\t//\tConverted arithmetic operations to SafeMath equivalent\t\r\n\t//\r\n        //&& balances[_to] + _amount > balances[_to]) {  \r\n        && (balances[_to].add(_amount)) > balances[_to]) {\r\n\r\n            //balances[msg.sender] -= _amount;\r\n            balances[msg.sender] = balances[msg.sender].sub(_amount);\r\n            \r\n            //balances[_to] += _amount;            \r\n            balances[_to] = balances[_to].add(_amount);\r\n            \r\n            emit Transfer(msg.sender, _to, _amount);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // Send _value amount of tokens from address _from to address _to\r\n    // The transferFrom method is used for a withdraw workflow, allowing contracts to send\r\n    // tokens on your behalf, for example to \"deposit\" to a contract address and/or to charge\r\n    // fees in sub-currencies; the command should fail unless the _from account has\r\n    // deliberately authorized the sender of the message via some mechanism; we propose\r\n    // these standardized APIs for approval:\r\n    function transferFrom(\r\n    address _from,\r\n    address _to,\r\n    uint256 _amount\r\n    ) public returns (bool) {\r\n\r\n\t//      Project-3-Group-1\r\n    //      *****************\r\n\t//\tConverted arithmetic operations to SafeMath equivalent\t\r\n\t//\r\n        if (balances[_from] >= _amount\r\n        && allowed[_from][msg.sender] >= _amount\r\n        && _amount > 0\r\n\r\n        //&& balances[_to] + _amount > balances[_to]) {\r\n        && balances[_to].add(_amount) > balances[_to]) {\r\n\r\n            //balances[_from] -= _amount;\r\n            balances[_from] = balances[_from].sub(_amount);\r\n            \r\n            //allowed[_from][msg.sender] -= _amount;            \r\n            allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);\r\n            \r\n            //balances[_to] += _amount;            \r\n            balances[_to] = balances[_to].add(_amount);\r\n            \r\n            emit Transfer(_from, _to, _amount);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n    // Allow _spender to withdraw from your account, multiple times, up to the _value amount.\r\n    // If this function is called again it overwrites the current allowance with _value.\r\n    function approve(address _spender, uint256 _amount) public returns (bool success) {\r\n        allowed[msg.sender][_spender] = _amount;\r\n        emit Approval(msg.sender, _spender, _amount);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) view public returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n\r\n}\r\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     *\n     * _Available since v2.4.0._\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/FixedSupplyToken.sol": {
				"ERC20Interface": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "remaining",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/FixedSupplyToken.sol\":\"ERC20Interface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FixedSupplyToken.sol\":{\"keccak256\":\"0x2517c4a59df7c7113847a2ac59d1d6448da965d9ca54aa62f5d409857ee9ad6e\",\"urls\":[\"bzz-raw://0653a12e678464d6e0f98cc21542f74dc4d7e6d5d32779efbdae417043ab8103\",\"dweb:/ipfs/QmfWSgUmpKF1ptHVcxnW2yuNwHCR6tc6tgdHqkanjCk97G\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"FixedSupplyToken": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "remaining",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/FixedSupplyToken.sol\":2457:7005  contract FixedSupplyToken is ERC20Interface {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/FixedSupplyToken.sol\":2683:2690  1000000 */\n  0x0f4240\n    /* \"contracts/FixedSupplyToken.sol\":2660:2690  uint256 _totalSupply = 1000000 */\n  0x00\n  sstore\n    /* \"contracts/FixedSupplyToken.sol\":3643:3775  constructor() public {  // New Constructor definition\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/FixedSupplyToken.sol\":3643:3775  constructor() public {  // New Constructor definition\r... */\n  pop\n    /* \"contracts/FixedSupplyToken.sol\":3716:3726  msg.sender */\n  caller\n    /* \"contracts/FixedSupplyToken.sol\":3708:3713  owner */\n  0x01\n  0x00\n    /* \"contracts/FixedSupplyToken.sol\":3708:3726  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/FixedSupplyToken.sol\":3755:3767  _totalSupply */\n  sload(0x00)\n    /* \"contracts/FixedSupplyToken.sol\":3737:3745  balances */\n  0x02\n    /* \"contracts/FixedSupplyToken.sol\":3737:3752  balances[owner] */\n  0x00\n    /* \"contracts/FixedSupplyToken.sol\":3746:3751  owner */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/FixedSupplyToken.sol\":3737:3752  balances[owner] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/FixedSupplyToken.sol\":3737:3767  balances[owner] = _totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/FixedSupplyToken.sol\":2457:7005  contract FixedSupplyToken is ERC20Interface {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/FixedSupplyToken.sol\":2457:7005  contract FixedSupplyToken is ERC20Interface {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/FixedSupplyToken.sol\":2457:7005  contract FixedSupplyToken is ERC20Interface {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/FixedSupplyToken.sol\":2554:2612  string public constant name = \"Example Fixed Supply Token\" */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_16:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_16)\n    tag_18:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":2554:2612  string public constant name = \"Example Fixed Supply Token\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_19\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_19:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FixedSupplyToken.sol\":6631:6848  function approve(address _spender, uint256 _amount) public returns (bool success) {\r... */\n    tag_4:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_21:\n        /* \"contracts/FixedSupplyToken.sol\":6631:6848  function approve(address _spender, uint256 _amount) public returns (bool success) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_22\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FixedSupplyToken.sol\":3783:3874  function totalSupply() view public returns (uint256) {\r... */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FixedSupplyToken.sol\":5412:6436  function transferFrom(\r... */\n    tag_6:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_26:\n        /* \"contracts/FixedSupplyToken.sol\":5412:6436  function transferFrom(\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_27\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FixedSupplyToken.sol\":2619:2653  uint8 public constant decimals = 0 */\n    tag_7:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FixedSupplyToken.sol\":3935:4042  function balanceOf(address _owner) view public returns (uint256) {\r... */\n    tag_8:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_31:\n        /* \"contracts/FixedSupplyToken.sol\":3935:4042  function balanceOf(address _owner) view public returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_32\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FixedSupplyToken.sol\":2868:2888  address public owner */\n    tag_9:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FixedSupplyToken.sol\":2508:2547  string public constant symbol = \"FIXED\" */\n    tag_10:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_37:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_37)\n    tag_39:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":2508:2547  string public constant symbol = \"FIXED\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_40\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_40:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FixedSupplyToken.sol\":4119:4926  function transfer(address _to, uint256 _amount) public returns (bool success) {\r... */\n    tag_11:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n        /* \"contracts/FixedSupplyToken.sol\":4119:4926  function transfer(address _to, uint256 _amount) public returns (bool success) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FixedSupplyToken.sol\":6856:7000  function allowance(address _owner, address _spender) view public returns (uint256 remaining) {\r... */\n    tag_12:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_45:\n        /* \"contracts/FixedSupplyToken.sol\":6856:7000  function allowance(address _owner, address _spender) view public returns (uint256 remaining) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FixedSupplyToken.sol\":2554:2612  string public constant name = \"Example Fixed Supply Token\" */\n    tag_15:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x4578616d706c6520466978656420537570706c7920546f6b656e000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/FixedSupplyToken.sol\":6631:6848  function approve(address _spender, uint256 _amount) public returns (bool success) {\r... */\n    tag_22:\n        /* \"contracts/FixedSupplyToken.sol\":6699:6711  bool success */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":6756:6763  _amount */\n      dup2\n        /* \"contracts/FixedSupplyToken.sol\":6724:6731  allowed */\n      0x03\n        /* \"contracts/FixedSupplyToken.sol\":6724:6743  allowed[msg.sender] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":6732:6742  msg.sender */\n      caller\n        /* \"contracts/FixedSupplyToken.sol\":6724:6743  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FixedSupplyToken.sol\":6724:6753  allowed[msg.sender][_spender] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":6744:6752  _spender */\n      dup6\n        /* \"contracts/FixedSupplyToken.sol\":6724:6753  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FixedSupplyToken.sol\":6724:6763  allowed[msg.sender][_spender] = _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":6800:6808  _spender */\n      dup3\n        /* \"contracts/FixedSupplyToken.sol\":6779:6818  Approval(msg.sender, _spender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FixedSupplyToken.sol\":6788:6798  msg.sender */\n      caller\n        /* \"contracts/FixedSupplyToken.sol\":6779:6818  Approval(msg.sender, _spender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/FixedSupplyToken.sol\":6810:6817  _amount */\n      dup5\n        /* \"contracts/FixedSupplyToken.sol\":6779:6818  Approval(msg.sender, _spender, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/FixedSupplyToken.sol\":6836:6840  true */\n      0x01\n        /* \"contracts/FixedSupplyToken.sol\":6829:6840  return true */\n      swap1\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":6631:6848  function approve(address _spender, uint256 _amount) public returns (bool success) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FixedSupplyToken.sol\":3783:3874  function totalSupply() view public returns (uint256) {\r... */\n    tag_24:\n        /* \"contracts/FixedSupplyToken.sol\":3827:3834  uint256 */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":3854:3866  _totalSupply */\n      dup1\n      sload\n        /* \"contracts/FixedSupplyToken.sol\":3847:3866  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":3783:3874  function totalSupply() view public returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/FixedSupplyToken.sol\":5412:6436  function transferFrom(\r... */\n    tag_27:\n        /* \"contracts/FixedSupplyToken.sol\":5517:5521  bool */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":5684:5691  _amount */\n      dup2\n        /* \"contracts/FixedSupplyToken.sol\":5665:5673  balances */\n      0x02\n        /* \"contracts/FixedSupplyToken.sol\":5665:5680  balances[_from] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":5674:5679  _from */\n      dup7\n        /* \"contracts/FixedSupplyToken.sol\":5665:5680  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FixedSupplyToken.sol\":5665:5691  balances[_from] >= _amount */\n      lt\n      iszero\n        /* \"contracts/FixedSupplyToken.sol\":5665:5741  balances[_from] >= _amount\r... */\n      dup1\n      iszero\n      tag_50\n      jumpi\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":5734:5741  _amount */\n      dup2\n        /* \"contracts/FixedSupplyToken.sol\":5704:5711  allowed */\n      0x03\n        /* \"contracts/FixedSupplyToken.sol\":5704:5718  allowed[_from] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":5712:5717  _from */\n      dup7\n        /* \"contracts/FixedSupplyToken.sol\":5704:5718  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FixedSupplyToken.sol\":5704:5730  allowed[_from][msg.sender] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":5719:5729  msg.sender */\n      caller\n        /* \"contracts/FixedSupplyToken.sol\":5704:5730  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FixedSupplyToken.sol\":5704:5741  allowed[_from][msg.sender] >= _amount */\n      lt\n      iszero\n        /* \"contracts/FixedSupplyToken.sol\":5665:5741  balances[_from] >= _amount\r... */\n    tag_50:\n        /* \"contracts/FixedSupplyToken.sol\":5665:5765  balances[_from] >= _amount\r... */\n      dup1\n      iszero\n      tag_51\n      jumpi\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":5764:5765  0 */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":5754:5761  _amount */\n      dup3\n        /* \"contracts/FixedSupplyToken.sol\":5754:5765  _amount > 0 */\n      gt\n        /* \"contracts/FixedSupplyToken.sol\":5665:5765  balances[_from] >= _amount\r... */\n    tag_51:\n        /* \"contracts/FixedSupplyToken.sol\":5665:5879  balances[_from] >= _amount\r... */\n      dup1\n      iszero\n      tag_52\n      jumpi\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":5866:5874  balances */\n      0x02\n        /* \"contracts/FixedSupplyToken.sol\":5866:5879  balances[_to] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":5875:5878  _to */\n      dup5\n        /* \"contracts/FixedSupplyToken.sol\":5866:5879  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FixedSupplyToken.sol\":5837:5863  balances[_to].add(_amount) */\n      tag_53\n        /* \"contracts/FixedSupplyToken.sol\":5855:5862  _amount */\n      dup4\n        /* \"contracts/FixedSupplyToken.sol\":5837:5845  balances */\n      0x02\n        /* \"contracts/FixedSupplyToken.sol\":5837:5850  balances[_to] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":5846:5849  _to */\n      dup8\n        /* \"contracts/FixedSupplyToken.sol\":5837:5850  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FixedSupplyToken.sol\":5837:5854  balances[_to].add */\n      tag_54\n      swap1\n        /* \"contracts/FixedSupplyToken.sol\":5837:5863  balances[_to].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_53:\n        /* \"contracts/FixedSupplyToken.sol\":5837:5879  balances[_to].add(_amount) > balances[_to] */\n      gt\n        /* \"contracts/FixedSupplyToken.sol\":5665:5879  balances[_from] >= _amount\r... */\n    tag_52:\n        /* \"contracts/FixedSupplyToken.sol\":5661:6429  if (balances[_from] >= _amount\r... */\n      iszero\n      tag_55\n      jumpi\n        /* \"contracts/FixedSupplyToken.sol\":5959:5987  balances[_from].sub(_amount) */\n      tag_56\n        /* \"contracts/FixedSupplyToken.sol\":5979:5986  _amount */\n      dup3\n        /* \"contracts/FixedSupplyToken.sol\":5959:5967  balances */\n      0x02\n        /* \"contracts/FixedSupplyToken.sol\":5959:5974  balances[_from] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":5968:5973  _from */\n      dup8\n        /* \"contracts/FixedSupplyToken.sol\":5959:5974  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FixedSupplyToken.sol\":5959:5978  balances[_from].sub */\n      tag_57\n      swap1\n        /* \"contracts/FixedSupplyToken.sol\":5959:5987  balances[_from].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_56:\n        /* \"contracts/FixedSupplyToken.sol\":5941:5949  balances */\n      0x02\n        /* \"contracts/FixedSupplyToken.sol\":5941:5956  balances[_from] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":5950:5955  _from */\n      dup7\n        /* \"contracts/FixedSupplyToken.sol\":5941:5956  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FixedSupplyToken.sol\":5941:5987  balances[_from] = balances[_from].sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":6111:6150  allowed[_from][msg.sender].sub(_amount) */\n      tag_58\n        /* \"contracts/FixedSupplyToken.sol\":6142:6149  _amount */\n      dup3\n        /* \"contracts/FixedSupplyToken.sol\":6111:6118  allowed */\n      0x03\n        /* \"contracts/FixedSupplyToken.sol\":6111:6125  allowed[_from] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":6119:6124  _from */\n      dup8\n        /* \"contracts/FixedSupplyToken.sol\":6111:6125  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FixedSupplyToken.sol\":6111:6137  allowed[_from][msg.sender] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":6126:6136  msg.sender */\n      caller\n        /* \"contracts/FixedSupplyToken.sol\":6111:6137  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FixedSupplyToken.sol\":6111:6141  allowed[_from][msg.sender].sub */\n      tag_57\n      swap1\n        /* \"contracts/FixedSupplyToken.sol\":6111:6150  allowed[_from][msg.sender].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_58:\n        /* \"contracts/FixedSupplyToken.sol\":6082:6089  allowed */\n      0x03\n        /* \"contracts/FixedSupplyToken.sol\":6082:6096  allowed[_from] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":6090:6095  _from */\n      dup7\n        /* \"contracts/FixedSupplyToken.sol\":6082:6096  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FixedSupplyToken.sol\":6082:6108  allowed[_from][msg.sender] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":6097:6107  msg.sender */\n      caller\n        /* \"contracts/FixedSupplyToken.sol\":6082:6108  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FixedSupplyToken.sol\":6082:6150  allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":6248:6274  balances[_to].add(_amount) */\n      tag_59\n        /* \"contracts/FixedSupplyToken.sol\":6266:6273  _amount */\n      dup3\n        /* \"contracts/FixedSupplyToken.sol\":6248:6256  balances */\n      0x02\n        /* \"contracts/FixedSupplyToken.sol\":6248:6261  balances[_to] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":6257:6260  _to */\n      dup7\n        /* \"contracts/FixedSupplyToken.sol\":6248:6261  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FixedSupplyToken.sol\":6248:6265  balances[_to].add */\n      tag_54\n      swap1\n        /* \"contracts/FixedSupplyToken.sol\":6248:6274  balances[_to].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_59:\n        /* \"contracts/FixedSupplyToken.sol\":6232:6240  balances */\n      0x02\n        /* \"contracts/FixedSupplyToken.sol\":6232:6245  balances[_to] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":6241:6244  _to */\n      dup6\n        /* \"contracts/FixedSupplyToken.sol\":6232:6245  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FixedSupplyToken.sol\":6232:6274  balances[_to] = balances[_to].add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":6324:6327  _to */\n      dup3\n        /* \"contracts/FixedSupplyToken.sol\":6308:6337  Transfer(_from, _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FixedSupplyToken.sol\":6317:6322  _from */\n      dup5\n        /* \"contracts/FixedSupplyToken.sol\":6308:6337  Transfer(_from, _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/FixedSupplyToken.sol\":6329:6336  _amount */\n      dup5\n        /* \"contracts/FixedSupplyToken.sol\":6308:6337  Transfer(_from, _to, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/FixedSupplyToken.sol\":6359:6363  true */\n      0x01\n        /* \"contracts/FixedSupplyToken.sol\":6352:6363  return true */\n      swap1\n      pop\n      jump(tag_49)\n        /* \"contracts/FixedSupplyToken.sol\":5661:6429  if (balances[_from] >= _amount\r... */\n    tag_55:\n        /* \"contracts/FixedSupplyToken.sol\":6412:6417  false */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":6405:6417  return false */\n      swap1\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":5412:6436  function transferFrom(\r... */\n    tag_49:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FixedSupplyToken.sol\":2619:2653  uint8 public constant decimals = 0 */\n    tag_29:\n        /* \"contracts/FixedSupplyToken.sol\":2652:2653  0 */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":2619:2653  uint8 public constant decimals = 0 */\n      dup2\n      jump\t// out\n        /* \"contracts/FixedSupplyToken.sol\":3935:4042  function balanceOf(address _owner) view public returns (uint256) {\r... */\n    tag_32:\n        /* \"contracts/FixedSupplyToken.sol\":3991:3998  uint256 */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":4018:4026  balances */\n      0x02\n        /* \"contracts/FixedSupplyToken.sol\":4018:4034  balances[_owner] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":4027:4033  _owner */\n      dup4\n        /* \"contracts/FixedSupplyToken.sol\":4018:4034  balances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FixedSupplyToken.sol\":4011:4034  return balances[_owner] */\n      swap1\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":3935:4042  function balanceOf(address _owner) view public returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/FixedSupplyToken.sol\":2868:2888  address public owner */\n    tag_34:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/FixedSupplyToken.sol\":2508:2547  string public constant symbol = \"FIXED\" */\n    tag_36:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x4649584544000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/FixedSupplyToken.sol\":4119:4926  function transfer(address _to, uint256 _amount) public returns (bool success) {\r... */\n    tag_43:\n        /* \"contracts/FixedSupplyToken.sol\":4183:4195  bool success */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":4236:4243  _amount */\n      dup2\n        /* \"contracts/FixedSupplyToken.sol\":4212:4220  balances */\n      0x02\n        /* \"contracts/FixedSupplyToken.sol\":4212:4232  balances[msg.sender] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":4221:4231  msg.sender */\n      caller\n        /* \"contracts/FixedSupplyToken.sol\":4212:4232  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FixedSupplyToken.sol\":4212:4243  balances[msg.sender] >= _amount */\n      lt\n      iszero\n        /* \"contracts/FixedSupplyToken.sol\":4212:4267  balances[msg.sender] >= _amount\r... */\n      dup1\n      iszero\n      tag_63\n      jumpi\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":4266:4267  0 */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":4256:4263  _amount */\n      dup3\n        /* \"contracts/FixedSupplyToken.sol\":4256:4267  _amount > 0 */\n      gt\n        /* \"contracts/FixedSupplyToken.sol\":4212:4267  balances[msg.sender] >= _amount\r... */\n    tag_63:\n        /* \"contracts/FixedSupplyToken.sol\":4212:4512  balances[msg.sender] >= _amount\r... */\n      dup1\n      iszero\n      tag_64\n      jumpi\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":4499:4507  balances */\n      0x02\n        /* \"contracts/FixedSupplyToken.sol\":4499:4512  balances[_to] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":4508:4511  _to */\n      dup5\n        /* \"contracts/FixedSupplyToken.sol\":4499:4512  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FixedSupplyToken.sol\":4469:4495  balances[_to].add(_amount) */\n      tag_65\n        /* \"contracts/FixedSupplyToken.sol\":4487:4494  _amount */\n      dup4\n        /* \"contracts/FixedSupplyToken.sol\":4469:4477  balances */\n      0x02\n        /* \"contracts/FixedSupplyToken.sol\":4469:4482  balances[_to] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":4478:4481  _to */\n      dup8\n        /* \"contracts/FixedSupplyToken.sol\":4469:4482  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FixedSupplyToken.sol\":4469:4486  balances[_to].add */\n      tag_54\n      swap1\n        /* \"contracts/FixedSupplyToken.sol\":4469:4495  balances[_to].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_65:\n        /* \"contracts/FixedSupplyToken.sol\":4468:4512  (balances[_to].add(_amount)) > balances[_to] */\n      gt\n        /* \"contracts/FixedSupplyToken.sol\":4212:4512  balances[msg.sender] >= _amount\r... */\n    tag_64:\n        /* \"contracts/FixedSupplyToken.sol\":4208:4919  if (balances[msg.sender] >= _amount\r... */\n      iszero\n      tag_66\n      jumpi\n        /* \"contracts/FixedSupplyToken.sol\":4602:4635  balances[msg.sender].sub(_amount) */\n      tag_67\n        /* \"contracts/FixedSupplyToken.sol\":4627:4634  _amount */\n      dup3\n        /* \"contracts/FixedSupplyToken.sol\":4602:4610  balances */\n      0x02\n        /* \"contracts/FixedSupplyToken.sol\":4602:4622  balances[msg.sender] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":4611:4621  msg.sender */\n      caller\n        /* \"contracts/FixedSupplyToken.sol\":4602:4622  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FixedSupplyToken.sol\":4602:4626  balances[msg.sender].sub */\n      tag_57\n      swap1\n        /* \"contracts/FixedSupplyToken.sol\":4602:4635  balances[msg.sender].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"contracts/FixedSupplyToken.sol\":4579:4587  balances */\n      0x02\n        /* \"contracts/FixedSupplyToken.sol\":4579:4599  balances[msg.sender] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":4588:4598  msg.sender */\n      caller\n        /* \"contracts/FixedSupplyToken.sol\":4579:4599  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FixedSupplyToken.sol\":4579:4635  balances[msg.sender] = balances[msg.sender].sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":4733:4759  balances[_to].add(_amount) */\n      tag_68\n        /* \"contracts/FixedSupplyToken.sol\":4751:4758  _amount */\n      dup3\n        /* \"contracts/FixedSupplyToken.sol\":4733:4741  balances */\n      0x02\n        /* \"contracts/FixedSupplyToken.sol\":4733:4746  balances[_to] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":4742:4745  _to */\n      dup7\n        /* \"contracts/FixedSupplyToken.sol\":4733:4746  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FixedSupplyToken.sol\":4733:4750  balances[_to].add */\n      tag_54\n      swap1\n        /* \"contracts/FixedSupplyToken.sol\":4733:4759  balances[_to].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_68:\n        /* \"contracts/FixedSupplyToken.sol\":4717:4725  balances */\n      0x02\n        /* \"contracts/FixedSupplyToken.sol\":4717:4730  balances[_to] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":4726:4729  _to */\n      dup6\n        /* \"contracts/FixedSupplyToken.sol\":4717:4730  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FixedSupplyToken.sol\":4717:4759  balances[_to] = balances[_to].add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":4814:4817  _to */\n      dup3\n        /* \"contracts/FixedSupplyToken.sol\":4793:4827  Transfer(msg.sender, _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FixedSupplyToken.sol\":4802:4812  msg.sender */\n      caller\n        /* \"contracts/FixedSupplyToken.sol\":4793:4827  Transfer(msg.sender, _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/FixedSupplyToken.sol\":4819:4826  _amount */\n      dup5\n        /* \"contracts/FixedSupplyToken.sol\":4793:4827  Transfer(msg.sender, _to, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/FixedSupplyToken.sol\":4849:4853  true */\n      0x01\n        /* \"contracts/FixedSupplyToken.sol\":4842:4853  return true */\n      swap1\n      pop\n      jump(tag_62)\n        /* \"contracts/FixedSupplyToken.sol\":4208:4919  if (balances[msg.sender] >= _amount\r... */\n    tag_66:\n        /* \"contracts/FixedSupplyToken.sol\":4902:4907  false */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":4895:4907  return false */\n      swap1\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":4119:4926  function transfer(address _to, uint256 _amount) public returns (bool success) {\r... */\n    tag_62:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FixedSupplyToken.sol\":6856:7000  function allowance(address _owner, address _spender) view public returns (uint256 remaining) {\r... */\n    tag_46:\n        /* \"contracts/FixedSupplyToken.sol\":6930:6947  uint256 remaining */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":6967:6974  allowed */\n      0x03\n        /* \"contracts/FixedSupplyToken.sol\":6967:6982  allowed[_owner] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":6975:6981  _owner */\n      dup5\n        /* \"contracts/FixedSupplyToken.sol\":6967:6982  allowed[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FixedSupplyToken.sol\":6967:6992  allowed[_owner][_spender] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":6983:6991  _spender */\n      dup4\n        /* \"contracts/FixedSupplyToken.sol\":6967:6992  allowed[_owner][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FixedSupplyToken.sol\":6960:6992  return allowed[_owner][_spender] */\n      swap1\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":6856:7000  function allowance(address _owner, address _spender) view public returns (uint256 remaining) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_54:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":892:899  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":911:920  uint256 c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":927:928  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":923:924  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":923:928  a + b */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":911:928  uint256 c = a + b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":951:952  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":946:947  c */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":946:952  c >= a */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":938:984  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1002:1003  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":995:1003  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1274:1408  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_57:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1332:1339  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1358:1401  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1362:1363  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1365:1366  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1358:1401  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1358:1361  sub */\n      tag_75\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1358:1401  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_74:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1351:1401  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1274:1408  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1732:1919  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_75:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1818:1825  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1850:1851  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1845:1846  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1845:1851  b <= a */\n      gt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1853:1865  errorMessage */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1837:1866  require(b <= a, errorMessage) */\n      swap1\n      tag_77\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_78:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_80\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_78)\n    tag_80:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1837:1866  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_81\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_81:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1876:1885  uint256 c */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1892:1893  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1888:1889  a */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1888:1893  a - b */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1876:1893  uint256 c = a - b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1911:1912  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1904:1912  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1732:1919  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a723158201ffcabde139319ecf350a21d84d9d9a631e803e9b82e157b7fd9a58321ebc69a64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052620f424060005534801561001757600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060005460026000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f46806100d06000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806370a082311161006657806370a08231146102545780638da5cb5b146102ac57806395d89b41146102f6578063a9059cbb14610379578063dd62ed3e146103df5761009e565b806306fdde03146100a3578063095ea7b31461012657806318160ddd1461018c57806323b872dd146101aa578063313ce56714610230575b600080fd5b6100ab610457565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100eb5780820151818401526020810190506100d0565b50505050905090810190601f1680156101185780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101726004803603604081101561013c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610490565b604051808215151515815260200191505060405180910390f35b610194610582565b6040518082815260200191505060405180910390f35b610216600480360360608110156101c057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061058b565b604051808215151515815260200191505060405180910390f35b6102386109b7565b604051808260ff1660ff16815260200191505060405180910390f35b6102966004803603602081101561026a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109bc565b6040518082815260200191505060405180910390f35b6102b4610a05565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102fe610a2b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561033e578082015181840152602081019050610323565b50505050905090810190601f16801561036b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103c56004803603604081101561038f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a64565b604051808215151515815260200191505060405180910390f35b610441600480360360408110156103f557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cf8565b6040518082815260200191505060405180910390f35b6040518060400160405280601a81526020017f4578616d706c6520466978656420537570706c7920546f6b656e00000000000081525081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60008054905090565b600081600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015610658575081600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b80156106645750600082115b80156106ff5750600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106fd83600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d7f90919063ffffffff16565b115b156109ab5761075682600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e0790919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061082882600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e0790919063ffffffff16565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506108fa82600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d7f90919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190506109b0565b600090505b9392505050565b600081565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600581526020017f464958454400000000000000000000000000000000000000000000000000000081525081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015610ab55750600082115b8015610b505750600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b4e83600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d7f90919063ffffffff16565b115b15610ced57610ba782600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e0790919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610c3c82600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d7f90919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a360019050610cf2565b600090505b92915050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080828401905083811015610dfd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000610e4983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610e51565b905092915050565b6000838311158290610efe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ec3578082015181840152602081019050610ea8565b50505050905090810190601f168015610ef05780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838503905080915050939250505056fea265627a7a723158201ffcabde139319ecf350a21d84d9d9a631e803e9b82e157b7fd9a58321ebc69a64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0xF4240 PUSH1 0x0 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 SLOAD PUSH1 0x2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xF46 DUP1 PUSH2 0xD0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3DF JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x230 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x118 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x490 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x194 PUSH2 0x582 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x58B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x238 PUSH2 0x9B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B4 PUSH2 0xA05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH2 0xA2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x33E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x323 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x36B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x441 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4578616D706C6520466978656420537570706C7920546F6B656E000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0x658 JUMPI POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x664 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST DUP1 ISZERO PUSH2 0x6FF JUMPI POP PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x6FD DUP4 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD7F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x9AB JUMPI PUSH2 0x756 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x828 DUP3 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x8FA DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD7F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP PUSH2 0x9B0 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4649584544000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0xAB5 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST DUP1 ISZERO PUSH2 0xB50 JUMPI POP PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB4E DUP4 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD7F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0xCED JUMPI PUSH2 0xBA7 DUP3 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xC3C DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD7F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE49 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xE51 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xEFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEA8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEF0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x1F 0xFC 0xAB 0xDE SGT SWAP4 NOT 0xEC RETURN POP LOG2 SAR DUP5 0xD9 0xD9 0xA6 BALANCE 0xE8 SUB 0xE9 0xB8 0x2E ISZERO PUSH28 0x7FD9A58321EBC69A64736F6C63430005110032000000000000000000 ",
							"sourceMap": "2457:4548:0:-;;;2683:7;2660:30;;3643:132;8:9:-1;5:2;;;30:1;27;20:12;5:2;3643:132:0;3716:10;3708:5;;:18;;;;;;;;;;;;;;;;;;3755:12;;3737:8;:15;3746:5;;;;;;;;;;;3737:15;;;;;;;;;;;;;;;:30;;;;2457:4548;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061009e5760003560e01c806370a082311161006657806370a08231146102545780638da5cb5b146102ac57806395d89b41146102f6578063a9059cbb14610379578063dd62ed3e146103df5761009e565b806306fdde03146100a3578063095ea7b31461012657806318160ddd1461018c57806323b872dd146101aa578063313ce56714610230575b600080fd5b6100ab610457565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100eb5780820151818401526020810190506100d0565b50505050905090810190601f1680156101185780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101726004803603604081101561013c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610490565b604051808215151515815260200191505060405180910390f35b610194610582565b6040518082815260200191505060405180910390f35b610216600480360360608110156101c057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061058b565b604051808215151515815260200191505060405180910390f35b6102386109b7565b604051808260ff1660ff16815260200191505060405180910390f35b6102966004803603602081101561026a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109bc565b6040518082815260200191505060405180910390f35b6102b4610a05565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102fe610a2b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561033e578082015181840152602081019050610323565b50505050905090810190601f16801561036b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103c56004803603604081101561038f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a64565b604051808215151515815260200191505060405180910390f35b610441600480360360408110156103f557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cf8565b6040518082815260200191505060405180910390f35b6040518060400160405280601a81526020017f4578616d706c6520466978656420537570706c7920546f6b656e00000000000081525081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60008054905090565b600081600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015610658575081600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b80156106645750600082115b80156106ff5750600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106fd83600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d7f90919063ffffffff16565b115b156109ab5761075682600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e0790919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061082882600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e0790919063ffffffff16565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506108fa82600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d7f90919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190506109b0565b600090505b9392505050565b600081565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600581526020017f464958454400000000000000000000000000000000000000000000000000000081525081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015610ab55750600082115b8015610b505750600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b4e83600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d7f90919063ffffffff16565b115b15610ced57610ba782600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e0790919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610c3c82600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d7f90919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a360019050610cf2565b600090505b92915050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080828401905083811015610dfd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000610e4983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610e51565b905092915050565b6000838311158290610efe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ec3578082015181840152602081019050610ea8565b50505050905090810190601f168015610ef05780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838503905080915050939250505056fea265627a7a723158201ffcabde139319ecf350a21d84d9d9a631e803e9b82e157b7fd9a58321ebc69a64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3DF JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x230 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x118 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x490 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x194 PUSH2 0x582 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x58B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x238 PUSH2 0x9B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B4 PUSH2 0xA05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH2 0xA2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x33E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x323 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x36B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x441 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4578616D706C6520466978656420537570706C7920546F6B656E000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0x658 JUMPI POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x664 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST DUP1 ISZERO PUSH2 0x6FF JUMPI POP PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x6FD DUP4 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD7F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x9AB JUMPI PUSH2 0x756 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x828 DUP3 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x8FA DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD7F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP PUSH2 0x9B0 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4649584544000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0xAB5 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST DUP1 ISZERO PUSH2 0xB50 JUMPI POP PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB4E DUP4 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD7F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0xCED JUMPI PUSH2 0xBA7 DUP3 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xC3C DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD7F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE49 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xE51 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xEFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEA8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEF0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x1F 0xFC 0xAB 0xDE SGT SWAP4 NOT 0xEC RETURN POP LOG2 SAR DUP5 0xD9 0xD9 0xA6 BALANCE 0xE8 SUB 0xE9 0xB8 0x2E ISZERO PUSH28 0x7FD9A58321EBC69A64736F6C63430005110032000000000000000000 ",
							"sourceMap": "2457:4548:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2457:4548:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2554:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2554:58:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6631:217;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6631:217:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3783:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5412:1024;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5412:1024:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2619:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3935:107;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3935:107:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2868:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2508:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2508:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4119:807;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4119:807:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6856:144;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6856:144:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2554:58;;;;;;;;;;;;;;;;;;;:::o;6631:217::-;6699:12;6756:7;6724;:19;6732:10;6724:19;;;;;;;;;;;;;;;:29;6744:8;6724:29;;;;;;;;;;;;;;;:39;;;;6800:8;6779:39;;6788:10;6779:39;;;6810:7;6779:39;;;;;;;;;;;;;;;;;;6836:4;6829:11;;6631:217;;;;:::o;3783:91::-;3827:7;3854:12;;3847:19;;3783:91;:::o;5412:1024::-;5517:4;5684:7;5665:8;:15;5674:5;5665:15;;;;;;;;;;;;;;;;:26;;:76;;;;;5734:7;5704;:14;5712:5;5704:14;;;;;;;;;;;;;;;:26;5719:10;5704:26;;;;;;;;;;;;;;;;:37;;5665:76;:100;;;;;5764:1;5754:7;:11;5665:100;:214;;;;;5866:8;:13;5875:3;5866:13;;;;;;;;;;;;;;;;5837:26;5855:7;5837:8;:13;5846:3;5837:13;;;;;;;;;;;;;;;;:17;;:26;;;;:::i;:::-;:42;5665:214;5661:768;;;5959:28;5979:7;5959:8;:15;5968:5;5959:15;;;;;;;;;;;;;;;;:19;;:28;;;;:::i;:::-;5941:8;:15;5950:5;5941:15;;;;;;;;;;;;;;;:46;;;;6111:39;6142:7;6111;:14;6119:5;6111:14;;;;;;;;;;;;;;;:26;6126:10;6111:26;;;;;;;;;;;;;;;;:30;;:39;;;;:::i;:::-;6082:7;:14;6090:5;6082:14;;;;;;;;;;;;;;;:26;6097:10;6082:26;;;;;;;;;;;;;;;:68;;;;6248:26;6266:7;6248:8;:13;6257:3;6248:13;;;;;;;;;;;;;;;;:17;;:26;;;;:::i;:::-;6232:8;:13;6241:3;6232:13;;;;;;;;;;;;;;;:42;;;;6324:3;6308:29;;6317:5;6308:29;;;6329:7;6308:29;;;;;;;;;;;;;;;;;;6359:4;6352:11;;;;5661:768;6412:5;6405:12;;5412:1024;;;;;;:::o;2619:34::-;2652:1;2619:34;:::o;3935:107::-;3991:7;4018:8;:16;4027:6;4018:16;;;;;;;;;;;;;;;;4011:23;;3935:107;;;:::o;2868:20::-;;;;;;;;;;;;;:::o;2508:39::-;;;;;;;;;;;;;;;;;;;:::o;4119:807::-;4183:12;4236:7;4212:8;:20;4221:10;4212:20;;;;;;;;;;;;;;;;:31;;:55;;;;;4266:1;4256:7;:11;4212:55;:300;;;;;4499:8;:13;4508:3;4499:13;;;;;;;;;;;;;;;;4469:26;4487:7;4469:8;:13;4478:3;4469:13;;;;;;;;;;;;;;;;:17;;:26;;;;:::i;:::-;4468:44;4212:300;4208:711;;;4602:33;4627:7;4602:8;:20;4611:10;4602:20;;;;;;;;;;;;;;;;:24;;:33;;;;:::i;:::-;4579:8;:20;4588:10;4579:20;;;;;;;;;;;;;;;:56;;;;4733:26;4751:7;4733:8;:13;4742:3;4733:13;;;;;;;;;;;;;;;;:17;;:26;;;;:::i;:::-;4717:8;:13;4726:3;4717:13;;;;;;;;;;;;;;;:42;;;;4814:3;4793:34;;4802:10;4793:34;;;4819:7;4793:34;;;;;;;;;;;;;;;;;;4849:4;4842:11;;;;4208:711;4902:5;4895:12;;4119:807;;;;;:::o;6856:144::-;6930:17;6967:7;:15;6975:6;6967:15;;;;;;;;;;;;;;;:25;6983:8;6967:25;;;;;;;;;;;;;;;;6960:32;;6856:144;;;;:::o;834:176:1:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;1274:134::-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;1732:187::-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "782000",
								"executionCost": "63430",
								"totalCost": "845430"
							},
							"external": {
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "22391",
								"balanceOf(address)": "1196",
								"decimals()": "306",
								"name()": "infinite",
								"owner()": "1075",
								"symbol()": "infinite",
								"totalSupply()": "1058",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2457,
									"end": 7005,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 2457,
									"end": 7005,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2457,
									"end": 7005,
									"name": "MSTORE"
								},
								{
									"begin": 2683,
									"end": 2690,
									"name": "PUSH",
									"value": "F4240"
								},
								{
									"begin": 2660,
									"end": 2690,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2660,
									"end": 2690,
									"name": "SSTORE"
								},
								{
									"begin": 3643,
									"end": 3775,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 3643,
									"end": 3775,
									"name": "POP"
								},
								{
									"begin": 3716,
									"end": 3726,
									"name": "CALLER"
								},
								{
									"begin": 3708,
									"end": 3713,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 3708,
									"end": 3713,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3708,
									"end": 3726,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 3708,
									"end": 3726,
									"name": "EXP"
								},
								{
									"begin": 3708,
									"end": 3726,
									"name": "DUP2"
								},
								{
									"begin": 3708,
									"end": 3726,
									"name": "SLOAD"
								},
								{
									"begin": 3708,
									"end": 3726,
									"name": "DUP2"
								},
								{
									"begin": 3708,
									"end": 3726,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3708,
									"end": 3726,
									"name": "MUL"
								},
								{
									"begin": 3708,
									"end": 3726,
									"name": "NOT"
								},
								{
									"begin": 3708,
									"end": 3726,
									"name": "AND"
								},
								{
									"begin": 3708,
									"end": 3726,
									"name": "SWAP1"
								},
								{
									"begin": 3708,
									"end": 3726,
									"name": "DUP4"
								},
								{
									"begin": 3708,
									"end": 3726,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3708,
									"end": 3726,
									"name": "AND"
								},
								{
									"begin": 3708,
									"end": 3726,
									"name": "MUL"
								},
								{
									"begin": 3708,
									"end": 3726,
									"name": "OR"
								},
								{
									"begin": 3708,
									"end": 3726,
									"name": "SWAP1"
								},
								{
									"begin": 3708,
									"end": 3726,
									"name": "SSTORE"
								},
								{
									"begin": 3708,
									"end": 3726,
									"name": "POP"
								},
								{
									"begin": 3755,
									"end": 3767,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3767,
									"name": "SLOAD"
								},
								{
									"begin": 3737,
									"end": 3745,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 3737,
									"end": 3752,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3746,
									"end": 3751,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 3746,
									"end": 3751,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3746,
									"end": 3751,
									"name": "SWAP1"
								},
								{
									"begin": 3746,
									"end": 3751,
									"name": "SLOAD"
								},
								{
									"begin": 3746,
									"end": 3751,
									"name": "SWAP1"
								},
								{
									"begin": 3746,
									"end": 3751,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 3746,
									"end": 3751,
									"name": "EXP"
								},
								{
									"begin": 3746,
									"end": 3751,
									"name": "SWAP1"
								},
								{
									"begin": 3746,
									"end": 3751,
									"name": "DIV"
								},
								{
									"begin": 3746,
									"end": 3751,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3746,
									"end": 3751,
									"name": "AND"
								},
								{
									"begin": 3737,
									"end": 3752,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3737,
									"end": 3752,
									"name": "AND"
								},
								{
									"begin": 3737,
									"end": 3752,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3737,
									"end": 3752,
									"name": "AND"
								},
								{
									"begin": 3737,
									"end": 3752,
									"name": "DUP2"
								},
								{
									"begin": 3737,
									"end": 3752,
									"name": "MSTORE"
								},
								{
									"begin": 3737,
									"end": 3752,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3737,
									"end": 3752,
									"name": "ADD"
								},
								{
									"begin": 3737,
									"end": 3752,
									"name": "SWAP1"
								},
								{
									"begin": 3737,
									"end": 3752,
									"name": "DUP2"
								},
								{
									"begin": 3737,
									"end": 3752,
									"name": "MSTORE"
								},
								{
									"begin": 3737,
									"end": 3752,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3737,
									"end": 3752,
									"name": "ADD"
								},
								{
									"begin": 3737,
									"end": 3752,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3737,
									"end": 3752,
									"name": "KECCAK256"
								},
								{
									"begin": 3737,
									"end": 3767,
									"name": "DUP2"
								},
								{
									"begin": 3737,
									"end": 3767,
									"name": "SWAP1"
								},
								{
									"begin": 3737,
									"end": 3767,
									"name": "SSTORE"
								},
								{
									"begin": 3737,
									"end": 3767,
									"name": "POP"
								},
								{
									"begin": 2457,
									"end": 7005,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2457,
									"end": 7005,
									"name": "DUP1"
								},
								{
									"begin": 2457,
									"end": 7005,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2457,
									"end": 7005,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2457,
									"end": 7005,
									"name": "CODECOPY"
								},
								{
									"begin": 2457,
									"end": 7005,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2457,
									"end": 7005,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158201ffcabde139319ecf350a21d84d9d9a631e803e9b82e157b7fd9a58321ebc69a64736f6c63430005110032",
									".code": [
										{
											"begin": 2457,
											"end": 7005,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "MSTORE"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "POP"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "LT"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "JUMPI"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "SHR"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "DUP1"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "GT"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "JUMPI"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "DUP1"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "EQ"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "JUMPI"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "DUP1"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "EQ"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "JUMPI"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "DUP1"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "EQ"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "JUMPI"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "DUP1"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "EQ"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "JUMPI"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "DUP1"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "EQ"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "JUMPI"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "JUMP"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "JUMPDEST"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "DUP1"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "EQ"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "JUMPI"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "DUP1"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "EQ"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "JUMPI"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "DUP1"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "EQ"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "JUMPI"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "DUP1"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "EQ"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "JUMPI"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "DUP1"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "EQ"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "JUMPI"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "JUMPDEST"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "DUP1"
										},
										{
											"begin": 2457,
											"end": 7005,
											"name": "REVERT"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "JUMPDEST"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "JUMPDEST"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "MLOAD"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "DUP1"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "DUP1"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "ADD"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "DUP3"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "DUP2"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "SUB"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "DUP3"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "MSTORE"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "DUP4"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "DUP2"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "DUP2"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "MLOAD"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "DUP2"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "MSTORE"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "ADD"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "SWAP2"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "POP"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "DUP1"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "MLOAD"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "SWAP1"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "ADD"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "SWAP1"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "DUP1"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "DUP4"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "POP"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "POP"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "POP"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "SWAP1"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "POP"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "SWAP1"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "DUP2"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "ADD"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "SWAP1"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "AND"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "DUP1"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "ISZERO"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "JUMPI"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "DUP1"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "DUP3"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "SUB"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "DUP1"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "MLOAD"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "DUP4"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "SUB"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "EXP"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "SUB"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "NOT"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "AND"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "DUP2"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "MSTORE"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "ADD"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "SWAP2"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "POP"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "JUMPDEST"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "POP"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "SWAP3"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "POP"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "POP"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "POP"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "MLOAD"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "DUP1"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "SWAP2"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "SUB"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "SWAP1"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "RETURN"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "JUMPDEST"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "DUP1"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "DUP2"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "ADD"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "SWAP1"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "DUP1"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "DUP1"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "AND"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "SWAP1"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "ADD"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "SWAP1"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "SWAP3"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "SWAP2"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "SWAP1"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "DUP1"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "SWAP1"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "ADD"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "SWAP1"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "SWAP3"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "SWAP2"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "SWAP1"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "POP"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "POP"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "POP"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "JUMPDEST"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "MLOAD"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "DUP1"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "DUP3"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "ISZERO"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "ISZERO"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "ISZERO"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "ISZERO"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "DUP2"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "MSTORE"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "ADD"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "SWAP2"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "POP"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "POP"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "MLOAD"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "DUP1"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "SWAP2"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "SUB"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "SWAP1"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "RETURN"
										},
										{
											"begin": 3783,
											"end": 3874,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 3783,
											"end": 3874,
											"name": "JUMPDEST"
										},
										{
											"begin": 3783,
											"end": 3874,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 3783,
											"end": 3874,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 3783,
											"end": 3874,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3783,
											"end": 3874,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 3783,
											"end": 3874,
											"name": "JUMPDEST"
										},
										{
											"begin": 3783,
											"end": 3874,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3783,
											"end": 3874,
											"name": "MLOAD"
										},
										{
											"begin": 3783,
											"end": 3874,
											"name": "DUP1"
										},
										{
											"begin": 3783,
											"end": 3874,
											"name": "DUP3"
										},
										{
											"begin": 3783,
											"end": 3874,
											"name": "DUP2"
										},
										{
											"begin": 3783,
											"end": 3874,
											"name": "MSTORE"
										},
										{
											"begin": 3783,
											"end": 3874,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3783,
											"end": 3874,
											"name": "ADD"
										},
										{
											"begin": 3783,
											"end": 3874,
											"name": "SWAP2"
										},
										{
											"begin": 3783,
											"end": 3874,
											"name": "POP"
										},
										{
											"begin": 3783,
											"end": 3874,
											"name": "POP"
										},
										{
											"begin": 3783,
											"end": 3874,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3783,
											"end": 3874,
											"name": "MLOAD"
										},
										{
											"begin": 3783,
											"end": 3874,
											"name": "DUP1"
										},
										{
											"begin": 3783,
											"end": 3874,
											"name": "SWAP2"
										},
										{
											"begin": 3783,
											"end": 3874,
											"name": "SUB"
										},
										{
											"begin": 3783,
											"end": 3874,
											"name": "SWAP1"
										},
										{
											"begin": 3783,
											"end": 3874,
											"name": "RETURN"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "JUMPDEST"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "DUP1"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "DUP2"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "ADD"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "SWAP1"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "DUP1"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "DUP1"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "AND"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "SWAP1"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "ADD"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "SWAP1"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "SWAP3"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "SWAP2"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "SWAP1"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "DUP1"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "AND"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "SWAP1"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "ADD"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "SWAP1"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "SWAP3"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "SWAP2"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "SWAP1"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "DUP1"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "SWAP1"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "ADD"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "SWAP1"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "SWAP3"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "SWAP2"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "SWAP1"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "POP"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "POP"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "POP"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "JUMPDEST"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "MLOAD"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "DUP1"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "DUP3"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "ISZERO"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "ISZERO"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "ISZERO"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "ISZERO"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "DUP2"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "MSTORE"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "ADD"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "SWAP2"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "POP"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "POP"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "MLOAD"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "DUP1"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "SWAP2"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "SUB"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "SWAP1"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "RETURN"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "JUMPDEST"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "JUMPDEST"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "MLOAD"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "DUP1"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "DUP3"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "AND"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "AND"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "DUP2"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "MSTORE"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "ADD"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "SWAP2"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "POP"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "POP"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "MLOAD"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "DUP1"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "SWAP2"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "SUB"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "SWAP1"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "RETURN"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "JUMPDEST"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "DUP1"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "DUP2"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "ADD"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "SWAP1"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "DUP1"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "DUP1"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "AND"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "SWAP1"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "ADD"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "SWAP1"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "SWAP3"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "SWAP2"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "SWAP1"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "POP"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "POP"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "POP"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "JUMPDEST"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "MLOAD"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "DUP1"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "DUP3"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "DUP2"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "MSTORE"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "ADD"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "SWAP2"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "POP"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "POP"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "MLOAD"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "DUP1"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "SWAP2"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "SUB"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "SWAP1"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "RETURN"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "JUMPDEST"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "JUMPDEST"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "MLOAD"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "DUP1"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "DUP3"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "AND"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "AND"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "DUP2"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "MSTORE"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "ADD"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "SWAP2"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "POP"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "POP"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "MLOAD"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "DUP1"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "SWAP2"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "SUB"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "RETURN"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "JUMPDEST"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "JUMPDEST"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "MLOAD"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "DUP1"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "DUP1"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "ADD"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "DUP3"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "DUP2"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "SUB"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "DUP3"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "MSTORE"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "DUP4"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "DUP2"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "DUP2"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "MLOAD"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "DUP2"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "MSTORE"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "ADD"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "SWAP2"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "POP"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "DUP1"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "MLOAD"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "SWAP1"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "ADD"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "SWAP1"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "DUP1"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "DUP4"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "POP"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "POP"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "POP"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "SWAP1"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "POP"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "SWAP1"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "DUP2"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "ADD"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "SWAP1"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "AND"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "DUP1"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "ISZERO"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "JUMPI"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "DUP1"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "DUP3"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "SUB"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "DUP1"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "MLOAD"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "DUP4"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "SUB"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "EXP"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "SUB"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "NOT"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "AND"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "DUP2"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "MSTORE"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "ADD"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "SWAP2"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "POP"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "JUMPDEST"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "POP"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "SWAP3"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "POP"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "POP"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "POP"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "MLOAD"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "DUP1"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "SWAP2"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "SUB"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "SWAP1"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "RETURN"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "JUMPDEST"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "DUP1"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "DUP2"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "ADD"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "SWAP1"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "DUP1"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "DUP1"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "AND"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "SWAP1"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "ADD"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "SWAP1"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "SWAP3"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "SWAP2"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "SWAP1"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "DUP1"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "SWAP1"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "ADD"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "SWAP1"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "SWAP3"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "SWAP2"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "SWAP1"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "POP"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "POP"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "POP"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "JUMPDEST"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "MLOAD"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "DUP1"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "DUP3"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "ISZERO"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "ISZERO"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "ISZERO"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "ISZERO"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "DUP2"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "MSTORE"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "ADD"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "SWAP2"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "POP"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "POP"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "MLOAD"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "DUP1"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "SWAP2"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "SUB"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "SWAP1"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "RETURN"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "JUMPDEST"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "DUP1"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "DUP2"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "ADD"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "SWAP1"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "DUP1"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "DUP1"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "AND"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "SWAP1"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "ADD"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "SWAP1"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "SWAP3"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "SWAP2"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "SWAP1"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "DUP1"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "AND"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "SWAP1"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "ADD"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "SWAP1"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "SWAP3"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "SWAP2"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "SWAP1"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "POP"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "POP"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "POP"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "JUMPDEST"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "MLOAD"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "DUP1"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "DUP3"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "DUP2"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "MSTORE"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "ADD"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "SWAP2"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "POP"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "POP"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "MLOAD"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "DUP1"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "SWAP2"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "SUB"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "SWAP1"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "RETURN"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "JUMPDEST"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "MLOAD"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "DUP1"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "ADD"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "MSTORE"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "DUP1"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "DUP2"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "MSTORE"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "ADD"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "PUSH",
											"value": "4578616D706C6520466978656420537570706C7920546F6B656E000000000000"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "DUP2"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "MSTORE"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "POP"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "DUP2"
										},
										{
											"begin": 2554,
											"end": 2612,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "JUMPDEST"
										},
										{
											"begin": 6699,
											"end": 6711,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6756,
											"end": 6763,
											"name": "DUP2"
										},
										{
											"begin": 6724,
											"end": 6731,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6724,
											"end": 6743,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6732,
											"end": 6742,
											"name": "CALLER"
										},
										{
											"begin": 6724,
											"end": 6743,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6724,
											"end": 6743,
											"name": "AND"
										},
										{
											"begin": 6724,
											"end": 6743,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6724,
											"end": 6743,
											"name": "AND"
										},
										{
											"begin": 6724,
											"end": 6743,
											"name": "DUP2"
										},
										{
											"begin": 6724,
											"end": 6743,
											"name": "MSTORE"
										},
										{
											"begin": 6724,
											"end": 6743,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6724,
											"end": 6743,
											"name": "ADD"
										},
										{
											"begin": 6724,
											"end": 6743,
											"name": "SWAP1"
										},
										{
											"begin": 6724,
											"end": 6743,
											"name": "DUP2"
										},
										{
											"begin": 6724,
											"end": 6743,
											"name": "MSTORE"
										},
										{
											"begin": 6724,
											"end": 6743,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6724,
											"end": 6743,
											"name": "ADD"
										},
										{
											"begin": 6724,
											"end": 6743,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6724,
											"end": 6743,
											"name": "KECCAK256"
										},
										{
											"begin": 6724,
											"end": 6753,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6744,
											"end": 6752,
											"name": "DUP6"
										},
										{
											"begin": 6724,
											"end": 6753,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6724,
											"end": 6753,
											"name": "AND"
										},
										{
											"begin": 6724,
											"end": 6753,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6724,
											"end": 6753,
											"name": "AND"
										},
										{
											"begin": 6724,
											"end": 6753,
											"name": "DUP2"
										},
										{
											"begin": 6724,
											"end": 6753,
											"name": "MSTORE"
										},
										{
											"begin": 6724,
											"end": 6753,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6724,
											"end": 6753,
											"name": "ADD"
										},
										{
											"begin": 6724,
											"end": 6753,
											"name": "SWAP1"
										},
										{
											"begin": 6724,
											"end": 6753,
											"name": "DUP2"
										},
										{
											"begin": 6724,
											"end": 6753,
											"name": "MSTORE"
										},
										{
											"begin": 6724,
											"end": 6753,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6724,
											"end": 6753,
											"name": "ADD"
										},
										{
											"begin": 6724,
											"end": 6753,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6724,
											"end": 6753,
											"name": "KECCAK256"
										},
										{
											"begin": 6724,
											"end": 6763,
											"name": "DUP2"
										},
										{
											"begin": 6724,
											"end": 6763,
											"name": "SWAP1"
										},
										{
											"begin": 6724,
											"end": 6763,
											"name": "SSTORE"
										},
										{
											"begin": 6724,
											"end": 6763,
											"name": "POP"
										},
										{
											"begin": 6800,
											"end": 6808,
											"name": "DUP3"
										},
										{
											"begin": 6779,
											"end": 6818,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6779,
											"end": 6818,
											"name": "AND"
										},
										{
											"begin": 6788,
											"end": 6798,
											"name": "CALLER"
										},
										{
											"begin": 6779,
											"end": 6818,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6779,
											"end": 6818,
											"name": "AND"
										},
										{
											"begin": 6779,
											"end": 6818,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 6810,
											"end": 6817,
											"name": "DUP5"
										},
										{
											"begin": 6779,
											"end": 6818,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6779,
											"end": 6818,
											"name": "MLOAD"
										},
										{
											"begin": 6779,
											"end": 6818,
											"name": "DUP1"
										},
										{
											"begin": 6779,
											"end": 6818,
											"name": "DUP3"
										},
										{
											"begin": 6779,
											"end": 6818,
											"name": "DUP2"
										},
										{
											"begin": 6779,
											"end": 6818,
											"name": "MSTORE"
										},
										{
											"begin": 6779,
											"end": 6818,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6779,
											"end": 6818,
											"name": "ADD"
										},
										{
											"begin": 6779,
											"end": 6818,
											"name": "SWAP2"
										},
										{
											"begin": 6779,
											"end": 6818,
											"name": "POP"
										},
										{
											"begin": 6779,
											"end": 6818,
											"name": "POP"
										},
										{
											"begin": 6779,
											"end": 6818,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6779,
											"end": 6818,
											"name": "MLOAD"
										},
										{
											"begin": 6779,
											"end": 6818,
											"name": "DUP1"
										},
										{
											"begin": 6779,
											"end": 6818,
											"name": "SWAP2"
										},
										{
											"begin": 6779,
											"end": 6818,
											"name": "SUB"
										},
										{
											"begin": 6779,
											"end": 6818,
											"name": "SWAP1"
										},
										{
											"begin": 6779,
											"end": 6818,
											"name": "LOG3"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6829,
											"end": 6840,
											"name": "SWAP1"
										},
										{
											"begin": 6829,
											"end": 6840,
											"name": "POP"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "SWAP3"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "SWAP2"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "POP"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "POP"
										},
										{
											"begin": 6631,
											"end": 6848,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3783,
											"end": 3874,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 3783,
											"end": 3874,
											"name": "JUMPDEST"
										},
										{
											"begin": 3827,
											"end": 3834,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3854,
											"end": 3866,
											"name": "DUP1"
										},
										{
											"begin": 3854,
											"end": 3866,
											"name": "SLOAD"
										},
										{
											"begin": 3847,
											"end": 3866,
											"name": "SWAP1"
										},
										{
											"begin": 3847,
											"end": 3866,
											"name": "POP"
										},
										{
											"begin": 3783,
											"end": 3874,
											"name": "SWAP1"
										},
										{
											"begin": 3783,
											"end": 3874,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "JUMPDEST"
										},
										{
											"begin": 5517,
											"end": 5521,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5684,
											"end": 5691,
											"name": "DUP2"
										},
										{
											"begin": 5665,
											"end": 5673,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5665,
											"end": 5680,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5679,
											"name": "DUP7"
										},
										{
											"begin": 5665,
											"end": 5680,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5665,
											"end": 5680,
											"name": "AND"
										},
										{
											"begin": 5665,
											"end": 5680,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5665,
											"end": 5680,
											"name": "AND"
										},
										{
											"begin": 5665,
											"end": 5680,
											"name": "DUP2"
										},
										{
											"begin": 5665,
											"end": 5680,
											"name": "MSTORE"
										},
										{
											"begin": 5665,
											"end": 5680,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5680,
											"name": "ADD"
										},
										{
											"begin": 5665,
											"end": 5680,
											"name": "SWAP1"
										},
										{
											"begin": 5665,
											"end": 5680,
											"name": "DUP2"
										},
										{
											"begin": 5665,
											"end": 5680,
											"name": "MSTORE"
										},
										{
											"begin": 5665,
											"end": 5680,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5680,
											"name": "ADD"
										},
										{
											"begin": 5665,
											"end": 5680,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5665,
											"end": 5680,
											"name": "KECCAK256"
										},
										{
											"begin": 5665,
											"end": 5680,
											"name": "SLOAD"
										},
										{
											"begin": 5665,
											"end": 5691,
											"name": "LT"
										},
										{
											"begin": 5665,
											"end": 5691,
											"name": "ISZERO"
										},
										{
											"begin": 5665,
											"end": 5741,
											"name": "DUP1"
										},
										{
											"begin": 5665,
											"end": 5741,
											"name": "ISZERO"
										},
										{
											"begin": 5665,
											"end": 5741,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 5665,
											"end": 5741,
											"name": "JUMPI"
										},
										{
											"begin": 5665,
											"end": 5741,
											"name": "POP"
										},
										{
											"begin": 5734,
											"end": 5741,
											"name": "DUP2"
										},
										{
											"begin": 5704,
											"end": 5711,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 5704,
											"end": 5718,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5712,
											"end": 5717,
											"name": "DUP7"
										},
										{
											"begin": 5704,
											"end": 5718,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5704,
											"end": 5718,
											"name": "AND"
										},
										{
											"begin": 5704,
											"end": 5718,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5704,
											"end": 5718,
											"name": "AND"
										},
										{
											"begin": 5704,
											"end": 5718,
											"name": "DUP2"
										},
										{
											"begin": 5704,
											"end": 5718,
											"name": "MSTORE"
										},
										{
											"begin": 5704,
											"end": 5718,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5704,
											"end": 5718,
											"name": "ADD"
										},
										{
											"begin": 5704,
											"end": 5718,
											"name": "SWAP1"
										},
										{
											"begin": 5704,
											"end": 5718,
											"name": "DUP2"
										},
										{
											"begin": 5704,
											"end": 5718,
											"name": "MSTORE"
										},
										{
											"begin": 5704,
											"end": 5718,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5704,
											"end": 5718,
											"name": "ADD"
										},
										{
											"begin": 5704,
											"end": 5718,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5704,
											"end": 5718,
											"name": "KECCAK256"
										},
										{
											"begin": 5704,
											"end": 5730,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5719,
											"end": 5729,
											"name": "CALLER"
										},
										{
											"begin": 5704,
											"end": 5730,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5704,
											"end": 5730,
											"name": "AND"
										},
										{
											"begin": 5704,
											"end": 5730,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5704,
											"end": 5730,
											"name": "AND"
										},
										{
											"begin": 5704,
											"end": 5730,
											"name": "DUP2"
										},
										{
											"begin": 5704,
											"end": 5730,
											"name": "MSTORE"
										},
										{
											"begin": 5704,
											"end": 5730,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5704,
											"end": 5730,
											"name": "ADD"
										},
										{
											"begin": 5704,
											"end": 5730,
											"name": "SWAP1"
										},
										{
											"begin": 5704,
											"end": 5730,
											"name": "DUP2"
										},
										{
											"begin": 5704,
											"end": 5730,
											"name": "MSTORE"
										},
										{
											"begin": 5704,
											"end": 5730,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5704,
											"end": 5730,
											"name": "ADD"
										},
										{
											"begin": 5704,
											"end": 5730,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5704,
											"end": 5730,
											"name": "KECCAK256"
										},
										{
											"begin": 5704,
											"end": 5730,
											"name": "SLOAD"
										},
										{
											"begin": 5704,
											"end": 5741,
											"name": "LT"
										},
										{
											"begin": 5704,
											"end": 5741,
											"name": "ISZERO"
										},
										{
											"begin": 5665,
											"end": 5741,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 5665,
											"end": 5741,
											"name": "JUMPDEST"
										},
										{
											"begin": 5665,
											"end": 5765,
											"name": "DUP1"
										},
										{
											"begin": 5665,
											"end": 5765,
											"name": "ISZERO"
										},
										{
											"begin": 5665,
											"end": 5765,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 5665,
											"end": 5765,
											"name": "JUMPI"
										},
										{
											"begin": 5665,
											"end": 5765,
											"name": "POP"
										},
										{
											"begin": 5764,
											"end": 5765,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5754,
											"end": 5761,
											"name": "DUP3"
										},
										{
											"begin": 5754,
											"end": 5765,
											"name": "GT"
										},
										{
											"begin": 5665,
											"end": 5765,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 5665,
											"end": 5765,
											"name": "JUMPDEST"
										},
										{
											"begin": 5665,
											"end": 5879,
											"name": "DUP1"
										},
										{
											"begin": 5665,
											"end": 5879,
											"name": "ISZERO"
										},
										{
											"begin": 5665,
											"end": 5879,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 5665,
											"end": 5879,
											"name": "JUMPI"
										},
										{
											"begin": 5665,
											"end": 5879,
											"name": "POP"
										},
										{
											"begin": 5866,
											"end": 5874,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5866,
											"end": 5879,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5875,
											"end": 5878,
											"name": "DUP5"
										},
										{
											"begin": 5866,
											"end": 5879,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5866,
											"end": 5879,
											"name": "AND"
										},
										{
											"begin": 5866,
											"end": 5879,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5866,
											"end": 5879,
											"name": "AND"
										},
										{
											"begin": 5866,
											"end": 5879,
											"name": "DUP2"
										},
										{
											"begin": 5866,
											"end": 5879,
											"name": "MSTORE"
										},
										{
											"begin": 5866,
											"end": 5879,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5866,
											"end": 5879,
											"name": "ADD"
										},
										{
											"begin": 5866,
											"end": 5879,
											"name": "SWAP1"
										},
										{
											"begin": 5866,
											"end": 5879,
											"name": "DUP2"
										},
										{
											"begin": 5866,
											"end": 5879,
											"name": "MSTORE"
										},
										{
											"begin": 5866,
											"end": 5879,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5866,
											"end": 5879,
											"name": "ADD"
										},
										{
											"begin": 5866,
											"end": 5879,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5866,
											"end": 5879,
											"name": "KECCAK256"
										},
										{
											"begin": 5866,
											"end": 5879,
											"name": "SLOAD"
										},
										{
											"begin": 5837,
											"end": 5863,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 5855,
											"end": 5862,
											"name": "DUP4"
										},
										{
											"begin": 5837,
											"end": 5845,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5837,
											"end": 5850,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5846,
											"end": 5849,
											"name": "DUP8"
										},
										{
											"begin": 5837,
											"end": 5850,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5837,
											"end": 5850,
											"name": "AND"
										},
										{
											"begin": 5837,
											"end": 5850,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5837,
											"end": 5850,
											"name": "AND"
										},
										{
											"begin": 5837,
											"end": 5850,
											"name": "DUP2"
										},
										{
											"begin": 5837,
											"end": 5850,
											"name": "MSTORE"
										},
										{
											"begin": 5837,
											"end": 5850,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5837,
											"end": 5850,
											"name": "ADD"
										},
										{
											"begin": 5837,
											"end": 5850,
											"name": "SWAP1"
										},
										{
											"begin": 5837,
											"end": 5850,
											"name": "DUP2"
										},
										{
											"begin": 5837,
											"end": 5850,
											"name": "MSTORE"
										},
										{
											"begin": 5837,
											"end": 5850,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5837,
											"end": 5850,
											"name": "ADD"
										},
										{
											"begin": 5837,
											"end": 5850,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5837,
											"end": 5850,
											"name": "KECCAK256"
										},
										{
											"begin": 5837,
											"end": 5850,
											"name": "SLOAD"
										},
										{
											"begin": 5837,
											"end": 5854,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 5837,
											"end": 5854,
											"name": "SWAP1"
										},
										{
											"begin": 5837,
											"end": 5863,
											"name": "SWAP2"
										},
										{
											"begin": 5837,
											"end": 5863,
											"name": "SWAP1"
										},
										{
											"begin": 5837,
											"end": 5863,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5837,
											"end": 5863,
											"name": "AND"
										},
										{
											"begin": 5837,
											"end": 5863,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5837,
											"end": 5863,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 5837,
											"end": 5863,
											"name": "JUMPDEST"
										},
										{
											"begin": 5837,
											"end": 5879,
											"name": "GT"
										},
										{
											"begin": 5665,
											"end": 5879,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 5665,
											"end": 5879,
											"name": "JUMPDEST"
										},
										{
											"begin": 5661,
											"end": 6429,
											"name": "ISZERO"
										},
										{
											"begin": 5661,
											"end": 6429,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 5661,
											"end": 6429,
											"name": "JUMPI"
										},
										{
											"begin": 5959,
											"end": 5987,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 5979,
											"end": 5986,
											"name": "DUP3"
										},
										{
											"begin": 5959,
											"end": 5967,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5959,
											"end": 5974,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5968,
											"end": 5973,
											"name": "DUP8"
										},
										{
											"begin": 5959,
											"end": 5974,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5959,
											"end": 5974,
											"name": "AND"
										},
										{
											"begin": 5959,
											"end": 5974,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5959,
											"end": 5974,
											"name": "AND"
										},
										{
											"begin": 5959,
											"end": 5974,
											"name": "DUP2"
										},
										{
											"begin": 5959,
											"end": 5974,
											"name": "MSTORE"
										},
										{
											"begin": 5959,
											"end": 5974,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5959,
											"end": 5974,
											"name": "ADD"
										},
										{
											"begin": 5959,
											"end": 5974,
											"name": "SWAP1"
										},
										{
											"begin": 5959,
											"end": 5974,
											"name": "DUP2"
										},
										{
											"begin": 5959,
											"end": 5974,
											"name": "MSTORE"
										},
										{
											"begin": 5959,
											"end": 5974,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5959,
											"end": 5974,
											"name": "ADD"
										},
										{
											"begin": 5959,
											"end": 5974,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5959,
											"end": 5974,
											"name": "KECCAK256"
										},
										{
											"begin": 5959,
											"end": 5974,
											"name": "SLOAD"
										},
										{
											"begin": 5959,
											"end": 5978,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 5959,
											"end": 5978,
											"name": "SWAP1"
										},
										{
											"begin": 5959,
											"end": 5987,
											"name": "SWAP2"
										},
										{
											"begin": 5959,
											"end": 5987,
											"name": "SWAP1"
										},
										{
											"begin": 5959,
											"end": 5987,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5959,
											"end": 5987,
											"name": "AND"
										},
										{
											"begin": 5959,
											"end": 5987,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5959,
											"end": 5987,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 5959,
											"end": 5987,
											"name": "JUMPDEST"
										},
										{
											"begin": 5941,
											"end": 5949,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5941,
											"end": 5956,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5950,
											"end": 5955,
											"name": "DUP7"
										},
										{
											"begin": 5941,
											"end": 5956,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5941,
											"end": 5956,
											"name": "AND"
										},
										{
											"begin": 5941,
											"end": 5956,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5941,
											"end": 5956,
											"name": "AND"
										},
										{
											"begin": 5941,
											"end": 5956,
											"name": "DUP2"
										},
										{
											"begin": 5941,
											"end": 5956,
											"name": "MSTORE"
										},
										{
											"begin": 5941,
											"end": 5956,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5941,
											"end": 5956,
											"name": "ADD"
										},
										{
											"begin": 5941,
											"end": 5956,
											"name": "SWAP1"
										},
										{
											"begin": 5941,
											"end": 5956,
											"name": "DUP2"
										},
										{
											"begin": 5941,
											"end": 5956,
											"name": "MSTORE"
										},
										{
											"begin": 5941,
											"end": 5956,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5941,
											"end": 5956,
											"name": "ADD"
										},
										{
											"begin": 5941,
											"end": 5956,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5941,
											"end": 5956,
											"name": "KECCAK256"
										},
										{
											"begin": 5941,
											"end": 5987,
											"name": "DUP2"
										},
										{
											"begin": 5941,
											"end": 5987,
											"name": "SWAP1"
										},
										{
											"begin": 5941,
											"end": 5987,
											"name": "SSTORE"
										},
										{
											"begin": 5941,
											"end": 5987,
											"name": "POP"
										},
										{
											"begin": 6111,
											"end": 6150,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 6142,
											"end": 6149,
											"name": "DUP3"
										},
										{
											"begin": 6111,
											"end": 6118,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6111,
											"end": 6125,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6119,
											"end": 6124,
											"name": "DUP8"
										},
										{
											"begin": 6111,
											"end": 6125,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6111,
											"end": 6125,
											"name": "AND"
										},
										{
											"begin": 6111,
											"end": 6125,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6111,
											"end": 6125,
											"name": "AND"
										},
										{
											"begin": 6111,
											"end": 6125,
											"name": "DUP2"
										},
										{
											"begin": 6111,
											"end": 6125,
											"name": "MSTORE"
										},
										{
											"begin": 6111,
											"end": 6125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6111,
											"end": 6125,
											"name": "ADD"
										},
										{
											"begin": 6111,
											"end": 6125,
											"name": "SWAP1"
										},
										{
											"begin": 6111,
											"end": 6125,
											"name": "DUP2"
										},
										{
											"begin": 6111,
											"end": 6125,
											"name": "MSTORE"
										},
										{
											"begin": 6111,
											"end": 6125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6111,
											"end": 6125,
											"name": "ADD"
										},
										{
											"begin": 6111,
											"end": 6125,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6111,
											"end": 6125,
											"name": "KECCAK256"
										},
										{
											"begin": 6111,
											"end": 6137,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6136,
											"name": "CALLER"
										},
										{
											"begin": 6111,
											"end": 6137,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6111,
											"end": 6137,
											"name": "AND"
										},
										{
											"begin": 6111,
											"end": 6137,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6111,
											"end": 6137,
											"name": "AND"
										},
										{
											"begin": 6111,
											"end": 6137,
											"name": "DUP2"
										},
										{
											"begin": 6111,
											"end": 6137,
											"name": "MSTORE"
										},
										{
											"begin": 6111,
											"end": 6137,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6111,
											"end": 6137,
											"name": "ADD"
										},
										{
											"begin": 6111,
											"end": 6137,
											"name": "SWAP1"
										},
										{
											"begin": 6111,
											"end": 6137,
											"name": "DUP2"
										},
										{
											"begin": 6111,
											"end": 6137,
											"name": "MSTORE"
										},
										{
											"begin": 6111,
											"end": 6137,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6111,
											"end": 6137,
											"name": "ADD"
										},
										{
											"begin": 6111,
											"end": 6137,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6111,
											"end": 6137,
											"name": "KECCAK256"
										},
										{
											"begin": 6111,
											"end": 6137,
											"name": "SLOAD"
										},
										{
											"begin": 6111,
											"end": 6141,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 6111,
											"end": 6141,
											"name": "SWAP1"
										},
										{
											"begin": 6111,
											"end": 6150,
											"name": "SWAP2"
										},
										{
											"begin": 6111,
											"end": 6150,
											"name": "SWAP1"
										},
										{
											"begin": 6111,
											"end": 6150,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6111,
											"end": 6150,
											"name": "AND"
										},
										{
											"begin": 6111,
											"end": 6150,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6111,
											"end": 6150,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 6111,
											"end": 6150,
											"name": "JUMPDEST"
										},
										{
											"begin": 6082,
											"end": 6089,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6082,
											"end": 6096,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6090,
											"end": 6095,
											"name": "DUP7"
										},
										{
											"begin": 6082,
											"end": 6096,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6082,
											"end": 6096,
											"name": "AND"
										},
										{
											"begin": 6082,
											"end": 6096,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6082,
											"end": 6096,
											"name": "AND"
										},
										{
											"begin": 6082,
											"end": 6096,
											"name": "DUP2"
										},
										{
											"begin": 6082,
											"end": 6096,
											"name": "MSTORE"
										},
										{
											"begin": 6082,
											"end": 6096,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6082,
											"end": 6096,
											"name": "ADD"
										},
										{
											"begin": 6082,
											"end": 6096,
											"name": "SWAP1"
										},
										{
											"begin": 6082,
											"end": 6096,
											"name": "DUP2"
										},
										{
											"begin": 6082,
											"end": 6096,
											"name": "MSTORE"
										},
										{
											"begin": 6082,
											"end": 6096,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6082,
											"end": 6096,
											"name": "ADD"
										},
										{
											"begin": 6082,
											"end": 6096,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6082,
											"end": 6096,
											"name": "KECCAK256"
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6107,
											"name": "CALLER"
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "AND"
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "AND"
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "DUP2"
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "MSTORE"
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "ADD"
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "SWAP1"
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "DUP2"
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "MSTORE"
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "ADD"
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "KECCAK256"
										},
										{
											"begin": 6082,
											"end": 6150,
											"name": "DUP2"
										},
										{
											"begin": 6082,
											"end": 6150,
											"name": "SWAP1"
										},
										{
											"begin": 6082,
											"end": 6150,
											"name": "SSTORE"
										},
										{
											"begin": 6082,
											"end": 6150,
											"name": "POP"
										},
										{
											"begin": 6248,
											"end": 6274,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 6266,
											"end": 6273,
											"name": "DUP3"
										},
										{
											"begin": 6248,
											"end": 6256,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6248,
											"end": 6261,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6257,
											"end": 6260,
											"name": "DUP7"
										},
										{
											"begin": 6248,
											"end": 6261,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6248,
											"end": 6261,
											"name": "AND"
										},
										{
											"begin": 6248,
											"end": 6261,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6248,
											"end": 6261,
											"name": "AND"
										},
										{
											"begin": 6248,
											"end": 6261,
											"name": "DUP2"
										},
										{
											"begin": 6248,
											"end": 6261,
											"name": "MSTORE"
										},
										{
											"begin": 6248,
											"end": 6261,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6248,
											"end": 6261,
											"name": "ADD"
										},
										{
											"begin": 6248,
											"end": 6261,
											"name": "SWAP1"
										},
										{
											"begin": 6248,
											"end": 6261,
											"name": "DUP2"
										},
										{
											"begin": 6248,
											"end": 6261,
											"name": "MSTORE"
										},
										{
											"begin": 6248,
											"end": 6261,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6248,
											"end": 6261,
											"name": "ADD"
										},
										{
											"begin": 6248,
											"end": 6261,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6248,
											"end": 6261,
											"name": "KECCAK256"
										},
										{
											"begin": 6248,
											"end": 6261,
											"name": "SLOAD"
										},
										{
											"begin": 6248,
											"end": 6265,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 6248,
											"end": 6265,
											"name": "SWAP1"
										},
										{
											"begin": 6248,
											"end": 6274,
											"name": "SWAP2"
										},
										{
											"begin": 6248,
											"end": 6274,
											"name": "SWAP1"
										},
										{
											"begin": 6248,
											"end": 6274,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6248,
											"end": 6274,
											"name": "AND"
										},
										{
											"begin": 6248,
											"end": 6274,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6248,
											"end": 6274,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 6248,
											"end": 6274,
											"name": "JUMPDEST"
										},
										{
											"begin": 6232,
											"end": 6240,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6232,
											"end": 6245,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6241,
											"end": 6244,
											"name": "DUP6"
										},
										{
											"begin": 6232,
											"end": 6245,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6232,
											"end": 6245,
											"name": "AND"
										},
										{
											"begin": 6232,
											"end": 6245,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6232,
											"end": 6245,
											"name": "AND"
										},
										{
											"begin": 6232,
											"end": 6245,
											"name": "DUP2"
										},
										{
											"begin": 6232,
											"end": 6245,
											"name": "MSTORE"
										},
										{
											"begin": 6232,
											"end": 6245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6232,
											"end": 6245,
											"name": "ADD"
										},
										{
											"begin": 6232,
											"end": 6245,
											"name": "SWAP1"
										},
										{
											"begin": 6232,
											"end": 6245,
											"name": "DUP2"
										},
										{
											"begin": 6232,
											"end": 6245,
											"name": "MSTORE"
										},
										{
											"begin": 6232,
											"end": 6245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6232,
											"end": 6245,
											"name": "ADD"
										},
										{
											"begin": 6232,
											"end": 6245,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6232,
											"end": 6245,
											"name": "KECCAK256"
										},
										{
											"begin": 6232,
											"end": 6274,
											"name": "DUP2"
										},
										{
											"begin": 6232,
											"end": 6274,
											"name": "SWAP1"
										},
										{
											"begin": 6232,
											"end": 6274,
											"name": "SSTORE"
										},
										{
											"begin": 6232,
											"end": 6274,
											"name": "POP"
										},
										{
											"begin": 6324,
											"end": 6327,
											"name": "DUP3"
										},
										{
											"begin": 6308,
											"end": 6337,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6308,
											"end": 6337,
											"name": "AND"
										},
										{
											"begin": 6317,
											"end": 6322,
											"name": "DUP5"
										},
										{
											"begin": 6308,
											"end": 6337,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6308,
											"end": 6337,
											"name": "AND"
										},
										{
											"begin": 6308,
											"end": 6337,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6329,
											"end": 6336,
											"name": "DUP5"
										},
										{
											"begin": 6308,
											"end": 6337,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6308,
											"end": 6337,
											"name": "MLOAD"
										},
										{
											"begin": 6308,
											"end": 6337,
											"name": "DUP1"
										},
										{
											"begin": 6308,
											"end": 6337,
											"name": "DUP3"
										},
										{
											"begin": 6308,
											"end": 6337,
											"name": "DUP2"
										},
										{
											"begin": 6308,
											"end": 6337,
											"name": "MSTORE"
										},
										{
											"begin": 6308,
											"end": 6337,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6308,
											"end": 6337,
											"name": "ADD"
										},
										{
											"begin": 6308,
											"end": 6337,
											"name": "SWAP2"
										},
										{
											"begin": 6308,
											"end": 6337,
											"name": "POP"
										},
										{
											"begin": 6308,
											"end": 6337,
											"name": "POP"
										},
										{
											"begin": 6308,
											"end": 6337,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6308,
											"end": 6337,
											"name": "MLOAD"
										},
										{
											"begin": 6308,
											"end": 6337,
											"name": "DUP1"
										},
										{
											"begin": 6308,
											"end": 6337,
											"name": "SWAP2"
										},
										{
											"begin": 6308,
											"end": 6337,
											"name": "SUB"
										},
										{
											"begin": 6308,
											"end": 6337,
											"name": "SWAP1"
										},
										{
											"begin": 6308,
											"end": 6337,
											"name": "LOG3"
										},
										{
											"begin": 6359,
											"end": 6363,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6352,
											"end": 6363,
											"name": "SWAP1"
										},
										{
											"begin": 6352,
											"end": 6363,
											"name": "POP"
										},
										{
											"begin": 6352,
											"end": 6363,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 6352,
											"end": 6363,
											"name": "JUMP"
										},
										{
											"begin": 5661,
											"end": 6429,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 5661,
											"end": 6429,
											"name": "JUMPDEST"
										},
										{
											"begin": 6412,
											"end": 6417,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6417,
											"name": "SWAP1"
										},
										{
											"begin": 6405,
											"end": 6417,
											"name": "POP"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "JUMPDEST"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "SWAP4"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "SWAP3"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "POP"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "POP"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "POP"
										},
										{
											"begin": 5412,
											"end": 6436,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "JUMPDEST"
										},
										{
											"begin": 2652,
											"end": 2653,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "DUP2"
										},
										{
											"begin": 2619,
											"end": 2653,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "JUMPDEST"
										},
										{
											"begin": 3991,
											"end": 3998,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4026,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4018,
											"end": 4034,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4027,
											"end": 4033,
											"name": "DUP4"
										},
										{
											"begin": 4018,
											"end": 4034,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4018,
											"end": 4034,
											"name": "AND"
										},
										{
											"begin": 4018,
											"end": 4034,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4018,
											"end": 4034,
											"name": "AND"
										},
										{
											"begin": 4018,
											"end": 4034,
											"name": "DUP2"
										},
										{
											"begin": 4018,
											"end": 4034,
											"name": "MSTORE"
										},
										{
											"begin": 4018,
											"end": 4034,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4018,
											"end": 4034,
											"name": "ADD"
										},
										{
											"begin": 4018,
											"end": 4034,
											"name": "SWAP1"
										},
										{
											"begin": 4018,
											"end": 4034,
											"name": "DUP2"
										},
										{
											"begin": 4018,
											"end": 4034,
											"name": "MSTORE"
										},
										{
											"begin": 4018,
											"end": 4034,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4018,
											"end": 4034,
											"name": "ADD"
										},
										{
											"begin": 4018,
											"end": 4034,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4034,
											"name": "KECCAK256"
										},
										{
											"begin": 4018,
											"end": 4034,
											"name": "SLOAD"
										},
										{
											"begin": 4011,
											"end": 4034,
											"name": "SWAP1"
										},
										{
											"begin": 4011,
											"end": 4034,
											"name": "POP"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "SWAP2"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "SWAP1"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "POP"
										},
										{
											"begin": 3935,
											"end": 4042,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "JUMPDEST"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "SLOAD"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "EXP"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "SWAP1"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "DIV"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "AND"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "DUP2"
										},
										{
											"begin": 2868,
											"end": 2888,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "JUMPDEST"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "MLOAD"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "DUP1"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "ADD"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "MSTORE"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "DUP1"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "DUP2"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "MSTORE"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "ADD"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "PUSH",
											"value": "4649584544000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "DUP2"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "MSTORE"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "POP"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "DUP2"
										},
										{
											"begin": 2508,
											"end": 2547,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "JUMPDEST"
										},
										{
											"begin": 4183,
											"end": 4195,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4236,
											"end": 4243,
											"name": "DUP2"
										},
										{
											"begin": 4212,
											"end": 4220,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4212,
											"end": 4232,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4221,
											"end": 4231,
											"name": "CALLER"
										},
										{
											"begin": 4212,
											"end": 4232,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4212,
											"end": 4232,
											"name": "AND"
										},
										{
											"begin": 4212,
											"end": 4232,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4212,
											"end": 4232,
											"name": "AND"
										},
										{
											"begin": 4212,
											"end": 4232,
											"name": "DUP2"
										},
										{
											"begin": 4212,
											"end": 4232,
											"name": "MSTORE"
										},
										{
											"begin": 4212,
											"end": 4232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4212,
											"end": 4232,
											"name": "ADD"
										},
										{
											"begin": 4212,
											"end": 4232,
											"name": "SWAP1"
										},
										{
											"begin": 4212,
											"end": 4232,
											"name": "DUP2"
										},
										{
											"begin": 4212,
											"end": 4232,
											"name": "MSTORE"
										},
										{
											"begin": 4212,
											"end": 4232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4212,
											"end": 4232,
											"name": "ADD"
										},
										{
											"begin": 4212,
											"end": 4232,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4212,
											"end": 4232,
											"name": "KECCAK256"
										},
										{
											"begin": 4212,
											"end": 4232,
											"name": "SLOAD"
										},
										{
											"begin": 4212,
											"end": 4243,
											"name": "LT"
										},
										{
											"begin": 4212,
											"end": 4243,
											"name": "ISZERO"
										},
										{
											"begin": 4212,
											"end": 4267,
											"name": "DUP1"
										},
										{
											"begin": 4212,
											"end": 4267,
											"name": "ISZERO"
										},
										{
											"begin": 4212,
											"end": 4267,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 4212,
											"end": 4267,
											"name": "JUMPI"
										},
										{
											"begin": 4212,
											"end": 4267,
											"name": "POP"
										},
										{
											"begin": 4266,
											"end": 4267,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4256,
											"end": 4263,
											"name": "DUP3"
										},
										{
											"begin": 4256,
											"end": 4267,
											"name": "GT"
										},
										{
											"begin": 4212,
											"end": 4267,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 4212,
											"end": 4267,
											"name": "JUMPDEST"
										},
										{
											"begin": 4212,
											"end": 4512,
											"name": "DUP1"
										},
										{
											"begin": 4212,
											"end": 4512,
											"name": "ISZERO"
										},
										{
											"begin": 4212,
											"end": 4512,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 4212,
											"end": 4512,
											"name": "JUMPI"
										},
										{
											"begin": 4212,
											"end": 4512,
											"name": "POP"
										},
										{
											"begin": 4499,
											"end": 4507,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4499,
											"end": 4512,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4511,
											"name": "DUP5"
										},
										{
											"begin": 4499,
											"end": 4512,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4499,
											"end": 4512,
											"name": "AND"
										},
										{
											"begin": 4499,
											"end": 4512,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4499,
											"end": 4512,
											"name": "AND"
										},
										{
											"begin": 4499,
											"end": 4512,
											"name": "DUP2"
										},
										{
											"begin": 4499,
											"end": 4512,
											"name": "MSTORE"
										},
										{
											"begin": 4499,
											"end": 4512,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4499,
											"end": 4512,
											"name": "ADD"
										},
										{
											"begin": 4499,
											"end": 4512,
											"name": "SWAP1"
										},
										{
											"begin": 4499,
											"end": 4512,
											"name": "DUP2"
										},
										{
											"begin": 4499,
											"end": 4512,
											"name": "MSTORE"
										},
										{
											"begin": 4499,
											"end": 4512,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4499,
											"end": 4512,
											"name": "ADD"
										},
										{
											"begin": 4499,
											"end": 4512,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4499,
											"end": 4512,
											"name": "KECCAK256"
										},
										{
											"begin": 4499,
											"end": 4512,
											"name": "SLOAD"
										},
										{
											"begin": 4469,
											"end": 4495,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 4487,
											"end": 4494,
											"name": "DUP4"
										},
										{
											"begin": 4469,
											"end": 4477,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4469,
											"end": 4482,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4478,
											"end": 4481,
											"name": "DUP8"
										},
										{
											"begin": 4469,
											"end": 4482,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4469,
											"end": 4482,
											"name": "AND"
										},
										{
											"begin": 4469,
											"end": 4482,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4469,
											"end": 4482,
											"name": "AND"
										},
										{
											"begin": 4469,
											"end": 4482,
											"name": "DUP2"
										},
										{
											"begin": 4469,
											"end": 4482,
											"name": "MSTORE"
										},
										{
											"begin": 4469,
											"end": 4482,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4469,
											"end": 4482,
											"name": "ADD"
										},
										{
											"begin": 4469,
											"end": 4482,
											"name": "SWAP1"
										},
										{
											"begin": 4469,
											"end": 4482,
											"name": "DUP2"
										},
										{
											"begin": 4469,
											"end": 4482,
											"name": "MSTORE"
										},
										{
											"begin": 4469,
											"end": 4482,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4469,
											"end": 4482,
											"name": "ADD"
										},
										{
											"begin": 4469,
											"end": 4482,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4469,
											"end": 4482,
											"name": "KECCAK256"
										},
										{
											"begin": 4469,
											"end": 4482,
											"name": "SLOAD"
										},
										{
											"begin": 4469,
											"end": 4486,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 4469,
											"end": 4486,
											"name": "SWAP1"
										},
										{
											"begin": 4469,
											"end": 4495,
											"name": "SWAP2"
										},
										{
											"begin": 4469,
											"end": 4495,
											"name": "SWAP1"
										},
										{
											"begin": 4469,
											"end": 4495,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4469,
											"end": 4495,
											"name": "AND"
										},
										{
											"begin": 4469,
											"end": 4495,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4469,
											"end": 4495,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 4469,
											"end": 4495,
											"name": "JUMPDEST"
										},
										{
											"begin": 4468,
											"end": 4512,
											"name": "GT"
										},
										{
											"begin": 4212,
											"end": 4512,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 4212,
											"end": 4512,
											"name": "JUMPDEST"
										},
										{
											"begin": 4208,
											"end": 4919,
											"name": "ISZERO"
										},
										{
											"begin": 4208,
											"end": 4919,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 4208,
											"end": 4919,
											"name": "JUMPI"
										},
										{
											"begin": 4602,
											"end": 4635,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 4627,
											"end": 4634,
											"name": "DUP3"
										},
										{
											"begin": 4602,
											"end": 4610,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4602,
											"end": 4622,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4611,
											"end": 4621,
											"name": "CALLER"
										},
										{
											"begin": 4602,
											"end": 4622,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4602,
											"end": 4622,
											"name": "AND"
										},
										{
											"begin": 4602,
											"end": 4622,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4602,
											"end": 4622,
											"name": "AND"
										},
										{
											"begin": 4602,
											"end": 4622,
											"name": "DUP2"
										},
										{
											"begin": 4602,
											"end": 4622,
											"name": "MSTORE"
										},
										{
											"begin": 4602,
											"end": 4622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4602,
											"end": 4622,
											"name": "ADD"
										},
										{
											"begin": 4602,
											"end": 4622,
											"name": "SWAP1"
										},
										{
											"begin": 4602,
											"end": 4622,
											"name": "DUP2"
										},
										{
											"begin": 4602,
											"end": 4622,
											"name": "MSTORE"
										},
										{
											"begin": 4602,
											"end": 4622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4602,
											"end": 4622,
											"name": "ADD"
										},
										{
											"begin": 4602,
											"end": 4622,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4602,
											"end": 4622,
											"name": "KECCAK256"
										},
										{
											"begin": 4602,
											"end": 4622,
											"name": "SLOAD"
										},
										{
											"begin": 4602,
											"end": 4626,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 4602,
											"end": 4626,
											"name": "SWAP1"
										},
										{
											"begin": 4602,
											"end": 4635,
											"name": "SWAP2"
										},
										{
											"begin": 4602,
											"end": 4635,
											"name": "SWAP1"
										},
										{
											"begin": 4602,
											"end": 4635,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4602,
											"end": 4635,
											"name": "AND"
										},
										{
											"begin": 4602,
											"end": 4635,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4602,
											"end": 4635,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 4602,
											"end": 4635,
											"name": "JUMPDEST"
										},
										{
											"begin": 4579,
											"end": 4587,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4579,
											"end": 4599,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4588,
											"end": 4598,
											"name": "CALLER"
										},
										{
											"begin": 4579,
											"end": 4599,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4579,
											"end": 4599,
											"name": "AND"
										},
										{
											"begin": 4579,
											"end": 4599,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4579,
											"end": 4599,
											"name": "AND"
										},
										{
											"begin": 4579,
											"end": 4599,
											"name": "DUP2"
										},
										{
											"begin": 4579,
											"end": 4599,
											"name": "MSTORE"
										},
										{
											"begin": 4579,
											"end": 4599,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4579,
											"end": 4599,
											"name": "ADD"
										},
										{
											"begin": 4579,
											"end": 4599,
											"name": "SWAP1"
										},
										{
											"begin": 4579,
											"end": 4599,
											"name": "DUP2"
										},
										{
											"begin": 4579,
											"end": 4599,
											"name": "MSTORE"
										},
										{
											"begin": 4579,
											"end": 4599,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4579,
											"end": 4599,
											"name": "ADD"
										},
										{
											"begin": 4579,
											"end": 4599,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4599,
											"name": "KECCAK256"
										},
										{
											"begin": 4579,
											"end": 4635,
											"name": "DUP2"
										},
										{
											"begin": 4579,
											"end": 4635,
											"name": "SWAP1"
										},
										{
											"begin": 4579,
											"end": 4635,
											"name": "SSTORE"
										},
										{
											"begin": 4579,
											"end": 4635,
											"name": "POP"
										},
										{
											"begin": 4733,
											"end": 4759,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 4751,
											"end": 4758,
											"name": "DUP3"
										},
										{
											"begin": 4733,
											"end": 4741,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4733,
											"end": 4746,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4742,
											"end": 4745,
											"name": "DUP7"
										},
										{
											"begin": 4733,
											"end": 4746,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4733,
											"end": 4746,
											"name": "AND"
										},
										{
											"begin": 4733,
											"end": 4746,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4733,
											"end": 4746,
											"name": "AND"
										},
										{
											"begin": 4733,
											"end": 4746,
											"name": "DUP2"
										},
										{
											"begin": 4733,
											"end": 4746,
											"name": "MSTORE"
										},
										{
											"begin": 4733,
											"end": 4746,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4733,
											"end": 4746,
											"name": "ADD"
										},
										{
											"begin": 4733,
											"end": 4746,
											"name": "SWAP1"
										},
										{
											"begin": 4733,
											"end": 4746,
											"name": "DUP2"
										},
										{
											"begin": 4733,
											"end": 4746,
											"name": "MSTORE"
										},
										{
											"begin": 4733,
											"end": 4746,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4733,
											"end": 4746,
											"name": "ADD"
										},
										{
											"begin": 4733,
											"end": 4746,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4733,
											"end": 4746,
											"name": "KECCAK256"
										},
										{
											"begin": 4733,
											"end": 4746,
											"name": "SLOAD"
										},
										{
											"begin": 4733,
											"end": 4750,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 4733,
											"end": 4750,
											"name": "SWAP1"
										},
										{
											"begin": 4733,
											"end": 4759,
											"name": "SWAP2"
										},
										{
											"begin": 4733,
											"end": 4759,
											"name": "SWAP1"
										},
										{
											"begin": 4733,
											"end": 4759,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4733,
											"end": 4759,
											"name": "AND"
										},
										{
											"begin": 4733,
											"end": 4759,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4733,
											"end": 4759,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 4733,
											"end": 4759,
											"name": "JUMPDEST"
										},
										{
											"begin": 4717,
											"end": 4725,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4717,
											"end": 4730,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4729,
											"name": "DUP6"
										},
										{
											"begin": 4717,
											"end": 4730,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4717,
											"end": 4730,
											"name": "AND"
										},
										{
											"begin": 4717,
											"end": 4730,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4717,
											"end": 4730,
											"name": "AND"
										},
										{
											"begin": 4717,
											"end": 4730,
											"name": "DUP2"
										},
										{
											"begin": 4717,
											"end": 4730,
											"name": "MSTORE"
										},
										{
											"begin": 4717,
											"end": 4730,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4717,
											"end": 4730,
											"name": "ADD"
										},
										{
											"begin": 4717,
											"end": 4730,
											"name": "SWAP1"
										},
										{
											"begin": 4717,
											"end": 4730,
											"name": "DUP2"
										},
										{
											"begin": 4717,
											"end": 4730,
											"name": "MSTORE"
										},
										{
											"begin": 4717,
											"end": 4730,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4717,
											"end": 4730,
											"name": "ADD"
										},
										{
											"begin": 4717,
											"end": 4730,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4717,
											"end": 4730,
											"name": "KECCAK256"
										},
										{
											"begin": 4717,
											"end": 4759,
											"name": "DUP2"
										},
										{
											"begin": 4717,
											"end": 4759,
											"name": "SWAP1"
										},
										{
											"begin": 4717,
											"end": 4759,
											"name": "SSTORE"
										},
										{
											"begin": 4717,
											"end": 4759,
											"name": "POP"
										},
										{
											"begin": 4814,
											"end": 4817,
											"name": "DUP3"
										},
										{
											"begin": 4793,
											"end": 4827,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4793,
											"end": 4827,
											"name": "AND"
										},
										{
											"begin": 4802,
											"end": 4812,
											"name": "CALLER"
										},
										{
											"begin": 4793,
											"end": 4827,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4793,
											"end": 4827,
											"name": "AND"
										},
										{
											"begin": 4793,
											"end": 4827,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 4819,
											"end": 4826,
											"name": "DUP5"
										},
										{
											"begin": 4793,
											"end": 4827,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4793,
											"end": 4827,
											"name": "MLOAD"
										},
										{
											"begin": 4793,
											"end": 4827,
											"name": "DUP1"
										},
										{
											"begin": 4793,
											"end": 4827,
											"name": "DUP3"
										},
										{
											"begin": 4793,
											"end": 4827,
											"name": "DUP2"
										},
										{
											"begin": 4793,
											"end": 4827,
											"name": "MSTORE"
										},
										{
											"begin": 4793,
											"end": 4827,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4793,
											"end": 4827,
											"name": "ADD"
										},
										{
											"begin": 4793,
											"end": 4827,
											"name": "SWAP2"
										},
										{
											"begin": 4793,
											"end": 4827,
											"name": "POP"
										},
										{
											"begin": 4793,
											"end": 4827,
											"name": "POP"
										},
										{
											"begin": 4793,
											"end": 4827,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4793,
											"end": 4827,
											"name": "MLOAD"
										},
										{
											"begin": 4793,
											"end": 4827,
											"name": "DUP1"
										},
										{
											"begin": 4793,
											"end": 4827,
											"name": "SWAP2"
										},
										{
											"begin": 4793,
											"end": 4827,
											"name": "SUB"
										},
										{
											"begin": 4793,
											"end": 4827,
											"name": "SWAP1"
										},
										{
											"begin": 4793,
											"end": 4827,
											"name": "LOG3"
										},
										{
											"begin": 4849,
											"end": 4853,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4842,
											"end": 4853,
											"name": "SWAP1"
										},
										{
											"begin": 4842,
											"end": 4853,
											"name": "POP"
										},
										{
											"begin": 4842,
											"end": 4853,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 4842,
											"end": 4853,
											"name": "JUMP"
										},
										{
											"begin": 4208,
											"end": 4919,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 4208,
											"end": 4919,
											"name": "JUMPDEST"
										},
										{
											"begin": 4902,
											"end": 4907,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4895,
											"end": 4907,
											"name": "SWAP1"
										},
										{
											"begin": 4895,
											"end": 4907,
											"name": "POP"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "JUMPDEST"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "SWAP3"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "SWAP2"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "POP"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "POP"
										},
										{
											"begin": 4119,
											"end": 4926,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "JUMPDEST"
										},
										{
											"begin": 6930,
											"end": 6947,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6967,
											"end": 6974,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6967,
											"end": 6982,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "DUP5"
										},
										{
											"begin": 6967,
											"end": 6982,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6967,
											"end": 6982,
											"name": "AND"
										},
										{
											"begin": 6967,
											"end": 6982,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6967,
											"end": 6982,
											"name": "AND"
										},
										{
											"begin": 6967,
											"end": 6982,
											"name": "DUP2"
										},
										{
											"begin": 6967,
											"end": 6982,
											"name": "MSTORE"
										},
										{
											"begin": 6967,
											"end": 6982,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6967,
											"end": 6982,
											"name": "ADD"
										},
										{
											"begin": 6967,
											"end": 6982,
											"name": "SWAP1"
										},
										{
											"begin": 6967,
											"end": 6982,
											"name": "DUP2"
										},
										{
											"begin": 6967,
											"end": 6982,
											"name": "MSTORE"
										},
										{
											"begin": 6967,
											"end": 6982,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6967,
											"end": 6982,
											"name": "ADD"
										},
										{
											"begin": 6967,
											"end": 6982,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6967,
											"end": 6982,
											"name": "KECCAK256"
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6983,
											"end": 6991,
											"name": "DUP4"
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "AND"
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "AND"
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "DUP2"
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "MSTORE"
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "ADD"
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "SWAP1"
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "DUP2"
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "MSTORE"
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "ADD"
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "KECCAK256"
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "SLOAD"
										},
										{
											"begin": 6960,
											"end": 6992,
											"name": "SWAP1"
										},
										{
											"begin": 6960,
											"end": 6992,
											"name": "POP"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "SWAP3"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "SWAP2"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "POP"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "POP"
										},
										{
											"begin": 6856,
											"end": 7000,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMPDEST"
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP1"
										},
										{
											"begin": 927,
											"end": 928,
											"name": "DUP3"
										},
										{
											"begin": 923,
											"end": 924,
											"name": "DUP5"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "ADD"
										},
										{
											"begin": 911,
											"end": 928,
											"name": "SWAP1"
										},
										{
											"begin": 911,
											"end": 928,
											"name": "POP"
										},
										{
											"begin": 951,
											"end": 952,
											"name": "DUP4"
										},
										{
											"begin": 946,
											"end": 947,
											"name": "DUP2"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "LT"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "ISZERO"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPI"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "REVERT"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPDEST"
										},
										{
											"begin": 1002,
											"end": 1003,
											"name": "DUP1"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "SWAP2"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP3"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP2"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "JUMPDEST"
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 1362,
											"end": 1363,
											"name": "DUP4"
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "DUP4"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MLOAD"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP1"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "ADD"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MSTORE"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP1"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP2"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MSTORE"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "ADD"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP2"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MSTORE"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "POP"
										},
										{
											"begin": 1358,
											"end": 1361,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "JUMPDEST"
										},
										{
											"begin": 1351,
											"end": 1401,
											"name": "SWAP1"
										},
										{
											"begin": 1351,
											"end": 1401,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "SWAP3"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "SWAP2"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "JUMPDEST"
										},
										{
											"begin": 1818,
											"end": 1825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1851,
											"name": "DUP4"
										},
										{
											"begin": 1845,
											"end": 1846,
											"name": "DUP4"
										},
										{
											"begin": 1845,
											"end": 1851,
											"name": "GT"
										},
										{
											"begin": 1845,
											"end": 1851,
											"name": "ISZERO"
										},
										{
											"begin": 1853,
											"end": 1865,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPI"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "AND"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ISZERO"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPI"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "EXP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "NOT"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "AND"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPDEST"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "REVERT"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPDEST"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1876,
											"end": 1885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1893,
											"name": "DUP4"
										},
										{
											"begin": 1888,
											"end": 1889,
											"name": "DUP6"
										},
										{
											"begin": 1888,
											"end": 1893,
											"name": "SUB"
										},
										{
											"begin": 1876,
											"end": 1893,
											"name": "SWAP1"
										},
										{
											"begin": 1876,
											"end": 1893,
											"name": "POP"
										},
										{
											"begin": 1911,
											"end": 1912,
											"name": "DUP1"
										},
										{
											"begin": 1904,
											"end": 1912,
											"name": "SWAP2"
										},
										{
											"begin": 1904,
											"end": 1912,
											"name": "POP"
										},
										{
											"begin": 1904,
											"end": 1912,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "SWAP4"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "SWAP3"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/FixedSupplyToken.sol\":\"FixedSupplyToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FixedSupplyToken.sol\":{\"keccak256\":\"0x2517c4a59df7c7113847a2ac59d1d6448da965d9ca54aa62f5d409857ee9ad6e\",\"urls\":[\"bzz-raw://0653a12e678464d6e0f98cc21542f74dc4d7e6d5d32779efbdae417043ab8103\",\"dweb:/ipfs/QmfWSgUmpKF1ptHVcxnW2yuNwHCR6tc6tgdHqkanjCk97G\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 83,
								"contract": "contracts/FixedSupplyToken.sol:FixedSupplyToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 88,
								"contract": "contracts/FixedSupplyToken.sol:FixedSupplyToken",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 92,
								"contract": "contracts/FixedSupplyToken.sol:FixedSupplyToken",
								"label": "balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 98,
								"contract": "contracts/FixedSupplyToken.sol:FixedSupplyToken",
								"label": "allowed",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":589:5297  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":589:5297  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820b1b06cc0c7e83338d77cb2b31b4d689fd7695bc9069c6d7b59db8259af90fbc164736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820b1b06cc0c7e83338d77cb2b31b4d689fd7695bc9069c6d7b59db8259af90fbc164736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xB1 0xB0 PUSH13 0xC0C7E83338D77CB2B31B4D689F 0xD7 PUSH10 0x5BC9069C6D7B59DB8259 0xAF SWAP1 0xFB 0xC1 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "589:4708:1:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820b1b06cc0c7e83338d77cb2b31b4d689fd7695bc9069c6d7b59db8259af90fbc164736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xB1 0xB0 PUSH13 0xC0C7E83338D77CB2B31B4D689F 0xD7 PUSH10 0x5BC9069C6D7B59DB8259 0xAF SWAP1 0xFB 0xC1 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "589:4708:1:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 589,
									"end": 5297,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 589,
									"end": 5297,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820b1b06cc0c7e83338d77cb2b31b4d689fd7695bc9069c6d7b59db8259af90fbc164736f6c63430005110032",
									".code": [
										{
											"begin": 589,
											"end": 5297,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "ADDRESS"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "EQ"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "MSTORE"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "DUP1"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/FixedSupplyToken.sol": {
				"ast": {
					"absolutePath": "contracts/FixedSupplyToken.sol",
					"exportedSymbols": {
						"ERC20Interface": [
							69
						],
						"FixedSupplyToken": [
							352
						]
					},
					"id": 353,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 353,
							"sourceUnit": 540,
							"src": "939:112:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 69,
							"linearizedBaseContracts": [
								69
							],
							"name": "ERC20Interface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 7,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1141:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "1165:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1165:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1164:9:0"
									},
									"scope": 69,
									"src": "1121:53:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 14,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "1272:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1272:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1271:16:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "1309:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1309:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1308:9:0"
									},
									"scope": 69,
									"src": "1253:65:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 23,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "1396:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1396:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "1409:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1395:29:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "1441:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 20,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1441:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1440:14:0"
									},
									"scope": 69,
									"src": "1378:77:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1556:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1556:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1571:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1571:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1584:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1584:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1555:44:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1616:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 31,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1616:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1615:14:0"
									},
									"scope": 69,
									"src": "1534:96:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 43,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1901:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1901:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1919:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1919:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1900:34:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1951:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 40,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1951:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1950:14:0"
									},
									"scope": 69,
									"src": "1884:81:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 52,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2075:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2075:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2091:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2091:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2074:34:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"name": "remaining",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2130:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2130:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2129:19:0"
									},
									"scope": 69,
									"src": "2056:93:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 60,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"indexed": true,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2219:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2219:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"indexed": true,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2242:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2242:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"indexed": false,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2263:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2218:60:0"
									},
									"src": "2204:75:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 68,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"indexed": true,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "2382:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2382:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"indexed": true,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "2406:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"indexed": false,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "2432:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2432:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2381:66:0"
									},
									"src": "2367:81:0"
								}
							],
							"scope": 353,
							"src": "1055:1396:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 70,
										"name": "ERC20Interface",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 69,
										"src": "2486:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Interface_$69",
											"typeString": "contract ERC20Interface"
										}
									},
									"id": 71,
									"nodeType": "InheritanceSpecifier",
									"src": "2486:14:0"
								}
							],
							"contractDependencies": [
								69
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 352,
							"linearizedBaseContracts": [
								352,
								69
							],
							"name": "FixedSupplyToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 74,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "2508:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 72,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2508:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4649584544",
										"id": 73,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2540:7:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_30ea4be232861f7555116fcc950136f9a04cb61860a8c2bc4b1f7869fc756d12",
											"typeString": "literal_string \"FIXED\""
										},
										"value": "FIXED"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 77,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "2554:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 75,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2554:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4578616d706c6520466978656420537570706c7920546f6b656e",
										"id": 76,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2584:28:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_bb9c3319413d3ba6031e2ada8c5734434921f54973b7e9c9cdcde2469242268e",
											"typeString": "literal_string \"Example Fixed Supply Token\""
										},
										"value": "Example Fixed Supply Token"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 80,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "2619:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 78,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2619:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 79,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2652:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 83,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "2660:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 81,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2660:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31303030303030",
										"id": 82,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2683:7:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000_by_1",
											"typeString": "int_const 1000000"
										},
										"value": "1000000"
									},
									"visibility": "internal"
								},
								{
									"id": 86,
									"libraryName": {
										"contractScope": null,
										"id": 84,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 539,
										"src": "2808:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$539",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "2802:27:0",
									"typeName": {
										"id": 85,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2821:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 88,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "2868:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 87,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2868:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 92,
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "2931:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 91,
										"keyType": {
											"id": 89,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2940:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2931:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 90,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2951:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 98,
									"name": "allowed",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "3056:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 97,
										"keyType": {
											"id": 93,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3065:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3056:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 96,
											"keyType": {
												"id": 94,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3085:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "3076:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 95,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3096:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "3214:59:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 101,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 554,
																	"src": "3233:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3233:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 103,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "3247:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3233:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 100,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															557,
															558
														],
														"referencedDeclaration": 557,
														"src": "3225:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3225:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "3225:28:0"
											},
											{
												"id": 107,
												"nodeType": "PlaceholderStatement",
												"src": "3264:1:0"
											}
										]
									},
									"documentation": null,
									"id": 109,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3211:2:0"
									},
									"src": "3193:80:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "3664:111:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 112,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "3708:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 113,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "3716:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3716:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "3708:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "3708:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 117,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "3737:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 119,
														"indexExpression": {
															"argumentTypes": null,
															"id": 118,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "3746:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3737:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 120,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "3755:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3737:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "3737:30:0"
											}
										]
									},
									"documentation": null,
									"id": 124,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3654:2:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3664:0:0"
									},
									"scope": 352,
									"src": "3643:132:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "3836:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 129,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 83,
													"src": "3854:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 128,
												"id": 130,
												"nodeType": "Return",
												"src": "3847:19:0"
											}
										]
									},
									"documentation": null,
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3803:2:0"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "3827:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3826:9:0"
									},
									"scope": 352,
									"src": "3783:91:0",
									"stateMutability": "view",
									"superFunction": 7,
									"visibility": "public"
								},
								{
									"body": {
										"id": 143,
										"nodeType": "Block",
										"src": "4000:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 139,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "4018:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 141,
													"indexExpression": {
														"argumentTypes": null,
														"id": 140,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "4027:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4018:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 138,
												"id": 142,
												"nodeType": "Return",
												"src": "4011:23:0"
											}
										]
									},
									"documentation": null,
									"id": 144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "3954:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3953:16:0"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "3991:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3991:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3990:9:0"
									},
									"scope": 352,
									"src": "3935:107:0",
									"stateMutability": "view",
									"superFunction": 14,
									"visibility": "public"
								},
								{
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "4197:729:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 153,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 92,
																	"src": "4212:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 156,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 154,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 554,
																		"src": "4221:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4221:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4212:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 157,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 148,
																"src": "4236:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4212:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 159,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 148,
																"src": "4256:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4266:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4256:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "4212:55:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 167,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 148,
																			"src": "4487:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 163,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 92,
																				"src": "4469:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 165,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 164,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 146,
																				"src": "4478:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4469:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 379,
																		"src": "4469:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4469:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 169,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4468:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 170,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 92,
																"src": "4499:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 172,
															"indexExpression": {
																"argumentTypes": null,
																"id": 171,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4508:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4499:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4468:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4212:300:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 211,
													"nodeType": "Block",
													"src": "4880:39:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4902:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 152,
															"id": 210,
															"nodeType": "Return",
															"src": "4895:12:0"
														}
													]
												},
												"id": 212,
												"nodeType": "IfStatement",
												"src": "4208:711:0",
												"trueBody": {
													"id": 208,
													"nodeType": "Block",
													"src": "4514:351:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 175,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 92,
																		"src": "4579:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 178,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 176,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 554,
																			"src": "4588:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "4588:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4579:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 184,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 148,
																			"src": "4627:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 179,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 92,
																				"src": "4602:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 182,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 180,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 554,
																					"src": "4611:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 181,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "4611:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4602:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 395,
																		"src": "4602:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4602:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4579:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 187,
															"nodeType": "ExpressionStatement",
															"src": "4579:56:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 188,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 92,
																		"src": "4717:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 190,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 189,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4726:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4717:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 195,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 148,
																			"src": "4751:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 191,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 92,
																				"src": "4733:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 193,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 192,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 146,
																				"src": "4742:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4733:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 379,
																		"src": "4733:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4733:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4717:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 198,
															"nodeType": "ExpressionStatement",
															"src": "4717:42:0"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 200,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 554,
																			"src": "4802:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "4802:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 202,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4814:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 203,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 148,
																		"src": "4819:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 199,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "4793:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4793:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 205,
															"nodeType": "EmitStatement",
															"src": "4788:39:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4849:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 152,
															"id": 207,
															"nodeType": "Return",
															"src": "4842:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "4137:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "4150:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4136:30:0"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "4183:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 150,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4183:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4182:14:0"
									},
									"scope": 352,
									"src": "4119:807:0",
									"stateMutability": "nonpayable",
									"superFunction": 23,
									"visibility": "public"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "5523:913:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 225,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 92,
																		"src": "5665:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 227,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 226,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "5674:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5665:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 228,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "5684:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5665:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 230,
																			"name": "allowed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 98,
																			"src": "5704:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 232,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 231,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 216,
																			"src": "5712:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5704:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 235,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 233,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 554,
																			"src": "5719:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "5719:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5704:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 236,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "5734:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5704:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5665:76:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 239,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "5754:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5764:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5754:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5665:100:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 247,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "5855:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 243,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 92,
																		"src": "5837:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 245,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 244,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 218,
																		"src": "5846:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5837:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 379,
																"src": "5837:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5837:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 249,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 92,
																"src": "5866:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 251,
															"indexExpression": {
																"argumentTypes": null,
																"id": 250,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "5875:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5866:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5837:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5665:214:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 304,
													"nodeType": "Block",
													"src": "6390:39:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6412:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 224,
															"id": 303,
															"nodeType": "Return",
															"src": "6405:12:0"
														}
													]
												},
												"id": 305,
												"nodeType": "IfStatement",
												"src": "5661:768:0",
												"trueBody": {
													"id": 301,
													"nodeType": "Block",
													"src": "5881:494:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 254,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 92,
																		"src": "5941:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 256,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 255,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "5950:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5941:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 261,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 220,
																			"src": "5979:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 257,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 92,
																				"src": "5959:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 259,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 258,
																				"name": "_from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 216,
																				"src": "5968:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5959:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 395,
																		"src": "5959:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5959:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5941:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 264,
															"nodeType": "ExpressionStatement",
															"src": "5941:46:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 265,
																			"name": "allowed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 98,
																			"src": "6082:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 269,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 266,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 216,
																			"src": "6090:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6082:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 270,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 267,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 554,
																			"src": "6097:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "6097:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6082:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 278,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 220,
																			"src": "6142:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 271,
																					"name": "allowed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 98,
																					"src": "6111:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 273,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 272,
																					"name": "_from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 216,
																					"src": "6119:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6111:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 276,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 274,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 554,
																					"src": "6126:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 275,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "6126:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6111:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 395,
																		"src": "6111:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6111:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6082:68:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 281,
															"nodeType": "ExpressionStatement",
															"src": "6082:68:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 282,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 92,
																		"src": "6232:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 284,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 283,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 218,
																		"src": "6241:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6232:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 289,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 220,
																			"src": "6266:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 285,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 92,
																				"src": "6248:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 287,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 286,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 218,
																				"src": "6257:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6248:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 379,
																		"src": "6248:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6248:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6232:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 292,
															"nodeType": "ExpressionStatement",
															"src": "6232:42:0"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 294,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "6317:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 295,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 218,
																		"src": "6324:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 296,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6329:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 293,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "6308:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6308:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "6303:34:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6359:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 224,
															"id": 300,
															"nodeType": "Return",
															"src": "6352:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "5440:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "5460:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5460:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "5478:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5433:67:0"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "5517:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 222,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5517:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5516:6:0"
									},
									"scope": 352,
									"src": "5412:1024:0",
									"stateMutability": "nonpayable",
									"superFunction": 34,
									"visibility": "public"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "6713:135:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 316,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "6724:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 320,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 317,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 554,
																	"src": "6732:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6732:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6724:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 321,
														"indexExpression": {
															"argumentTypes": null,
															"id": 319,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6744:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6724:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 322,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "6756:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6724:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "6724:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 326,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "6788:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6788:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 328,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6800:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 329,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "6810:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "6779:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6779:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 331,
												"nodeType": "EmitStatement",
												"src": "6774:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6836:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 315,
												"id": 333,
												"nodeType": "Return",
												"src": "6829:11:0"
											}
										]
									},
									"documentation": null,
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "6648:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6648:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "6666:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6647:35:0"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "6699:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 313,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6699:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6698:14:0"
									},
									"scope": 352,
									"src": "6631:217:0",
									"stateMutability": "nonpayable",
									"superFunction": 43,
									"visibility": "public"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "6949:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 344,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "6967:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 346,
														"indexExpression": {
															"argumentTypes": null,
															"id": 345,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "6975:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6967:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 348,
													"indexExpression": {
														"argumentTypes": null,
														"id": 347,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "6983:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6967:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 343,
												"id": 349,
												"nodeType": "Return",
												"src": "6960:32:0"
											}
										]
									},
									"documentation": null,
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "6875:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6875:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "6891:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6874:34:0"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"name": "remaining",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "6930:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6930:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6929:19:0"
									},
									"scope": 352,
									"src": "6856:144:0",
									"stateMutability": "view",
									"superFunction": 52,
									"visibility": "public"
								}
							],
							"scope": 353,
							"src": "2457:4548:0"
						}
					],
					"src": "0:7007:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							539
						]
					},
					"id": 540,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 354,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 539,
							"linearizedBaseContracts": [
								539
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "901:109:1",
										"statements": [
											{
												"assignments": [
													364
												],
												"declarations": [
													{
														"constant": false,
														"id": 364,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 378,
														"src": "911:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 363,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "911:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 368,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 365,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "923:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 366,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "927:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "923:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "911:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 370,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "946:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 371,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "951:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "946:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "954:29:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 369,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															557,
															558
														],
														"referencedDeclaration": 558,
														"src": "938:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "938:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 375,
												"nodeType": "ExpressionStatement",
												"src": "938:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 376,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 364,
													"src": "1002:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 362,
												"id": 377,
												"nodeType": "Return",
												"src": "995:8:1"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n- Addition cannot overflow.",
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "847:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "858:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "846:22:1"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "892:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "891:9:1"
									},
									"scope": 539,
									"src": "834:176:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "1341:67:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 389,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "1362:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 390,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "1365:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1368:32:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 388,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															395,
															422
														],
														"referencedDeclaration": 422,
														"src": "1358:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1358:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 387,
												"id": 393,
												"nodeType": "Return",
												"src": "1351:50:1"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.",
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1287:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1298:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1286:22:1"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1332:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1331:9:1"
									},
									"scope": 539,
									"src": "1274:134:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "1827:92:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 407,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "1845:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 408,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "1850:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1845:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 410,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "1853:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 406,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															557,
															558
														],
														"referencedDeclaration": 558,
														"src": "1837:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1837:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "1837:29:1"
											},
											{
												"assignments": [
													414
												],
												"declarations": [
													{
														"constant": false,
														"id": 414,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "1876:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 413,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1876:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 418,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 415,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "1888:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 416,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "1892:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1888:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1876:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 419,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 414,
													"src": "1911:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 405,
												"id": 420,
												"nodeType": "Return",
												"src": "1904:8:1"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.\n     * _Available since v2.4.0._",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1745:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1745:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1756:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1767:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 400,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1744:50:1"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1818:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1818:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1817:9:1"
									},
									"scope": 539,
									"src": "1732:187:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "2226:392:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 431,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "2458:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 432,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2463:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 437,
												"nodeType": "IfStatement",
												"src": "2454:45:1",
												"trueBody": {
													"id": 436,
													"nodeType": "Block",
													"src": "2466:33:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2487:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 430,
															"id": 435,
															"nodeType": "Return",
															"src": "2480:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													439
												],
												"declarations": [
													{
														"constant": false,
														"id": 439,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 455,
														"src": "2509:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 438,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2509:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 443,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 440,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "2521:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 441,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "2525:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2521:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2509:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 445,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 439,
																	"src": "2544:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 446,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "2548:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2544:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 448,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 426,
																"src": "2553:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2544:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2556:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 444,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															557,
															558
														],
														"referencedDeclaration": 558,
														"src": "2536:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2536:56:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "2536:56:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 453,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 439,
													"src": "2610:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 430,
												"id": 454,
												"nodeType": "Return",
												"src": "2603:8:1"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n- Multiplication cannot overflow.",
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "2172:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2172:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "2183:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2171:22:1"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "2217:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2217:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2216:9:1"
									},
									"scope": 539,
									"src": "2159:459:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "3140:63:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 466,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "3161:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 467,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "3164:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3167:28:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 465,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															472,
															499
														],
														"referencedDeclaration": 499,
														"src": "3157:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3157:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 464,
												"id": 470,
												"nodeType": "Return",
												"src": "3150:46:1"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3086:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3086:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3097:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3085:22:1"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3131:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3131:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3130:9:1"
									},
									"scope": 539,
									"src": "3073:130:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "3813:243:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 484,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "3897:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3901:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3897:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 487,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "3904:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 483,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															557,
															558
														],
														"referencedDeclaration": 558,
														"src": "3889:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3889:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "3889:28:1"
											},
											{
												"assignments": [
													491
												],
												"declarations": [
													{
														"constant": false,
														"id": 491,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 498,
														"src": "3927:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 490,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3927:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 495,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 492,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "3939:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 493,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "3943:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3939:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3927:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 496,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 491,
													"src": "4048:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 482,
												"id": 497,
												"nodeType": "Return",
												"src": "4041:8:1"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.\n     * _Available since v2.4.0._",
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3731:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3731:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3742:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3742:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3753:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 477,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3753:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3730:50:1"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3804:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3804:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3803:9:1"
									},
									"scope": 539,
									"src": "3718:338:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "4567:61:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 509,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "4588:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 510,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "4591:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4594:26:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 508,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															515,
															538
														],
														"referencedDeclaration": 538,
														"src": "4584:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4584:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 507,
												"id": 513,
												"nodeType": "Return",
												"src": "4577:44:1"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4513:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4524:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4524:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4512:22:1"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4558:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4558:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4557:9:1"
									},
									"scope": 539,
									"src": "4500:128:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "5227:68:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 527,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "5245:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5250:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5245:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 530,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "5253:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 526,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															557,
															558
														],
														"referencedDeclaration": 558,
														"src": "5237:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5237:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 532,
												"nodeType": "ExpressionStatement",
												"src": "5237:29:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 533,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "5283:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 534,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "5287:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5283:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 525,
												"id": 536,
												"nodeType": "Return",
												"src": "5276:12:1"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.\n     * _Available since v2.4.0._",
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "5145:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5145:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "5156:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5156:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "5167:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 520,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5167:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5144:50:1"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "5218:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5218:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5217:9:1"
									},
									"scope": 539,
									"src": "5132:163:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 540,
							"src": "589:4708:1"
						}
					],
					"src": "0:5298:1"
				},
				"id": 1
			}
		}
	}
}