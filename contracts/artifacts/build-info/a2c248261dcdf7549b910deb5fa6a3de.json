{
	"id": "a2c248261dcdf7549b910deb5fa6a3de",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/owned.sol": {
				"content": "pragma solidity ^0.5.0;\n\ncontract owned {\n    address owner;\n\n    modifier onlyowner() {\n        require(msg.sender == owner);\n        _;\n\n    }\n\n//  Constructor\n//   function owned() public {\n// FIXED - Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead [duplicate]\n//https://ethereum.stackexchange.com/questions/47175/defining-constructors-as-functions-with-the-same-name-as-the-contract-is-depreca\n\n    constructor() public {\n\n        owner = msg.sender;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/owned.sol": {
				"owned": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/owned.sol\":25:538  contract owned {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/owned.sol\":479:536  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/owned.sol\":479:536  constructor() public {... */\n  pop\n    /* \"contracts/owned.sol\":519:529  msg.sender */\n  caller\n    /* \"contracts/owned.sol\":511:516  owner */\n  0x00\n  dup1\n    /* \"contracts/owned.sol\":511:529  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/owned.sol\":25:538  contract owned {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/owned.sol\":25:538  contract owned {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a7231582092bbcef913aba5ac5a6932afc86b1ed1ea9a875f2f3a217ae0b8a72f1dcd262364736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603e80605d6000396000f3fe6080604052600080fdfea265627a7a7231582092bbcef913aba5ac5a6932afc86b1ed1ea9a875f2f3a217ae0b8a72f1dcd262364736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3E DUP1 PUSH1 0x5D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SWAP3 0xBB 0xCE 0xF9 SGT 0xAB 0xA5 0xAC GAS PUSH10 0x32AFC86B1ED1EA9A875F 0x2F GASPRICE 0x21 PUSH27 0xE0B8A72F1DCD262364736F6C634300051100320000000000000000 ",
							"sourceMap": "25:513:0:-;;;479:57;8:9:-1;5:2;;;30:1;27;20:12;5:2;479:57:0;519:10;511:5;;:18;;;;;;;;;;;;;;;;;;25:513;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600080fdfea265627a7a7231582092bbcef913aba5ac5a6932afc86b1ed1ea9a875f2f3a217ae0b8a72f1dcd262364736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SWAP3 0xBB 0xCE 0xF9 SGT 0xAB 0xA5 0xAC GAS PUSH10 0x32AFC86B1ED1EA9A875F 0x2F GASPRICE 0x21 PUSH27 0xE0B8A72F1DCD262364736F6C634300051100320000000000000000 ",
							"sourceMap": "25:513:0:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "20932",
								"totalCost": "33332"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 538,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 25,
									"end": 538,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 25,
									"end": 538,
									"name": "MSTORE"
								},
								{
									"begin": 479,
									"end": 536,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 479,
									"end": 536,
									"name": "POP"
								},
								{
									"begin": 519,
									"end": 529,
									"name": "CALLER"
								},
								{
									"begin": 511,
									"end": 516,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 511,
									"end": 516,
									"name": "DUP1"
								},
								{
									"begin": 511,
									"end": 529,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 511,
									"end": 529,
									"name": "EXP"
								},
								{
									"begin": 511,
									"end": 529,
									"name": "DUP2"
								},
								{
									"begin": 511,
									"end": 529,
									"name": "SLOAD"
								},
								{
									"begin": 511,
									"end": 529,
									"name": "DUP2"
								},
								{
									"begin": 511,
									"end": 529,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 511,
									"end": 529,
									"name": "MUL"
								},
								{
									"begin": 511,
									"end": 529,
									"name": "NOT"
								},
								{
									"begin": 511,
									"end": 529,
									"name": "AND"
								},
								{
									"begin": 511,
									"end": 529,
									"name": "SWAP1"
								},
								{
									"begin": 511,
									"end": 529,
									"name": "DUP4"
								},
								{
									"begin": 511,
									"end": 529,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 511,
									"end": 529,
									"name": "AND"
								},
								{
									"begin": 511,
									"end": 529,
									"name": "MUL"
								},
								{
									"begin": 511,
									"end": 529,
									"name": "OR"
								},
								{
									"begin": 511,
									"end": 529,
									"name": "SWAP1"
								},
								{
									"begin": 511,
									"end": 529,
									"name": "SSTORE"
								},
								{
									"begin": 511,
									"end": 529,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 538,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 538,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 538,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 538,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 538,
									"name": "CODECOPY"
								},
								{
									"begin": 25,
									"end": 538,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 538,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582092bbcef913aba5ac5a6932afc86b1ed1ea9a875f2f3a217ae0b8a72f1dcd262364736f6c63430005110032",
									".code": [
										{
											"begin": 25,
											"end": 538,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 25,
											"end": 538,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25,
											"end": 538,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 538,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 538,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 538,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/owned.sol\":\"owned\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/owned.sol\":{\"keccak256\":\"0x80e69139476d369c948659ed8881e81346327000f0ab1b32b7611cdd15f436a4\",\"urls\":[\"bzz-raw://3eecb6523bbbf56c2628361a0f64953b1a53107a70088acd8fe23b096e53e556\",\"dweb:/ipfs/QmV5x2MmNyNqaD94JCECYzU3VsDzRWXh2NADDDxnfUMwUT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/owned.sol:owned",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/owned.sol": {
				"ast": {
					"absolutePath": "contracts/owned.sol",
					"exportedSymbols": {
						"owned": [
							24
						]
					},
					"id": 25,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 24,
							"linearizedBaseContracts": [
								24
							],
							"name": "owned",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 24,
									"src": "46:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "46:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 13,
										"nodeType": "Block",
										"src": "87:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 9,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 6,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "105:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 7,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "105:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 8,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "119:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "105:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 5,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															42,
															43
														],
														"referencedDeclaration": 42,
														"src": "97:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "97:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 11,
												"nodeType": "ExpressionStatement",
												"src": "97:28:0"
											},
											{
												"id": 12,
												"nodeType": "PlaceholderStatement",
												"src": "135:1:0"
											}
										]
									},
									"documentation": null,
									"id": 14,
									"name": "onlyowner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "84:2:0"
									},
									"src": "66:78:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "500:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 17,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "511:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 18,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "519:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 19,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "519:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "511:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "511:18:0"
											}
										]
									},
									"documentation": null,
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "490:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "500:0:0"
									},
									"scope": 24,
									"src": "479:57:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 25,
							"src": "25:513:0"
						}
					],
					"src": "0:539:0"
				},
				"id": 0
			}
		}
	}
}