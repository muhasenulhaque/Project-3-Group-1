{
	"id": "e29f0442e3893f15dfedf9bd37c3b458",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/FixedSupplyToken.sol": {
				"content": "pragma solidity ^0.5.0;\n\n// ----------------------------------------------------------------------------------------------\n// Sample fixed supply token contract\n// Enjoy. (c) BokkyPooBah 2017. The MIT Licence.\n// ----------------------------------------------------------------------------------------------\n\n\n// ERC Token Standard #20 Interface\n// https://github.com/ethereum/EIPs/issues/20\n\n\n\n//\n//      Project-3-Group-1\n//      *****************\n//\n//      Group Membere:  Xu (Flora) Zhao\n//                      Md Muhasenul Haque\n//                      Samuel Nayacakalou\n//\n//      Date:           March 2023\n//\n//      Original Code:  https://github.com/tomw1808/distributed_exchange_truffle_class_3\n//\n\n\n// Adding SafeMath Library to improve security\n// @NOTE: This only works in Remix. Alternatively, paste the contents of SafeMath.sol directly here above ArcadeToken. You should use version 2.5.\n\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\";\n\ncontract ERC20Interface {\n    // Get the total token supply\n    function totalSupply() view public returns (uint256);\n\n    // Get the account balance of another account with address _owner\n    function balanceOf(address _owner) view public returns (uint256);\n\n    // Send _value amount of tokens to address _to\n    function transfer(address _to, uint256 _value) public returns (bool success);\n\n    // Send _value amount of tokens from address _from to address _to\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);\n\n    // Allow _spender to withdraw from your account, multiple times, up to the _value amount.\n    // If this function is called again it overwrites the current allowance with _value.\n    // this function is required for some DEX functionality\n    function approve(address _spender, uint256 _value) public returns (bool success);\n\n    // Returns the amount which _spender is still allowed to withdraw from _owner\n    function allowance(address _owner, address _spender) view public returns (uint256 remaining);\n\n    // Triggered when tokens are transferred.\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n\n    // Triggered whenever approve(address _spender, uint256 _value) is called.\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n}\n\n\ncontract FixedSupplyToken is ERC20Interface {\n    string public constant symbol = \"FIXED\";\n    string public constant name = \"Example Fixed Supply Token\";\n    uint8 public constant decimals = 0;\n    uint256 _totalSupply = 1000000;\n\n//      Project-3-Group-1\n//      *****************\n// Using SafeMath Library for improved security\n    using SafeMath for uint256;\n\n    // Owner of this contract\n    address public owner;\n\n    // Balances for each account\n    mapping (address => uint256) balances;\n\n    // Owner of account approves the transfer of an amount to another account\n    mapping (address => mapping (address => uint256)) allowed;\n\n    // Functions with this modifier can only be executed by the owner\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    // Constructor\n    //function FixedSupplyToken() public {\n    // FIXED -  Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead [duplicate]\n    //https://ethereum.stackexchange.com/questions/47175/defining-constructors-as-functions-with-the-same-name-as-the-contract-is-depreca\n    \n    constructor() public {  // New Constructor definition\n\n        owner = msg.sender;\n        balances[owner] = _totalSupply;\n    }\n\n    function totalSupply() view public returns (uint256) {\n        return _totalSupply;\n    }\n\n    // What is the balance of a particular account?\n    function balanceOf(address _owner) view public returns (uint256) {\n        return balances[_owner];\n    }\n\n    // Transfer the balance from owner's account to another account\n    function transfer(address _to, uint256 _amount) public returns (bool success) {\n        if (balances[msg.sender] >= _amount\n        && _amount > 0\n\n\n\t//      Project-3-Group-1\n    //      *****************\n\t//\tConverted arithmetic operations to SafeMath equivalent\t\n\t//\n        //&& balances[_to] + _amount > balances[_to]) {  \n        && (balances[_to].add(_amount)) > balances[_to]) {\n\n            //balances[msg.sender] -= _amount;\n            balances[msg.sender] = balances[msg.sender].sub(_amount);\n            \n            //balances[_to] += _amount;            \n            balances[_to] = balances[_to].add(_amount);\n            \n            emit Transfer(msg.sender, _to, _amount);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n    // Send _value amount of tokens from address _from to address _to\n    // The transferFrom method is used for a withdraw workflow, allowing contracts to send\n    // tokens on your behalf, for example to \"deposit\" to a contract address and/or to charge\n    // fees in sub-currencies; the command should fail unless the _from account has\n    // deliberately authorized the sender of the message via some mechanism; we propose\n    // these standardized APIs for approval:\n    function transferFrom(\n    address _from,\n    address _to,\n    uint256 _amount\n    ) public returns (bool) {\n\n\t//      Project-3-Group-1\n    //      *****************\n\t//\tConverted arithmetic operations to SafeMath equivalent\t\n\t//\n        if (balances[_from] >= _amount\n        && allowed[_from][msg.sender] >= _amount\n        && _amount > 0\n\n        //&& balances[_to] + _amount > balances[_to]) {\n        && balances[_to].add(_amount) > balances[_to]) {\n\n            //balances[_from] -= _amount;\n            balances[_from] = balances[_from].sub(_amount);\n            \n            //allowed[_from][msg.sender] -= _amount;            \n            allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);\n            \n            //balances[_to] += _amount;            \n            balances[_to] = balances[_to].add(_amount);\n            \n            emit Transfer(_from, _to, _amount);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n\n\n    // Allow _spender to withdraw from your account, multiple times, up to the _value amount.\n    // If this function is called again it overwrites the current allowance with _value.\n    function approve(address _spender, uint256 _amount) public returns (bool success) {\n        allowed[msg.sender][_spender] = _amount;\n        emit Approval(msg.sender, _spender, _amount);\n        return true;\n    }\n\n    function allowance(address _owner, address _spender) view public returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     *\n     * _Available since v2.4.0._\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/FixedSupplyToken.sol": {
				"ERC20Interface": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "remaining",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/FixedSupplyToken.sol\":\"ERC20Interface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FixedSupplyToken.sol\":{\"keccak256\":\"0xc76329d36e173150d97fa7a4183606ef5fabc37e419446cfa5c06059999ed099\",\"urls\":[\"bzz-raw://77d4430a5a8ef1e44de6b05ec83683332112786d73f868414c31188f9c37f60d\",\"dweb:/ipfs/QmXZ3LmWCRLVDeAAt74ef9p75ZDjbWGa4Ui6jPiHxbR1RM\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"FixedSupplyToken": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "remaining",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/FixedSupplyToken.sol\":2396:6818  contract FixedSupplyToken is ERC20Interface {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/FixedSupplyToken.sol\":2618:2625  1000000 */\n  0x0f4240\n    /* \"contracts/FixedSupplyToken.sol\":2595:2625  uint256 _totalSupply = 1000000 */\n  0x00\n  sstore\n    /* \"contracts/FixedSupplyToken.sol\":3551:3679  constructor() public {  // New Constructor definition... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/FixedSupplyToken.sol\":3551:3679  constructor() public {  // New Constructor definition... */\n  pop\n    /* \"contracts/FixedSupplyToken.sol\":3622:3632  msg.sender */\n  caller\n    /* \"contracts/FixedSupplyToken.sol\":3614:3619  owner */\n  0x01\n  0x00\n    /* \"contracts/FixedSupplyToken.sol\":3614:3632  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/FixedSupplyToken.sol\":3660:3672  _totalSupply */\n  sload(0x00)\n    /* \"contracts/FixedSupplyToken.sol\":3642:3650  balances */\n  0x02\n    /* \"contracts/FixedSupplyToken.sol\":3642:3657  balances[owner] */\n  0x00\n    /* \"contracts/FixedSupplyToken.sol\":3651:3656  owner */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/FixedSupplyToken.sol\":3642:3657  balances[owner] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/FixedSupplyToken.sol\":3642:3672  balances[owner] = _totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/FixedSupplyToken.sol\":2396:6818  contract FixedSupplyToken is ERC20Interface {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/FixedSupplyToken.sol\":2396:6818  contract FixedSupplyToken is ERC20Interface {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/FixedSupplyToken.sol\":2396:6818  contract FixedSupplyToken is ERC20Interface {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/FixedSupplyToken.sol\":2491:2549  string public constant name = \"Example Fixed Supply Token\" */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_16:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_16)\n    tag_18:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":2491:2549  string public constant name = \"Example Fixed Supply Token\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_19\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_19:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FixedSupplyToken.sol\":6454:6667  function approve(address _spender, uint256 _amount) public returns (bool success) {... */\n    tag_4:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_21:\n        /* \"contracts/FixedSupplyToken.sol\":6454:6667  function approve(address _spender, uint256 _amount) public returns (bool success) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_22\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FixedSupplyToken.sol\":3685:3774  function totalSupply() view public returns (uint256) {... */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FixedSupplyToken.sol\":5272:6264  function transferFrom(... */\n    tag_6:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_26:\n        /* \"contracts/FixedSupplyToken.sol\":5272:6264  function transferFrom(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_27\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FixedSupplyToken.sol\":2555:2589  uint8 public constant decimals = 0 */\n    tag_7:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FixedSupplyToken.sol\":3832:3937  function balanceOf(address _owner) view public returns (uint256) {... */\n    tag_8:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_31:\n        /* \"contracts/FixedSupplyToken.sol\":3832:3937  function balanceOf(address _owner) view public returns (uint256) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_32\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FixedSupplyToken.sol\":2795:2815  address public owner */\n    tag_9:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FixedSupplyToken.sol\":2446:2485  string public constant symbol = \"FIXED\" */\n    tag_10:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_37:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_37)\n    tag_39:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":2446:2485  string public constant symbol = \"FIXED\" */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_40\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_40:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FixedSupplyToken.sol\":4011:4794  function transfer(address _to, uint256 _amount) public returns (bool success) {... */\n    tag_11:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n        /* \"contracts/FixedSupplyToken.sol\":4011:4794  function transfer(address _to, uint256 _amount) public returns (bool success) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FixedSupplyToken.sol\":6673:6815  function allowance(address _owner, address _spender) view public returns (uint256 remaining) {... */\n    tag_12:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_45:\n        /* \"contracts/FixedSupplyToken.sol\":6673:6815  function allowance(address _owner, address _spender) view public returns (uint256 remaining) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FixedSupplyToken.sol\":2491:2549  string public constant name = \"Example Fixed Supply Token\" */\n    tag_15:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x4578616d706c6520466978656420537570706c7920546f6b656e000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/FixedSupplyToken.sol\":6454:6667  function approve(address _spender, uint256 _amount) public returns (bool success) {... */\n    tag_22:\n        /* \"contracts/FixedSupplyToken.sol\":6522:6534  bool success */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":6578:6585  _amount */\n      dup2\n        /* \"contracts/FixedSupplyToken.sol\":6546:6553  allowed */\n      0x03\n        /* \"contracts/FixedSupplyToken.sol\":6546:6565  allowed[msg.sender] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":6554:6564  msg.sender */\n      caller\n        /* \"contracts/FixedSupplyToken.sol\":6546:6565  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FixedSupplyToken.sol\":6546:6575  allowed[msg.sender][_spender] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":6566:6574  _spender */\n      dup6\n        /* \"contracts/FixedSupplyToken.sol\":6546:6575  allowed[msg.sender][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FixedSupplyToken.sol\":6546:6585  allowed[msg.sender][_spender] = _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":6621:6629  _spender */\n      dup3\n        /* \"contracts/FixedSupplyToken.sol\":6600:6639  Approval(msg.sender, _spender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FixedSupplyToken.sol\":6609:6619  msg.sender */\n      caller\n        /* \"contracts/FixedSupplyToken.sol\":6600:6639  Approval(msg.sender, _spender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/FixedSupplyToken.sol\":6631:6638  _amount */\n      dup5\n        /* \"contracts/FixedSupplyToken.sol\":6600:6639  Approval(msg.sender, _spender, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/FixedSupplyToken.sol\":6656:6660  true */\n      0x01\n        /* \"contracts/FixedSupplyToken.sol\":6649:6660  return true */\n      swap1\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":6454:6667  function approve(address _spender, uint256 _amount) public returns (bool success) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FixedSupplyToken.sol\":3685:3774  function totalSupply() view public returns (uint256) {... */\n    tag_24:\n        /* \"contracts/FixedSupplyToken.sol\":3729:3736  uint256 */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":3755:3767  _totalSupply */\n      dup1\n      sload\n        /* \"contracts/FixedSupplyToken.sol\":3748:3767  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":3685:3774  function totalSupply() view public returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/FixedSupplyToken.sol\":5272:6264  function transferFrom(... */\n    tag_27:\n        /* \"contracts/FixedSupplyToken.sol\":5373:5377  bool */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":5534:5541  _amount */\n      dup2\n        /* \"contracts/FixedSupplyToken.sol\":5515:5523  balances */\n      0x02\n        /* \"contracts/FixedSupplyToken.sol\":5515:5530  balances[_from] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":5524:5529  _from */\n      dup7\n        /* \"contracts/FixedSupplyToken.sol\":5515:5530  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FixedSupplyToken.sol\":5515:5541  balances[_from] >= _amount */\n      lt\n      iszero\n        /* \"contracts/FixedSupplyToken.sol\":5515:5590  balances[_from] >= _amount... */\n      dup1\n      iszero\n      tag_50\n      jumpi\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":5583:5590  _amount */\n      dup2\n        /* \"contracts/FixedSupplyToken.sol\":5553:5560  allowed */\n      0x03\n        /* \"contracts/FixedSupplyToken.sol\":5553:5567  allowed[_from] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":5561:5566  _from */\n      dup7\n        /* \"contracts/FixedSupplyToken.sol\":5553:5567  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FixedSupplyToken.sol\":5553:5579  allowed[_from][msg.sender] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":5568:5578  msg.sender */\n      caller\n        /* \"contracts/FixedSupplyToken.sol\":5553:5579  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FixedSupplyToken.sol\":5553:5590  allowed[_from][msg.sender] >= _amount */\n      lt\n      iszero\n        /* \"contracts/FixedSupplyToken.sol\":5515:5590  balances[_from] >= _amount... */\n    tag_50:\n        /* \"contracts/FixedSupplyToken.sol\":5515:5613  balances[_from] >= _amount... */\n      dup1\n      iszero\n      tag_51\n      jumpi\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":5612:5613  0 */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":5602:5609  _amount */\n      dup3\n        /* \"contracts/FixedSupplyToken.sol\":5602:5613  _amount > 0 */\n      gt\n        /* \"contracts/FixedSupplyToken.sol\":5515:5613  balances[_from] >= _amount... */\n    tag_51:\n        /* \"contracts/FixedSupplyToken.sol\":5515:5724  balances[_from] >= _amount... */\n      dup1\n      iszero\n      tag_52\n      jumpi\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":5711:5719  balances */\n      0x02\n        /* \"contracts/FixedSupplyToken.sol\":5711:5724  balances[_to] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":5720:5723  _to */\n      dup5\n        /* \"contracts/FixedSupplyToken.sol\":5711:5724  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FixedSupplyToken.sol\":5682:5708  balances[_to].add(_amount) */\n      tag_53\n        /* \"contracts/FixedSupplyToken.sol\":5700:5707  _amount */\n      dup4\n        /* \"contracts/FixedSupplyToken.sol\":5682:5690  balances */\n      0x02\n        /* \"contracts/FixedSupplyToken.sol\":5682:5695  balances[_to] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":5691:5694  _to */\n      dup8\n        /* \"contracts/FixedSupplyToken.sol\":5682:5695  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FixedSupplyToken.sol\":5682:5699  balances[_to].add */\n      tag_54\n      swap1\n        /* \"contracts/FixedSupplyToken.sol\":5682:5708  balances[_to].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_53:\n        /* \"contracts/FixedSupplyToken.sol\":5682:5724  balances[_to].add(_amount) > balances[_to] */\n      gt\n        /* \"contracts/FixedSupplyToken.sol\":5515:5724  balances[_from] >= _amount... */\n    tag_52:\n        /* \"contracts/FixedSupplyToken.sol\":5511:6258  if (balances[_from] >= _amount... */\n      iszero\n      tag_55\n      jumpi\n        /* \"contracts/FixedSupplyToken.sol\":5801:5829  balances[_from].sub(_amount) */\n      tag_56\n        /* \"contracts/FixedSupplyToken.sol\":5821:5828  _amount */\n      dup3\n        /* \"contracts/FixedSupplyToken.sol\":5801:5809  balances */\n      0x02\n        /* \"contracts/FixedSupplyToken.sol\":5801:5816  balances[_from] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":5810:5815  _from */\n      dup8\n        /* \"contracts/FixedSupplyToken.sol\":5801:5816  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FixedSupplyToken.sol\":5801:5820  balances[_from].sub */\n      tag_57\n      swap1\n        /* \"contracts/FixedSupplyToken.sol\":5801:5829  balances[_from].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_56:\n        /* \"contracts/FixedSupplyToken.sol\":5783:5791  balances */\n      0x02\n        /* \"contracts/FixedSupplyToken.sol\":5783:5798  balances[_from] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":5792:5797  _from */\n      dup7\n        /* \"contracts/FixedSupplyToken.sol\":5783:5798  balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FixedSupplyToken.sol\":5783:5829  balances[_from] = balances[_from].sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":5950:5989  allowed[_from][msg.sender].sub(_amount) */\n      tag_58\n        /* \"contracts/FixedSupplyToken.sol\":5981:5988  _amount */\n      dup3\n        /* \"contracts/FixedSupplyToken.sol\":5950:5957  allowed */\n      0x03\n        /* \"contracts/FixedSupplyToken.sol\":5950:5964  allowed[_from] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":5958:5963  _from */\n      dup8\n        /* \"contracts/FixedSupplyToken.sol\":5950:5964  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FixedSupplyToken.sol\":5950:5976  allowed[_from][msg.sender] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":5965:5975  msg.sender */\n      caller\n        /* \"contracts/FixedSupplyToken.sol\":5950:5976  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FixedSupplyToken.sol\":5950:5980  allowed[_from][msg.sender].sub */\n      tag_57\n      swap1\n        /* \"contracts/FixedSupplyToken.sol\":5950:5989  allowed[_from][msg.sender].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_58:\n        /* \"contracts/FixedSupplyToken.sol\":5921:5928  allowed */\n      0x03\n        /* \"contracts/FixedSupplyToken.sol\":5921:5935  allowed[_from] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":5929:5934  _from */\n      dup7\n        /* \"contracts/FixedSupplyToken.sol\":5921:5935  allowed[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FixedSupplyToken.sol\":5921:5947  allowed[_from][msg.sender] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":5936:5946  msg.sender */\n      caller\n        /* \"contracts/FixedSupplyToken.sol\":5921:5947  allowed[_from][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FixedSupplyToken.sol\":5921:5989  allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":6084:6110  balances[_to].add(_amount) */\n      tag_59\n        /* \"contracts/FixedSupplyToken.sol\":6102:6109  _amount */\n      dup3\n        /* \"contracts/FixedSupplyToken.sol\":6084:6092  balances */\n      0x02\n        /* \"contracts/FixedSupplyToken.sol\":6084:6097  balances[_to] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":6093:6096  _to */\n      dup7\n        /* \"contracts/FixedSupplyToken.sol\":6084:6097  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FixedSupplyToken.sol\":6084:6101  balances[_to].add */\n      tag_54\n      swap1\n        /* \"contracts/FixedSupplyToken.sol\":6084:6110  balances[_to].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_59:\n        /* \"contracts/FixedSupplyToken.sol\":6068:6076  balances */\n      0x02\n        /* \"contracts/FixedSupplyToken.sol\":6068:6081  balances[_to] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":6077:6080  _to */\n      dup6\n        /* \"contracts/FixedSupplyToken.sol\":6068:6081  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FixedSupplyToken.sol\":6068:6110  balances[_to] = balances[_to].add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":6158:6161  _to */\n      dup3\n        /* \"contracts/FixedSupplyToken.sol\":6142:6171  Transfer(_from, _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FixedSupplyToken.sol\":6151:6156  _from */\n      dup5\n        /* \"contracts/FixedSupplyToken.sol\":6142:6171  Transfer(_from, _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/FixedSupplyToken.sol\":6163:6170  _amount */\n      dup5\n        /* \"contracts/FixedSupplyToken.sol\":6142:6171  Transfer(_from, _to, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/FixedSupplyToken.sol\":6192:6196  true */\n      0x01\n        /* \"contracts/FixedSupplyToken.sol\":6185:6196  return true */\n      swap1\n      pop\n      jump(tag_49)\n        /* \"contracts/FixedSupplyToken.sol\":5511:6258  if (balances[_from] >= _amount... */\n    tag_55:\n        /* \"contracts/FixedSupplyToken.sol\":6242:6247  false */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":6235:6247  return false */\n      swap1\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":5272:6264  function transferFrom(... */\n    tag_49:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FixedSupplyToken.sol\":2555:2589  uint8 public constant decimals = 0 */\n    tag_29:\n        /* \"contracts/FixedSupplyToken.sol\":2588:2589  0 */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":2555:2589  uint8 public constant decimals = 0 */\n      dup2\n      jump\t// out\n        /* \"contracts/FixedSupplyToken.sol\":3832:3937  function balanceOf(address _owner) view public returns (uint256) {... */\n    tag_32:\n        /* \"contracts/FixedSupplyToken.sol\":3888:3895  uint256 */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":3914:3922  balances */\n      0x02\n        /* \"contracts/FixedSupplyToken.sol\":3914:3930  balances[_owner] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":3923:3929  _owner */\n      dup4\n        /* \"contracts/FixedSupplyToken.sol\":3914:3930  balances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FixedSupplyToken.sol\":3907:3930  return balances[_owner] */\n      swap1\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":3832:3937  function balanceOf(address _owner) view public returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/FixedSupplyToken.sol\":2795:2815  address public owner */\n    tag_34:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/FixedSupplyToken.sol\":2446:2485  string public constant symbol = \"FIXED\" */\n    tag_36:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x4649584544000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/FixedSupplyToken.sol\":4011:4794  function transfer(address _to, uint256 _amount) public returns (bool success) {... */\n    tag_43:\n        /* \"contracts/FixedSupplyToken.sol\":4075:4087  bool success */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":4127:4134  _amount */\n      dup2\n        /* \"contracts/FixedSupplyToken.sol\":4103:4111  balances */\n      0x02\n        /* \"contracts/FixedSupplyToken.sol\":4103:4123  balances[msg.sender] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":4112:4122  msg.sender */\n      caller\n        /* \"contracts/FixedSupplyToken.sol\":4103:4123  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FixedSupplyToken.sol\":4103:4134  balances[msg.sender] >= _amount */\n      lt\n      iszero\n        /* \"contracts/FixedSupplyToken.sol\":4103:4157  balances[msg.sender] >= _amount... */\n      dup1\n      iszero\n      tag_63\n      jumpi\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":4156:4157  0 */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":4146:4153  _amount */\n      dup3\n        /* \"contracts/FixedSupplyToken.sol\":4146:4157  _amount > 0 */\n      gt\n        /* \"contracts/FixedSupplyToken.sol\":4103:4157  balances[msg.sender] >= _amount... */\n    tag_63:\n        /* \"contracts/FixedSupplyToken.sol\":4103:4394  balances[msg.sender] >= _amount... */\n      dup1\n      iszero\n      tag_64\n      jumpi\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":4381:4389  balances */\n      0x02\n        /* \"contracts/FixedSupplyToken.sol\":4381:4394  balances[_to] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":4390:4393  _to */\n      dup5\n        /* \"contracts/FixedSupplyToken.sol\":4381:4394  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FixedSupplyToken.sol\":4351:4377  balances[_to].add(_amount) */\n      tag_65\n        /* \"contracts/FixedSupplyToken.sol\":4369:4376  _amount */\n      dup4\n        /* \"contracts/FixedSupplyToken.sol\":4351:4359  balances */\n      0x02\n        /* \"contracts/FixedSupplyToken.sol\":4351:4364  balances[_to] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":4360:4363  _to */\n      dup8\n        /* \"contracts/FixedSupplyToken.sol\":4351:4364  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FixedSupplyToken.sol\":4351:4368  balances[_to].add */\n      tag_54\n      swap1\n        /* \"contracts/FixedSupplyToken.sol\":4351:4377  balances[_to].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_65:\n        /* \"contracts/FixedSupplyToken.sol\":4350:4394  (balances[_to].add(_amount)) > balances[_to] */\n      gt\n        /* \"contracts/FixedSupplyToken.sol\":4103:4394  balances[msg.sender] >= _amount... */\n    tag_64:\n        /* \"contracts/FixedSupplyToken.sol\":4099:4788  if (balances[msg.sender] >= _amount... */\n      iszero\n      tag_66\n      jumpi\n        /* \"contracts/FixedSupplyToken.sol\":4481:4514  balances[msg.sender].sub(_amount) */\n      tag_67\n        /* \"contracts/FixedSupplyToken.sol\":4506:4513  _amount */\n      dup3\n        /* \"contracts/FixedSupplyToken.sol\":4481:4489  balances */\n      0x02\n        /* \"contracts/FixedSupplyToken.sol\":4481:4501  balances[msg.sender] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":4490:4500  msg.sender */\n      caller\n        /* \"contracts/FixedSupplyToken.sol\":4481:4501  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FixedSupplyToken.sol\":4481:4505  balances[msg.sender].sub */\n      tag_57\n      swap1\n        /* \"contracts/FixedSupplyToken.sol\":4481:4514  balances[msg.sender].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"contracts/FixedSupplyToken.sol\":4458:4466  balances */\n      0x02\n        /* \"contracts/FixedSupplyToken.sol\":4458:4478  balances[msg.sender] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":4467:4477  msg.sender */\n      caller\n        /* \"contracts/FixedSupplyToken.sol\":4458:4478  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FixedSupplyToken.sol\":4458:4514  balances[msg.sender] = balances[msg.sender].sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":4609:4635  balances[_to].add(_amount) */\n      tag_68\n        /* \"contracts/FixedSupplyToken.sol\":4627:4634  _amount */\n      dup3\n        /* \"contracts/FixedSupplyToken.sol\":4609:4617  balances */\n      0x02\n        /* \"contracts/FixedSupplyToken.sol\":4609:4622  balances[_to] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":4618:4621  _to */\n      dup7\n        /* \"contracts/FixedSupplyToken.sol\":4609:4622  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FixedSupplyToken.sol\":4609:4626  balances[_to].add */\n      tag_54\n      swap1\n        /* \"contracts/FixedSupplyToken.sol\":4609:4635  balances[_to].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_68:\n        /* \"contracts/FixedSupplyToken.sol\":4593:4601  balances */\n      0x02\n        /* \"contracts/FixedSupplyToken.sol\":4593:4606  balances[_to] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":4602:4605  _to */\n      dup6\n        /* \"contracts/FixedSupplyToken.sol\":4593:4606  balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FixedSupplyToken.sol\":4593:4635  balances[_to] = balances[_to].add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":4688:4691  _to */\n      dup3\n        /* \"contracts/FixedSupplyToken.sol\":4667:4701  Transfer(msg.sender, _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FixedSupplyToken.sol\":4676:4686  msg.sender */\n      caller\n        /* \"contracts/FixedSupplyToken.sol\":4667:4701  Transfer(msg.sender, _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/FixedSupplyToken.sol\":4693:4700  _amount */\n      dup5\n        /* \"contracts/FixedSupplyToken.sol\":4667:4701  Transfer(msg.sender, _to, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/FixedSupplyToken.sol\":4722:4726  true */\n      0x01\n        /* \"contracts/FixedSupplyToken.sol\":4715:4726  return true */\n      swap1\n      pop\n      jump(tag_62)\n        /* \"contracts/FixedSupplyToken.sol\":4099:4788  if (balances[msg.sender] >= _amount... */\n    tag_66:\n        /* \"contracts/FixedSupplyToken.sol\":4772:4777  false */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":4765:4777  return false */\n      swap1\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":4011:4794  function transfer(address _to, uint256 _amount) public returns (bool success) {... */\n    tag_62:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FixedSupplyToken.sol\":6673:6815  function allowance(address _owner, address _spender) view public returns (uint256 remaining) {... */\n    tag_46:\n        /* \"contracts/FixedSupplyToken.sol\":6747:6764  uint256 remaining */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":6783:6790  allowed */\n      0x03\n        /* \"contracts/FixedSupplyToken.sol\":6783:6798  allowed[_owner] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":6791:6797  _owner */\n      dup5\n        /* \"contracts/FixedSupplyToken.sol\":6783:6798  allowed[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FixedSupplyToken.sol\":6783:6808  allowed[_owner][_spender] */\n      0x00\n        /* \"contracts/FixedSupplyToken.sol\":6799:6807  _spender */\n      dup4\n        /* \"contracts/FixedSupplyToken.sol\":6783:6808  allowed[_owner][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FixedSupplyToken.sol\":6776:6808  return allowed[_owner][_spender] */\n      swap1\n      pop\n        /* \"contracts/FixedSupplyToken.sol\":6673:6815  function allowance(address _owner, address _spender) view public returns (uint256 remaining) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_54:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":892:899  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":911:920  uint256 c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":927:928  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":923:924  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":923:928  a + b */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":911:928  uint256 c = a + b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":951:952  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":946:947  c */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":946:952  c >= a */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":938:984  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1002:1003  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":995:1003  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1274:1408  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_57:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1332:1339  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1358:1401  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1362:1363  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1365:1366  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1358:1401  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1358:1361  sub */\n      tag_75\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1358:1401  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_74:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1351:1401  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1274:1408  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1732:1919  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_75:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1818:1825  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1850:1851  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1845:1846  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1845:1851  b <= a */\n      gt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1853:1865  errorMessage */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1837:1866  require(b <= a, errorMessage) */\n      swap1\n      tag_77\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_78:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_80\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_78)\n    tag_80:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1837:1866  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_81\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_81:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1876:1885  uint256 c */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1892:1893  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1888:1889  a */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1888:1893  a - b */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1876:1893  uint256 c = a - b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1911:1912  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1904:1912  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1732:1919  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a723158201bffc8145f4a5d24d9d97d3f7d17a0c2ecdc9042434a5953814c4df423e6c64164736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052620f424060005534801561001757600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060005460026000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f46806100d06000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806370a082311161006657806370a08231146102545780638da5cb5b146102ac57806395d89b41146102f6578063a9059cbb14610379578063dd62ed3e146103df5761009e565b806306fdde03146100a3578063095ea7b31461012657806318160ddd1461018c57806323b872dd146101aa578063313ce56714610230575b600080fd5b6100ab610457565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100eb5780820151818401526020810190506100d0565b50505050905090810190601f1680156101185780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101726004803603604081101561013c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610490565b604051808215151515815260200191505060405180910390f35b610194610582565b6040518082815260200191505060405180910390f35b610216600480360360608110156101c057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061058b565b604051808215151515815260200191505060405180910390f35b6102386109b7565b604051808260ff1660ff16815260200191505060405180910390f35b6102966004803603602081101561026a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109bc565b6040518082815260200191505060405180910390f35b6102b4610a05565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102fe610a2b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561033e578082015181840152602081019050610323565b50505050905090810190601f16801561036b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103c56004803603604081101561038f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a64565b604051808215151515815260200191505060405180910390f35b610441600480360360408110156103f557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cf8565b6040518082815260200191505060405180910390f35b6040518060400160405280601a81526020017f4578616d706c6520466978656420537570706c7920546f6b656e00000000000081525081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60008054905090565b600081600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015610658575081600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b80156106645750600082115b80156106ff5750600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106fd83600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d7f90919063ffffffff16565b115b156109ab5761075682600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e0790919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061082882600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e0790919063ffffffff16565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506108fa82600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d7f90919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190506109b0565b600090505b9392505050565b600081565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600581526020017f464958454400000000000000000000000000000000000000000000000000000081525081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015610ab55750600082115b8015610b505750600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b4e83600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d7f90919063ffffffff16565b115b15610ced57610ba782600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e0790919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610c3c82600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d7f90919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a360019050610cf2565b600090505b92915050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080828401905083811015610dfd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000610e4983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610e51565b905092915050565b6000838311158290610efe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ec3578082015181840152602081019050610ea8565b50505050905090810190601f168015610ef05780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838503905080915050939250505056fea265627a7a723158201bffc8145f4a5d24d9d97d3f7d17a0c2ecdc9042434a5953814c4df423e6c64164736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0xF4240 PUSH1 0x0 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 SLOAD PUSH1 0x2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xF46 DUP1 PUSH2 0xD0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3DF JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x230 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x118 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x490 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x194 PUSH2 0x582 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x58B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x238 PUSH2 0x9B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B4 PUSH2 0xA05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH2 0xA2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x33E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x323 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x36B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x441 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4578616D706C6520466978656420537570706C7920546F6B656E000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0x658 JUMPI POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x664 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST DUP1 ISZERO PUSH2 0x6FF JUMPI POP PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x6FD DUP4 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD7F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x9AB JUMPI PUSH2 0x756 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x828 DUP3 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x8FA DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD7F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP PUSH2 0x9B0 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4649584544000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0xAB5 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST DUP1 ISZERO PUSH2 0xB50 JUMPI POP PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB4E DUP4 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD7F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0xCED JUMPI PUSH2 0xBA7 DUP3 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xC3C DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD7F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE49 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xE51 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xEFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEA8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEF0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SHL SELFDESTRUCT 0xC8 EQ 0x5F 0x4A 0x5D 0x24 0xD9 0xD9 PUSH30 0x3F7D17A0C2ECDC9042434A5953814C4DF423E6C64164736F6C6343000511 STOP ORIGIN ",
							"sourceMap": "2396:4422:0:-;;;2618:7;2595:30;;3551:128;8:9:-1;5:2;;;30:1;27;20:12;5:2;3551:128:0;3622:10;3614:5;;:18;;;;;;;;;;;;;;;;;;3660:12;;3642:8;:15;3651:5;;;;;;;;;;;3642:15;;;;;;;;;;;;;;;:30;;;;2396:4422;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061009e5760003560e01c806370a082311161006657806370a08231146102545780638da5cb5b146102ac57806395d89b41146102f6578063a9059cbb14610379578063dd62ed3e146103df5761009e565b806306fdde03146100a3578063095ea7b31461012657806318160ddd1461018c57806323b872dd146101aa578063313ce56714610230575b600080fd5b6100ab610457565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100eb5780820151818401526020810190506100d0565b50505050905090810190601f1680156101185780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101726004803603604081101561013c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610490565b604051808215151515815260200191505060405180910390f35b610194610582565b6040518082815260200191505060405180910390f35b610216600480360360608110156101c057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061058b565b604051808215151515815260200191505060405180910390f35b6102386109b7565b604051808260ff1660ff16815260200191505060405180910390f35b6102966004803603602081101561026a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109bc565b6040518082815260200191505060405180910390f35b6102b4610a05565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102fe610a2b565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561033e578082015181840152602081019050610323565b50505050905090810190601f16801561036b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103c56004803603604081101561038f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a64565b604051808215151515815260200191505060405180910390f35b610441600480360360408110156103f557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cf8565b6040518082815260200191505060405180910390f35b6040518060400160405280601a81526020017f4578616d706c6520466978656420537570706c7920546f6b656e00000000000081525081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60008054905090565b600081600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015610658575081600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b80156106645750600082115b80156106ff5750600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106fd83600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d7f90919063ffffffff16565b115b156109ab5761075682600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e0790919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061082882600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e0790919063ffffffff16565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506108fa82600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d7f90919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190506109b0565b600090505b9392505050565b600081565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600581526020017f464958454400000000000000000000000000000000000000000000000000000081525081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410158015610ab55750600082115b8015610b505750600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b4e83600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d7f90919063ffffffff16565b115b15610ced57610ba782600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e0790919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610c3c82600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d7f90919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a360019050610cf2565b600090505b92915050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080828401905083811015610dfd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000610e4983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610e51565b905092915050565b6000838311158290610efe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ec3578082015181840152602081019050610ea8565b50505050905090810190601f168015610ef05780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838503905080915050939250505056fea265627a7a723158201bffc8145f4a5d24d9d97d3f7d17a0c2ecdc9042434a5953814c4df423e6c64164736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3DF JUMPI PUSH2 0x9E JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x230 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0x457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x118 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x490 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x194 PUSH2 0x582 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x58B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x238 PUSH2 0x9B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B4 PUSH2 0xA05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH2 0xA2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x33E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x323 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x36B JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x441 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4578616D706C6520466978656420537570706C7920546F6B656E000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0x658 JUMPI POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x664 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST DUP1 ISZERO PUSH2 0x6FF JUMPI POP PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x6FD DUP4 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD7F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x9AB JUMPI PUSH2 0x756 DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x828 DUP3 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x8FA DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD7F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP PUSH2 0x9B0 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4649584544000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0xAB5 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST DUP1 ISZERO PUSH2 0xB50 JUMPI POP PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB4E DUP4 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD7F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0xCED JUMPI PUSH2 0xBA7 DUP3 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xC3C DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD7F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE49 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xE51 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xEFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEA8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEF0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SHL SELFDESTRUCT 0xC8 EQ 0x5F 0x4A 0x5D 0x24 0xD9 0xD9 PUSH30 0x3F7D17A0C2ECDC9042434A5953814C4DF423E6C64164736F6C6343000511 STOP ORIGIN ",
							"sourceMap": "2396:4422:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2396:4422:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2491:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2491:58:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6454:213;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6454:213:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3685:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5272:992;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5272:992:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2555:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3832:105;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3832:105:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2795:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2446:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2446:39:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4011:783;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4011:783:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6673:142;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6673:142:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2491:58;;;;;;;;;;;;;;;;;;;:::o;6454:213::-;6522:12;6578:7;6546;:19;6554:10;6546:19;;;;;;;;;;;;;;;:29;6566:8;6546:29;;;;;;;;;;;;;;;:39;;;;6621:8;6600:39;;6609:10;6600:39;;;6631:7;6600:39;;;;;;;;;;;;;;;;;;6656:4;6649:11;;6454:213;;;;:::o;3685:89::-;3729:7;3755:12;;3748:19;;3685:89;:::o;5272:992::-;5373:4;5534:7;5515:8;:15;5524:5;5515:15;;;;;;;;;;;;;;;;:26;;:75;;;;;5583:7;5553;:14;5561:5;5553:14;;;;;;;;;;;;;;;:26;5568:10;5553:26;;;;;;;;;;;;;;;;:37;;5515:75;:98;;;;;5612:1;5602:7;:11;5515:98;:209;;;;;5711:8;:13;5720:3;5711:13;;;;;;;;;;;;;;;;5682:26;5700:7;5682:8;:13;5691:3;5682:13;;;;;;;;;;;;;;;;:17;;:26;;;;:::i;:::-;:42;5515:209;5511:747;;;5801:28;5821:7;5801:8;:15;5810:5;5801:15;;;;;;;;;;;;;;;;:19;;:28;;;;:::i;:::-;5783:8;:15;5792:5;5783:15;;;;;;;;;;;;;;;:46;;;;5950:39;5981:7;5950;:14;5958:5;5950:14;;;;;;;;;;;;;;;:26;5965:10;5950:26;;;;;;;;;;;;;;;;:30;;:39;;;;:::i;:::-;5921:7;:14;5929:5;5921:14;;;;;;;;;;;;;;;:26;5936:10;5921:26;;;;;;;;;;;;;;;:68;;;;6084:26;6102:7;6084:8;:13;6093:3;6084:13;;;;;;;;;;;;;;;;:17;;:26;;;;:::i;:::-;6068:8;:13;6077:3;6068:13;;;;;;;;;;;;;;;:42;;;;6158:3;6142:29;;6151:5;6142:29;;;6163:7;6142:29;;;;;;;;;;;;;;;;;;6192:4;6185:11;;;;5511:747;6242:5;6235:12;;5272:992;;;;;;:::o;2555:34::-;2588:1;2555:34;:::o;3832:105::-;3888:7;3914:8;:16;3923:6;3914:16;;;;;;;;;;;;;;;;3907:23;;3832:105;;;:::o;2795:20::-;;;;;;;;;;;;;:::o;2446:39::-;;;;;;;;;;;;;;;;;;;:::o;4011:783::-;4075:12;4127:7;4103:8;:20;4112:10;4103:20;;;;;;;;;;;;;;;;:31;;:54;;;;;4156:1;4146:7;:11;4103:54;:291;;;;;4381:8;:13;4390:3;4381:13;;;;;;;;;;;;;;;;4351:26;4369:7;4351:8;:13;4360:3;4351:13;;;;;;;;;;;;;;;;:17;;:26;;;;:::i;:::-;4350:44;4103:291;4099:689;;;4481:33;4506:7;4481:8;:20;4490:10;4481:20;;;;;;;;;;;;;;;;:24;;:33;;;;:::i;:::-;4458:8;:20;4467:10;4458:20;;;;;;;;;;;;;;;:56;;;;4609:26;4627:7;4609:8;:13;4618:3;4609:13;;;;;;;;;;;;;;;;:17;;:26;;;;:::i;:::-;4593:8;:13;4602:3;4593:13;;;;;;;;;;;;;;;:42;;;;4688:3;4667:34;;4676:10;4667:34;;;4693:7;4667:34;;;;;;;;;;;;;;;;;;4722:4;4715:11;;;;4099:689;4772:5;4765:12;;4011:783;;;;;:::o;6673:142::-;6747:17;6783:7;:15;6791:6;6783:15;;;;;;;;;;;;;;;:25;6799:8;6783:25;;;;;;;;;;;;;;;;6776:32;;6673:142;;;;:::o;834:176:1:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;1274:134::-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;1732:187::-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "782000",
								"executionCost": "63430",
								"totalCost": "845430"
							},
							"external": {
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "22391",
								"balanceOf(address)": "1196",
								"decimals()": "306",
								"name()": "infinite",
								"owner()": "1075",
								"symbol()": "infinite",
								"totalSupply()": "1058",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2396,
									"end": 6818,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 2396,
									"end": 6818,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2396,
									"end": 6818,
									"name": "MSTORE"
								},
								{
									"begin": 2618,
									"end": 2625,
									"name": "PUSH",
									"value": "F4240"
								},
								{
									"begin": 2595,
									"end": 2625,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2595,
									"end": 2625,
									"name": "SSTORE"
								},
								{
									"begin": 3551,
									"end": 3679,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 3551,
									"end": 3679,
									"name": "POP"
								},
								{
									"begin": 3622,
									"end": 3632,
									"name": "CALLER"
								},
								{
									"begin": 3614,
									"end": 3619,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 3614,
									"end": 3619,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3614,
									"end": 3632,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 3614,
									"end": 3632,
									"name": "EXP"
								},
								{
									"begin": 3614,
									"end": 3632,
									"name": "DUP2"
								},
								{
									"begin": 3614,
									"end": 3632,
									"name": "SLOAD"
								},
								{
									"begin": 3614,
									"end": 3632,
									"name": "DUP2"
								},
								{
									"begin": 3614,
									"end": 3632,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3614,
									"end": 3632,
									"name": "MUL"
								},
								{
									"begin": 3614,
									"end": 3632,
									"name": "NOT"
								},
								{
									"begin": 3614,
									"end": 3632,
									"name": "AND"
								},
								{
									"begin": 3614,
									"end": 3632,
									"name": "SWAP1"
								},
								{
									"begin": 3614,
									"end": 3632,
									"name": "DUP4"
								},
								{
									"begin": 3614,
									"end": 3632,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3614,
									"end": 3632,
									"name": "AND"
								},
								{
									"begin": 3614,
									"end": 3632,
									"name": "MUL"
								},
								{
									"begin": 3614,
									"end": 3632,
									"name": "OR"
								},
								{
									"begin": 3614,
									"end": 3632,
									"name": "SWAP1"
								},
								{
									"begin": 3614,
									"end": 3632,
									"name": "SSTORE"
								},
								{
									"begin": 3614,
									"end": 3632,
									"name": "POP"
								},
								{
									"begin": 3660,
									"end": 3672,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3660,
									"end": 3672,
									"name": "SLOAD"
								},
								{
									"begin": 3642,
									"end": 3650,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 3642,
									"end": 3657,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3651,
									"end": 3656,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 3651,
									"end": 3656,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3651,
									"end": 3656,
									"name": "SWAP1"
								},
								{
									"begin": 3651,
									"end": 3656,
									"name": "SLOAD"
								},
								{
									"begin": 3651,
									"end": 3656,
									"name": "SWAP1"
								},
								{
									"begin": 3651,
									"end": 3656,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 3651,
									"end": 3656,
									"name": "EXP"
								},
								{
									"begin": 3651,
									"end": 3656,
									"name": "SWAP1"
								},
								{
									"begin": 3651,
									"end": 3656,
									"name": "DIV"
								},
								{
									"begin": 3651,
									"end": 3656,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3651,
									"end": 3656,
									"name": "AND"
								},
								{
									"begin": 3642,
									"end": 3657,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3642,
									"end": 3657,
									"name": "AND"
								},
								{
									"begin": 3642,
									"end": 3657,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3642,
									"end": 3657,
									"name": "AND"
								},
								{
									"begin": 3642,
									"end": 3657,
									"name": "DUP2"
								},
								{
									"begin": 3642,
									"end": 3657,
									"name": "MSTORE"
								},
								{
									"begin": 3642,
									"end": 3657,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3642,
									"end": 3657,
									"name": "ADD"
								},
								{
									"begin": 3642,
									"end": 3657,
									"name": "SWAP1"
								},
								{
									"begin": 3642,
									"end": 3657,
									"name": "DUP2"
								},
								{
									"begin": 3642,
									"end": 3657,
									"name": "MSTORE"
								},
								{
									"begin": 3642,
									"end": 3657,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 3642,
									"end": 3657,
									"name": "ADD"
								},
								{
									"begin": 3642,
									"end": 3657,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 3642,
									"end": 3657,
									"name": "KECCAK256"
								},
								{
									"begin": 3642,
									"end": 3672,
									"name": "DUP2"
								},
								{
									"begin": 3642,
									"end": 3672,
									"name": "SWAP1"
								},
								{
									"begin": 3642,
									"end": 3672,
									"name": "SSTORE"
								},
								{
									"begin": 3642,
									"end": 3672,
									"name": "POP"
								},
								{
									"begin": 2396,
									"end": 6818,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2396,
									"end": 6818,
									"name": "DUP1"
								},
								{
									"begin": 2396,
									"end": 6818,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2396,
									"end": 6818,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2396,
									"end": 6818,
									"name": "CODECOPY"
								},
								{
									"begin": 2396,
									"end": 6818,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2396,
									"end": 6818,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158201bffc8145f4a5d24d9d97d3f7d17a0c2ecdc9042434a5953814c4df423e6c64164736f6c63430005110032",
									".code": [
										{
											"begin": 2396,
											"end": 6818,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "MSTORE"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "POP"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "LT"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "JUMPI"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "SHR"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "DUP1"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "GT"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "JUMPI"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "DUP1"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "EQ"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "JUMPI"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "DUP1"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "EQ"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "JUMPI"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "DUP1"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "EQ"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "JUMPI"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "DUP1"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "EQ"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "JUMPI"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "DUP1"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "EQ"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "JUMPI"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "JUMP"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "JUMPDEST"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "DUP1"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "EQ"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "JUMPI"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "DUP1"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "EQ"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "JUMPI"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "DUP1"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "EQ"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "JUMPI"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "DUP1"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "EQ"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "JUMPI"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "DUP1"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "EQ"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "JUMPI"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "JUMPDEST"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "DUP1"
										},
										{
											"begin": 2396,
											"end": 6818,
											"name": "REVERT"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "JUMPDEST"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "JUMPDEST"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "MLOAD"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "DUP1"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "DUP1"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "ADD"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "DUP3"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "DUP2"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "SUB"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "DUP3"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "MSTORE"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "DUP4"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "DUP2"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "DUP2"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "MLOAD"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "DUP2"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "MSTORE"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "ADD"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "SWAP2"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "POP"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "DUP1"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "MLOAD"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "SWAP1"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "ADD"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "SWAP1"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "DUP1"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "DUP4"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "POP"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "POP"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "POP"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "SWAP1"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "POP"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "SWAP1"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "DUP2"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "ADD"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "SWAP1"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "AND"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "DUP1"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "ISZERO"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "JUMPI"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "DUP1"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "DUP3"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "SUB"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "DUP1"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "MLOAD"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "DUP4"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "SUB"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "EXP"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "SUB"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "NOT"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "AND"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "DUP2"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "MSTORE"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "ADD"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "SWAP2"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "POP"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "JUMPDEST"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "POP"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "SWAP3"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "POP"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "POP"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "POP"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "MLOAD"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "DUP1"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "SWAP2"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "SUB"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "SWAP1"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "RETURN"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "JUMPDEST"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "DUP1"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "DUP2"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "ADD"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "SWAP1"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "DUP1"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "DUP1"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "AND"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "SWAP1"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "ADD"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "SWAP1"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "SWAP3"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "SWAP2"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "SWAP1"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "DUP1"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "SWAP1"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "ADD"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "SWAP1"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "SWAP3"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "SWAP2"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "SWAP1"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "POP"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "POP"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "POP"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "JUMPDEST"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "MLOAD"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "DUP1"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "DUP3"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "ISZERO"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "ISZERO"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "ISZERO"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "ISZERO"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "DUP2"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "MSTORE"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "ADD"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "SWAP2"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "POP"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "POP"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "MLOAD"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "DUP1"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "SWAP2"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "SUB"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "SWAP1"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "RETURN"
										},
										{
											"begin": 3685,
											"end": 3774,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 3685,
											"end": 3774,
											"name": "JUMPDEST"
										},
										{
											"begin": 3685,
											"end": 3774,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 3685,
											"end": 3774,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 3685,
											"end": 3774,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3685,
											"end": 3774,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 3685,
											"end": 3774,
											"name": "JUMPDEST"
										},
										{
											"begin": 3685,
											"end": 3774,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3685,
											"end": 3774,
											"name": "MLOAD"
										},
										{
											"begin": 3685,
											"end": 3774,
											"name": "DUP1"
										},
										{
											"begin": 3685,
											"end": 3774,
											"name": "DUP3"
										},
										{
											"begin": 3685,
											"end": 3774,
											"name": "DUP2"
										},
										{
											"begin": 3685,
											"end": 3774,
											"name": "MSTORE"
										},
										{
											"begin": 3685,
											"end": 3774,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3685,
											"end": 3774,
											"name": "ADD"
										},
										{
											"begin": 3685,
											"end": 3774,
											"name": "SWAP2"
										},
										{
											"begin": 3685,
											"end": 3774,
											"name": "POP"
										},
										{
											"begin": 3685,
											"end": 3774,
											"name": "POP"
										},
										{
											"begin": 3685,
											"end": 3774,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3685,
											"end": 3774,
											"name": "MLOAD"
										},
										{
											"begin": 3685,
											"end": 3774,
											"name": "DUP1"
										},
										{
											"begin": 3685,
											"end": 3774,
											"name": "SWAP2"
										},
										{
											"begin": 3685,
											"end": 3774,
											"name": "SUB"
										},
										{
											"begin": 3685,
											"end": 3774,
											"name": "SWAP1"
										},
										{
											"begin": 3685,
											"end": 3774,
											"name": "RETURN"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "JUMPDEST"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "DUP1"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "DUP2"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "ADD"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "SWAP1"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "DUP1"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "DUP1"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "AND"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "SWAP1"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "ADD"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "SWAP1"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "SWAP3"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "SWAP2"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "SWAP1"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "DUP1"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "AND"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "SWAP1"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "ADD"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "SWAP1"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "SWAP3"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "SWAP2"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "SWAP1"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "DUP1"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "SWAP1"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "ADD"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "SWAP1"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "SWAP3"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "SWAP2"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "SWAP1"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "POP"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "POP"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "POP"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "JUMPDEST"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "MLOAD"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "DUP1"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "DUP3"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "ISZERO"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "ISZERO"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "ISZERO"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "ISZERO"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "DUP2"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "MSTORE"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "ADD"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "SWAP2"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "POP"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "POP"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "MLOAD"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "DUP1"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "SWAP2"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "SUB"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "SWAP1"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "RETURN"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "JUMPDEST"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "JUMPDEST"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "MLOAD"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "DUP1"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "DUP3"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "AND"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "AND"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "DUP2"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "MSTORE"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "ADD"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "SWAP2"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "POP"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "POP"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "MLOAD"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "DUP1"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "SWAP2"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "SUB"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "SWAP1"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "RETURN"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "JUMPDEST"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "DUP1"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "DUP2"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "ADD"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "SWAP1"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "DUP1"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "DUP1"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "AND"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "SWAP1"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "ADD"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "SWAP1"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "SWAP3"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "SWAP2"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "SWAP1"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "POP"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "POP"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "POP"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "JUMPDEST"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "MLOAD"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "DUP1"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "DUP3"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "DUP2"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "MSTORE"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "ADD"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "SWAP2"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "POP"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "POP"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "MLOAD"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "DUP1"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "SWAP2"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "SUB"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "SWAP1"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "RETURN"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "JUMPDEST"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "JUMPDEST"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "MLOAD"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "DUP1"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "DUP3"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "AND"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "AND"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "DUP2"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "MSTORE"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "ADD"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "SWAP2"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "POP"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "POP"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "MLOAD"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "DUP1"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "SWAP2"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "SUB"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "SWAP1"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "RETURN"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "JUMPDEST"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "JUMPDEST"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "MLOAD"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "DUP1"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "DUP1"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "ADD"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "DUP3"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "DUP2"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "SUB"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "DUP3"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "MSTORE"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "DUP4"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "DUP2"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "DUP2"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "MLOAD"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "DUP2"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "MSTORE"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "ADD"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "SWAP2"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "POP"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "DUP1"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "MLOAD"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "SWAP1"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "ADD"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "SWAP1"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "DUP1"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "DUP4"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "POP"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "POP"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "POP"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "SWAP1"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "POP"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "SWAP1"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "DUP2"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "ADD"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "SWAP1"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "AND"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "DUP1"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "ISZERO"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "JUMPI"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "DUP1"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "DUP3"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "SUB"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "DUP1"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "MLOAD"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "DUP4"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "SUB"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "EXP"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "SUB"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "NOT"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "AND"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "DUP2"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "MSTORE"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "ADD"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "SWAP2"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "POP"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "JUMPDEST"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "POP"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "SWAP3"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "POP"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "POP"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "POP"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "MLOAD"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "DUP1"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "SWAP2"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "SUB"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "SWAP1"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "RETURN"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "JUMPDEST"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "DUP1"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "DUP2"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "ADD"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "SWAP1"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "DUP1"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "DUP1"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "AND"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "SWAP1"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "ADD"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "SWAP1"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "SWAP3"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "SWAP2"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "SWAP1"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "DUP1"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "SWAP1"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "ADD"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "SWAP1"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "SWAP3"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "SWAP2"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "SWAP1"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "POP"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "POP"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "POP"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "JUMPDEST"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "MLOAD"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "DUP1"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "DUP3"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "ISZERO"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "ISZERO"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "ISZERO"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "ISZERO"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "DUP2"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "MSTORE"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "ADD"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "SWAP2"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "POP"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "POP"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "MLOAD"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "DUP1"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "SWAP2"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "SUB"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "SWAP1"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "RETURN"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "JUMPDEST"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "DUP1"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "DUP2"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "ADD"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "SWAP1"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "DUP1"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "DUP1"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "AND"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "SWAP1"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "ADD"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "SWAP1"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "SWAP3"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "SWAP2"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "SWAP1"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "DUP1"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "AND"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "SWAP1"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "ADD"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "SWAP1"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "SWAP3"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "SWAP2"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "SWAP1"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "POP"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "POP"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "POP"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "JUMPDEST"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "MLOAD"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "DUP1"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "DUP3"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "DUP2"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "MSTORE"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "ADD"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "SWAP2"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "POP"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "POP"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "MLOAD"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "DUP1"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "SWAP2"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "SUB"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "SWAP1"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "RETURN"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "JUMPDEST"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "MLOAD"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "DUP1"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "ADD"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "MSTORE"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "DUP1"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "DUP2"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "MSTORE"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "ADD"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "PUSH",
											"value": "4578616D706C6520466978656420537570706C7920546F6B656E000000000000"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "DUP2"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "MSTORE"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "POP"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "DUP2"
										},
										{
											"begin": 2491,
											"end": 2549,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "JUMPDEST"
										},
										{
											"begin": 6522,
											"end": 6534,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6578,
											"end": 6585,
											"name": "DUP2"
										},
										{
											"begin": 6546,
											"end": 6553,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6546,
											"end": 6565,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6554,
											"end": 6564,
											"name": "CALLER"
										},
										{
											"begin": 6546,
											"end": 6565,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6546,
											"end": 6565,
											"name": "AND"
										},
										{
											"begin": 6546,
											"end": 6565,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6546,
											"end": 6565,
											"name": "AND"
										},
										{
											"begin": 6546,
											"end": 6565,
											"name": "DUP2"
										},
										{
											"begin": 6546,
											"end": 6565,
											"name": "MSTORE"
										},
										{
											"begin": 6546,
											"end": 6565,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6546,
											"end": 6565,
											"name": "ADD"
										},
										{
											"begin": 6546,
											"end": 6565,
											"name": "SWAP1"
										},
										{
											"begin": 6546,
											"end": 6565,
											"name": "DUP2"
										},
										{
											"begin": 6546,
											"end": 6565,
											"name": "MSTORE"
										},
										{
											"begin": 6546,
											"end": 6565,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6546,
											"end": 6565,
											"name": "ADD"
										},
										{
											"begin": 6546,
											"end": 6565,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6546,
											"end": 6565,
											"name": "KECCAK256"
										},
										{
											"begin": 6546,
											"end": 6575,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "DUP6"
										},
										{
											"begin": 6546,
											"end": 6575,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6546,
											"end": 6575,
											"name": "AND"
										},
										{
											"begin": 6546,
											"end": 6575,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6546,
											"end": 6575,
											"name": "AND"
										},
										{
											"begin": 6546,
											"end": 6575,
											"name": "DUP2"
										},
										{
											"begin": 6546,
											"end": 6575,
											"name": "MSTORE"
										},
										{
											"begin": 6546,
											"end": 6575,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6546,
											"end": 6575,
											"name": "ADD"
										},
										{
											"begin": 6546,
											"end": 6575,
											"name": "SWAP1"
										},
										{
											"begin": 6546,
											"end": 6575,
											"name": "DUP2"
										},
										{
											"begin": 6546,
											"end": 6575,
											"name": "MSTORE"
										},
										{
											"begin": 6546,
											"end": 6575,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6546,
											"end": 6575,
											"name": "ADD"
										},
										{
											"begin": 6546,
											"end": 6575,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6546,
											"end": 6575,
											"name": "KECCAK256"
										},
										{
											"begin": 6546,
											"end": 6585,
											"name": "DUP2"
										},
										{
											"begin": 6546,
											"end": 6585,
											"name": "SWAP1"
										},
										{
											"begin": 6546,
											"end": 6585,
											"name": "SSTORE"
										},
										{
											"begin": 6546,
											"end": 6585,
											"name": "POP"
										},
										{
											"begin": 6621,
											"end": 6629,
											"name": "DUP3"
										},
										{
											"begin": 6600,
											"end": 6639,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6600,
											"end": 6639,
											"name": "AND"
										},
										{
											"begin": 6609,
											"end": 6619,
											"name": "CALLER"
										},
										{
											"begin": 6600,
											"end": 6639,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6600,
											"end": 6639,
											"name": "AND"
										},
										{
											"begin": 6600,
											"end": 6639,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 6631,
											"end": 6638,
											"name": "DUP5"
										},
										{
											"begin": 6600,
											"end": 6639,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6600,
											"end": 6639,
											"name": "MLOAD"
										},
										{
											"begin": 6600,
											"end": 6639,
											"name": "DUP1"
										},
										{
											"begin": 6600,
											"end": 6639,
											"name": "DUP3"
										},
										{
											"begin": 6600,
											"end": 6639,
											"name": "DUP2"
										},
										{
											"begin": 6600,
											"end": 6639,
											"name": "MSTORE"
										},
										{
											"begin": 6600,
											"end": 6639,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6600,
											"end": 6639,
											"name": "ADD"
										},
										{
											"begin": 6600,
											"end": 6639,
											"name": "SWAP2"
										},
										{
											"begin": 6600,
											"end": 6639,
											"name": "POP"
										},
										{
											"begin": 6600,
											"end": 6639,
											"name": "POP"
										},
										{
											"begin": 6600,
											"end": 6639,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6600,
											"end": 6639,
											"name": "MLOAD"
										},
										{
											"begin": 6600,
											"end": 6639,
											"name": "DUP1"
										},
										{
											"begin": 6600,
											"end": 6639,
											"name": "SWAP2"
										},
										{
											"begin": 6600,
											"end": 6639,
											"name": "SUB"
										},
										{
											"begin": 6600,
											"end": 6639,
											"name": "SWAP1"
										},
										{
											"begin": 6600,
											"end": 6639,
											"name": "LOG3"
										},
										{
											"begin": 6656,
											"end": 6660,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6649,
											"end": 6660,
											"name": "SWAP1"
										},
										{
											"begin": 6649,
											"end": 6660,
											"name": "POP"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "SWAP3"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "SWAP2"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "POP"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "POP"
										},
										{
											"begin": 6454,
											"end": 6667,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3685,
											"end": 3774,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 3685,
											"end": 3774,
											"name": "JUMPDEST"
										},
										{
											"begin": 3729,
											"end": 3736,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "DUP1"
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "SLOAD"
										},
										{
											"begin": 3748,
											"end": 3767,
											"name": "SWAP1"
										},
										{
											"begin": 3748,
											"end": 3767,
											"name": "POP"
										},
										{
											"begin": 3685,
											"end": 3774,
											"name": "SWAP1"
										},
										{
											"begin": 3685,
											"end": 3774,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "JUMPDEST"
										},
										{
											"begin": 5373,
											"end": 5377,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5534,
											"end": 5541,
											"name": "DUP2"
										},
										{
											"begin": 5515,
											"end": 5523,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5515,
											"end": 5530,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5524,
											"end": 5529,
											"name": "DUP7"
										},
										{
											"begin": 5515,
											"end": 5530,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5515,
											"end": 5530,
											"name": "AND"
										},
										{
											"begin": 5515,
											"end": 5530,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5515,
											"end": 5530,
											"name": "AND"
										},
										{
											"begin": 5515,
											"end": 5530,
											"name": "DUP2"
										},
										{
											"begin": 5515,
											"end": 5530,
											"name": "MSTORE"
										},
										{
											"begin": 5515,
											"end": 5530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5515,
											"end": 5530,
											"name": "ADD"
										},
										{
											"begin": 5515,
											"end": 5530,
											"name": "SWAP1"
										},
										{
											"begin": 5515,
											"end": 5530,
											"name": "DUP2"
										},
										{
											"begin": 5515,
											"end": 5530,
											"name": "MSTORE"
										},
										{
											"begin": 5515,
											"end": 5530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5515,
											"end": 5530,
											"name": "ADD"
										},
										{
											"begin": 5515,
											"end": 5530,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5515,
											"end": 5530,
											"name": "KECCAK256"
										},
										{
											"begin": 5515,
											"end": 5530,
											"name": "SLOAD"
										},
										{
											"begin": 5515,
											"end": 5541,
											"name": "LT"
										},
										{
											"begin": 5515,
											"end": 5541,
											"name": "ISZERO"
										},
										{
											"begin": 5515,
											"end": 5590,
											"name": "DUP1"
										},
										{
											"begin": 5515,
											"end": 5590,
											"name": "ISZERO"
										},
										{
											"begin": 5515,
											"end": 5590,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 5515,
											"end": 5590,
											"name": "JUMPI"
										},
										{
											"begin": 5515,
											"end": 5590,
											"name": "POP"
										},
										{
											"begin": 5583,
											"end": 5590,
											"name": "DUP2"
										},
										{
											"begin": 5553,
											"end": 5560,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5561,
											"end": 5566,
											"name": "DUP7"
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "AND"
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "AND"
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "DUP2"
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "MSTORE"
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "ADD"
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "SWAP1"
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "DUP2"
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "MSTORE"
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "ADD"
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5567,
											"name": "KECCAK256"
										},
										{
											"begin": 5553,
											"end": 5579,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5568,
											"end": 5578,
											"name": "CALLER"
										},
										{
											"begin": 5553,
											"end": 5579,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5553,
											"end": 5579,
											"name": "AND"
										},
										{
											"begin": 5553,
											"end": 5579,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5553,
											"end": 5579,
											"name": "AND"
										},
										{
											"begin": 5553,
											"end": 5579,
											"name": "DUP2"
										},
										{
											"begin": 5553,
											"end": 5579,
											"name": "MSTORE"
										},
										{
											"begin": 5553,
											"end": 5579,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5553,
											"end": 5579,
											"name": "ADD"
										},
										{
											"begin": 5553,
											"end": 5579,
											"name": "SWAP1"
										},
										{
											"begin": 5553,
											"end": 5579,
											"name": "DUP2"
										},
										{
											"begin": 5553,
											"end": 5579,
											"name": "MSTORE"
										},
										{
											"begin": 5553,
											"end": 5579,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5553,
											"end": 5579,
											"name": "ADD"
										},
										{
											"begin": 5553,
											"end": 5579,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5579,
											"name": "KECCAK256"
										},
										{
											"begin": 5553,
											"end": 5579,
											"name": "SLOAD"
										},
										{
											"begin": 5553,
											"end": 5590,
											"name": "LT"
										},
										{
											"begin": 5553,
											"end": 5590,
											"name": "ISZERO"
										},
										{
											"begin": 5515,
											"end": 5590,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 5515,
											"end": 5590,
											"name": "JUMPDEST"
										},
										{
											"begin": 5515,
											"end": 5613,
											"name": "DUP1"
										},
										{
											"begin": 5515,
											"end": 5613,
											"name": "ISZERO"
										},
										{
											"begin": 5515,
											"end": 5613,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 5515,
											"end": 5613,
											"name": "JUMPI"
										},
										{
											"begin": 5515,
											"end": 5613,
											"name": "POP"
										},
										{
											"begin": 5612,
											"end": 5613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "DUP3"
										},
										{
											"begin": 5602,
											"end": 5613,
											"name": "GT"
										},
										{
											"begin": 5515,
											"end": 5613,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 5515,
											"end": 5613,
											"name": "JUMPDEST"
										},
										{
											"begin": 5515,
											"end": 5724,
											"name": "DUP1"
										},
										{
											"begin": 5515,
											"end": 5724,
											"name": "ISZERO"
										},
										{
											"begin": 5515,
											"end": 5724,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 5515,
											"end": 5724,
											"name": "JUMPI"
										},
										{
											"begin": 5515,
											"end": 5724,
											"name": "POP"
										},
										{
											"begin": 5711,
											"end": 5719,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5711,
											"end": 5724,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5720,
											"end": 5723,
											"name": "DUP5"
										},
										{
											"begin": 5711,
											"end": 5724,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5711,
											"end": 5724,
											"name": "AND"
										},
										{
											"begin": 5711,
											"end": 5724,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5711,
											"end": 5724,
											"name": "AND"
										},
										{
											"begin": 5711,
											"end": 5724,
											"name": "DUP2"
										},
										{
											"begin": 5711,
											"end": 5724,
											"name": "MSTORE"
										},
										{
											"begin": 5711,
											"end": 5724,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5711,
											"end": 5724,
											"name": "ADD"
										},
										{
											"begin": 5711,
											"end": 5724,
											"name": "SWAP1"
										},
										{
											"begin": 5711,
											"end": 5724,
											"name": "DUP2"
										},
										{
											"begin": 5711,
											"end": 5724,
											"name": "MSTORE"
										},
										{
											"begin": 5711,
											"end": 5724,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5711,
											"end": 5724,
											"name": "ADD"
										},
										{
											"begin": 5711,
											"end": 5724,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5711,
											"end": 5724,
											"name": "KECCAK256"
										},
										{
											"begin": 5711,
											"end": 5724,
											"name": "SLOAD"
										},
										{
											"begin": 5682,
											"end": 5708,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 5700,
											"end": 5707,
											"name": "DUP4"
										},
										{
											"begin": 5682,
											"end": 5690,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5682,
											"end": 5695,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5691,
											"end": 5694,
											"name": "DUP8"
										},
										{
											"begin": 5682,
											"end": 5695,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5682,
											"end": 5695,
											"name": "AND"
										},
										{
											"begin": 5682,
											"end": 5695,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5682,
											"end": 5695,
											"name": "AND"
										},
										{
											"begin": 5682,
											"end": 5695,
											"name": "DUP2"
										},
										{
											"begin": 5682,
											"end": 5695,
											"name": "MSTORE"
										},
										{
											"begin": 5682,
											"end": 5695,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5682,
											"end": 5695,
											"name": "ADD"
										},
										{
											"begin": 5682,
											"end": 5695,
											"name": "SWAP1"
										},
										{
											"begin": 5682,
											"end": 5695,
											"name": "DUP2"
										},
										{
											"begin": 5682,
											"end": 5695,
											"name": "MSTORE"
										},
										{
											"begin": 5682,
											"end": 5695,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5682,
											"end": 5695,
											"name": "ADD"
										},
										{
											"begin": 5682,
											"end": 5695,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5682,
											"end": 5695,
											"name": "KECCAK256"
										},
										{
											"begin": 5682,
											"end": 5695,
											"name": "SLOAD"
										},
										{
											"begin": 5682,
											"end": 5699,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 5682,
											"end": 5699,
											"name": "SWAP1"
										},
										{
											"begin": 5682,
											"end": 5708,
											"name": "SWAP2"
										},
										{
											"begin": 5682,
											"end": 5708,
											"name": "SWAP1"
										},
										{
											"begin": 5682,
											"end": 5708,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5682,
											"end": 5708,
											"name": "AND"
										},
										{
											"begin": 5682,
											"end": 5708,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5682,
											"end": 5708,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 5682,
											"end": 5708,
											"name": "JUMPDEST"
										},
										{
											"begin": 5682,
											"end": 5724,
											"name": "GT"
										},
										{
											"begin": 5515,
											"end": 5724,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 5515,
											"end": 5724,
											"name": "JUMPDEST"
										},
										{
											"begin": 5511,
											"end": 6258,
											"name": "ISZERO"
										},
										{
											"begin": 5511,
											"end": 6258,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 5511,
											"end": 6258,
											"name": "JUMPI"
										},
										{
											"begin": 5801,
											"end": 5829,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 5821,
											"end": 5828,
											"name": "DUP3"
										},
										{
											"begin": 5801,
											"end": 5809,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5801,
											"end": 5816,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5810,
											"end": 5815,
											"name": "DUP8"
										},
										{
											"begin": 5801,
											"end": 5816,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5801,
											"end": 5816,
											"name": "AND"
										},
										{
											"begin": 5801,
											"end": 5816,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5801,
											"end": 5816,
											"name": "AND"
										},
										{
											"begin": 5801,
											"end": 5816,
											"name": "DUP2"
										},
										{
											"begin": 5801,
											"end": 5816,
											"name": "MSTORE"
										},
										{
											"begin": 5801,
											"end": 5816,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5801,
											"end": 5816,
											"name": "ADD"
										},
										{
											"begin": 5801,
											"end": 5816,
											"name": "SWAP1"
										},
										{
											"begin": 5801,
											"end": 5816,
											"name": "DUP2"
										},
										{
											"begin": 5801,
											"end": 5816,
											"name": "MSTORE"
										},
										{
											"begin": 5801,
											"end": 5816,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5801,
											"end": 5816,
											"name": "ADD"
										},
										{
											"begin": 5801,
											"end": 5816,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5801,
											"end": 5816,
											"name": "KECCAK256"
										},
										{
											"begin": 5801,
											"end": 5816,
											"name": "SLOAD"
										},
										{
											"begin": 5801,
											"end": 5820,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 5801,
											"end": 5820,
											"name": "SWAP1"
										},
										{
											"begin": 5801,
											"end": 5829,
											"name": "SWAP2"
										},
										{
											"begin": 5801,
											"end": 5829,
											"name": "SWAP1"
										},
										{
											"begin": 5801,
											"end": 5829,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5801,
											"end": 5829,
											"name": "AND"
										},
										{
											"begin": 5801,
											"end": 5829,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5801,
											"end": 5829,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 5801,
											"end": 5829,
											"name": "JUMPDEST"
										},
										{
											"begin": 5783,
											"end": 5791,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5783,
											"end": 5798,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5792,
											"end": 5797,
											"name": "DUP7"
										},
										{
											"begin": 5783,
											"end": 5798,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5783,
											"end": 5798,
											"name": "AND"
										},
										{
											"begin": 5783,
											"end": 5798,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5783,
											"end": 5798,
											"name": "AND"
										},
										{
											"begin": 5783,
											"end": 5798,
											"name": "DUP2"
										},
										{
											"begin": 5783,
											"end": 5798,
											"name": "MSTORE"
										},
										{
											"begin": 5783,
											"end": 5798,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5783,
											"end": 5798,
											"name": "ADD"
										},
										{
											"begin": 5783,
											"end": 5798,
											"name": "SWAP1"
										},
										{
											"begin": 5783,
											"end": 5798,
											"name": "DUP2"
										},
										{
											"begin": 5783,
											"end": 5798,
											"name": "MSTORE"
										},
										{
											"begin": 5783,
											"end": 5798,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5783,
											"end": 5798,
											"name": "ADD"
										},
										{
											"begin": 5783,
											"end": 5798,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5783,
											"end": 5798,
											"name": "KECCAK256"
										},
										{
											"begin": 5783,
											"end": 5829,
											"name": "DUP2"
										},
										{
											"begin": 5783,
											"end": 5829,
											"name": "SWAP1"
										},
										{
											"begin": 5783,
											"end": 5829,
											"name": "SSTORE"
										},
										{
											"begin": 5783,
											"end": 5829,
											"name": "POP"
										},
										{
											"begin": 5950,
											"end": 5989,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 5981,
											"end": 5988,
											"name": "DUP3"
										},
										{
											"begin": 5950,
											"end": 5957,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 5950,
											"end": 5964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5958,
											"end": 5963,
											"name": "DUP8"
										},
										{
											"begin": 5950,
											"end": 5964,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5950,
											"end": 5964,
											"name": "AND"
										},
										{
											"begin": 5950,
											"end": 5964,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5950,
											"end": 5964,
											"name": "AND"
										},
										{
											"begin": 5950,
											"end": 5964,
											"name": "DUP2"
										},
										{
											"begin": 5950,
											"end": 5964,
											"name": "MSTORE"
										},
										{
											"begin": 5950,
											"end": 5964,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5950,
											"end": 5964,
											"name": "ADD"
										},
										{
											"begin": 5950,
											"end": 5964,
											"name": "SWAP1"
										},
										{
											"begin": 5950,
											"end": 5964,
											"name": "DUP2"
										},
										{
											"begin": 5950,
											"end": 5964,
											"name": "MSTORE"
										},
										{
											"begin": 5950,
											"end": 5964,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5950,
											"end": 5964,
											"name": "ADD"
										},
										{
											"begin": 5950,
											"end": 5964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5950,
											"end": 5964,
											"name": "KECCAK256"
										},
										{
											"begin": 5950,
											"end": 5976,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5965,
											"end": 5975,
											"name": "CALLER"
										},
										{
											"begin": 5950,
											"end": 5976,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5950,
											"end": 5976,
											"name": "AND"
										},
										{
											"begin": 5950,
											"end": 5976,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5950,
											"end": 5976,
											"name": "AND"
										},
										{
											"begin": 5950,
											"end": 5976,
											"name": "DUP2"
										},
										{
											"begin": 5950,
											"end": 5976,
											"name": "MSTORE"
										},
										{
											"begin": 5950,
											"end": 5976,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5950,
											"end": 5976,
											"name": "ADD"
										},
										{
											"begin": 5950,
											"end": 5976,
											"name": "SWAP1"
										},
										{
											"begin": 5950,
											"end": 5976,
											"name": "DUP2"
										},
										{
											"begin": 5950,
											"end": 5976,
											"name": "MSTORE"
										},
										{
											"begin": 5950,
											"end": 5976,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5950,
											"end": 5976,
											"name": "ADD"
										},
										{
											"begin": 5950,
											"end": 5976,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5950,
											"end": 5976,
											"name": "KECCAK256"
										},
										{
											"begin": 5950,
											"end": 5976,
											"name": "SLOAD"
										},
										{
											"begin": 5950,
											"end": 5980,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 5950,
											"end": 5980,
											"name": "SWAP1"
										},
										{
											"begin": 5950,
											"end": 5989,
											"name": "SWAP2"
										},
										{
											"begin": 5950,
											"end": 5989,
											"name": "SWAP1"
										},
										{
											"begin": 5950,
											"end": 5989,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5950,
											"end": 5989,
											"name": "AND"
										},
										{
											"begin": 5950,
											"end": 5989,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5950,
											"end": 5989,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 5950,
											"end": 5989,
											"name": "JUMPDEST"
										},
										{
											"begin": 5921,
											"end": 5928,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 5921,
											"end": 5935,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5929,
											"end": 5934,
											"name": "DUP7"
										},
										{
											"begin": 5921,
											"end": 5935,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5921,
											"end": 5935,
											"name": "AND"
										},
										{
											"begin": 5921,
											"end": 5935,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5921,
											"end": 5935,
											"name": "AND"
										},
										{
											"begin": 5921,
											"end": 5935,
											"name": "DUP2"
										},
										{
											"begin": 5921,
											"end": 5935,
											"name": "MSTORE"
										},
										{
											"begin": 5921,
											"end": 5935,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5921,
											"end": 5935,
											"name": "ADD"
										},
										{
											"begin": 5921,
											"end": 5935,
											"name": "SWAP1"
										},
										{
											"begin": 5921,
											"end": 5935,
											"name": "DUP2"
										},
										{
											"begin": 5921,
											"end": 5935,
											"name": "MSTORE"
										},
										{
											"begin": 5921,
											"end": 5935,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5921,
											"end": 5935,
											"name": "ADD"
										},
										{
											"begin": 5921,
											"end": 5935,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5921,
											"end": 5935,
											"name": "KECCAK256"
										},
										{
											"begin": 5921,
											"end": 5947,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5936,
											"end": 5946,
											"name": "CALLER"
										},
										{
											"begin": 5921,
											"end": 5947,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5921,
											"end": 5947,
											"name": "AND"
										},
										{
											"begin": 5921,
											"end": 5947,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5921,
											"end": 5947,
											"name": "AND"
										},
										{
											"begin": 5921,
											"end": 5947,
											"name": "DUP2"
										},
										{
											"begin": 5921,
											"end": 5947,
											"name": "MSTORE"
										},
										{
											"begin": 5921,
											"end": 5947,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5921,
											"end": 5947,
											"name": "ADD"
										},
										{
											"begin": 5921,
											"end": 5947,
											"name": "SWAP1"
										},
										{
											"begin": 5921,
											"end": 5947,
											"name": "DUP2"
										},
										{
											"begin": 5921,
											"end": 5947,
											"name": "MSTORE"
										},
										{
											"begin": 5921,
											"end": 5947,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5921,
											"end": 5947,
											"name": "ADD"
										},
										{
											"begin": 5921,
											"end": 5947,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5921,
											"end": 5947,
											"name": "KECCAK256"
										},
										{
											"begin": 5921,
											"end": 5989,
											"name": "DUP2"
										},
										{
											"begin": 5921,
											"end": 5989,
											"name": "SWAP1"
										},
										{
											"begin": 5921,
											"end": 5989,
											"name": "SSTORE"
										},
										{
											"begin": 5921,
											"end": 5989,
											"name": "POP"
										},
										{
											"begin": 6084,
											"end": 6110,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 6102,
											"end": 6109,
											"name": "DUP3"
										},
										{
											"begin": 6084,
											"end": 6092,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6084,
											"end": 6097,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6093,
											"end": 6096,
											"name": "DUP7"
										},
										{
											"begin": 6084,
											"end": 6097,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6084,
											"end": 6097,
											"name": "AND"
										},
										{
											"begin": 6084,
											"end": 6097,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6084,
											"end": 6097,
											"name": "AND"
										},
										{
											"begin": 6084,
											"end": 6097,
											"name": "DUP2"
										},
										{
											"begin": 6084,
											"end": 6097,
											"name": "MSTORE"
										},
										{
											"begin": 6084,
											"end": 6097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6084,
											"end": 6097,
											"name": "ADD"
										},
										{
											"begin": 6084,
											"end": 6097,
											"name": "SWAP1"
										},
										{
											"begin": 6084,
											"end": 6097,
											"name": "DUP2"
										},
										{
											"begin": 6084,
											"end": 6097,
											"name": "MSTORE"
										},
										{
											"begin": 6084,
											"end": 6097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6084,
											"end": 6097,
											"name": "ADD"
										},
										{
											"begin": 6084,
											"end": 6097,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6084,
											"end": 6097,
											"name": "KECCAK256"
										},
										{
											"begin": 6084,
											"end": 6097,
											"name": "SLOAD"
										},
										{
											"begin": 6084,
											"end": 6101,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 6084,
											"end": 6101,
											"name": "SWAP1"
										},
										{
											"begin": 6084,
											"end": 6110,
											"name": "SWAP2"
										},
										{
											"begin": 6084,
											"end": 6110,
											"name": "SWAP1"
										},
										{
											"begin": 6084,
											"end": 6110,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6084,
											"end": 6110,
											"name": "AND"
										},
										{
											"begin": 6084,
											"end": 6110,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6084,
											"end": 6110,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 6084,
											"end": 6110,
											"name": "JUMPDEST"
										},
										{
											"begin": 6068,
											"end": 6076,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 6068,
											"end": 6081,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6077,
											"end": 6080,
											"name": "DUP6"
										},
										{
											"begin": 6068,
											"end": 6081,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6068,
											"end": 6081,
											"name": "AND"
										},
										{
											"begin": 6068,
											"end": 6081,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6068,
											"end": 6081,
											"name": "AND"
										},
										{
											"begin": 6068,
											"end": 6081,
											"name": "DUP2"
										},
										{
											"begin": 6068,
											"end": 6081,
											"name": "MSTORE"
										},
										{
											"begin": 6068,
											"end": 6081,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6068,
											"end": 6081,
											"name": "ADD"
										},
										{
											"begin": 6068,
											"end": 6081,
											"name": "SWAP1"
										},
										{
											"begin": 6068,
											"end": 6081,
											"name": "DUP2"
										},
										{
											"begin": 6068,
											"end": 6081,
											"name": "MSTORE"
										},
										{
											"begin": 6068,
											"end": 6081,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6068,
											"end": 6081,
											"name": "ADD"
										},
										{
											"begin": 6068,
											"end": 6081,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6068,
											"end": 6081,
											"name": "KECCAK256"
										},
										{
											"begin": 6068,
											"end": 6110,
											"name": "DUP2"
										},
										{
											"begin": 6068,
											"end": 6110,
											"name": "SWAP1"
										},
										{
											"begin": 6068,
											"end": 6110,
											"name": "SSTORE"
										},
										{
											"begin": 6068,
											"end": 6110,
											"name": "POP"
										},
										{
											"begin": 6158,
											"end": 6161,
											"name": "DUP3"
										},
										{
											"begin": 6142,
											"end": 6171,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6142,
											"end": 6171,
											"name": "AND"
										},
										{
											"begin": 6151,
											"end": 6156,
											"name": "DUP5"
										},
										{
											"begin": 6142,
											"end": 6171,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6142,
											"end": 6171,
											"name": "AND"
										},
										{
											"begin": 6142,
											"end": 6171,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6163,
											"end": 6170,
											"name": "DUP5"
										},
										{
											"begin": 6142,
											"end": 6171,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6142,
											"end": 6171,
											"name": "MLOAD"
										},
										{
											"begin": 6142,
											"end": 6171,
											"name": "DUP1"
										},
										{
											"begin": 6142,
											"end": 6171,
											"name": "DUP3"
										},
										{
											"begin": 6142,
											"end": 6171,
											"name": "DUP2"
										},
										{
											"begin": 6142,
											"end": 6171,
											"name": "MSTORE"
										},
										{
											"begin": 6142,
											"end": 6171,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6142,
											"end": 6171,
											"name": "ADD"
										},
										{
											"begin": 6142,
											"end": 6171,
											"name": "SWAP2"
										},
										{
											"begin": 6142,
											"end": 6171,
											"name": "POP"
										},
										{
											"begin": 6142,
											"end": 6171,
											"name": "POP"
										},
										{
											"begin": 6142,
											"end": 6171,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6142,
											"end": 6171,
											"name": "MLOAD"
										},
										{
											"begin": 6142,
											"end": 6171,
											"name": "DUP1"
										},
										{
											"begin": 6142,
											"end": 6171,
											"name": "SWAP2"
										},
										{
											"begin": 6142,
											"end": 6171,
											"name": "SUB"
										},
										{
											"begin": 6142,
											"end": 6171,
											"name": "SWAP1"
										},
										{
											"begin": 6142,
											"end": 6171,
											"name": "LOG3"
										},
										{
											"begin": 6192,
											"end": 6196,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6185,
											"end": 6196,
											"name": "SWAP1"
										},
										{
											"begin": 6185,
											"end": 6196,
											"name": "POP"
										},
										{
											"begin": 6185,
											"end": 6196,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 6185,
											"end": 6196,
											"name": "JUMP"
										},
										{
											"begin": 5511,
											"end": 6258,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 5511,
											"end": 6258,
											"name": "JUMPDEST"
										},
										{
											"begin": 6242,
											"end": 6247,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6235,
											"end": 6247,
											"name": "SWAP1"
										},
										{
											"begin": 6235,
											"end": 6247,
											"name": "POP"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "JUMPDEST"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "SWAP4"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "SWAP3"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "POP"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "POP"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "POP"
										},
										{
											"begin": 5272,
											"end": 6264,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "JUMPDEST"
										},
										{
											"begin": 2588,
											"end": 2589,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "DUP2"
										},
										{
											"begin": 2555,
											"end": 2589,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "JUMPDEST"
										},
										{
											"begin": 3888,
											"end": 3895,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3914,
											"end": 3922,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3914,
											"end": 3930,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3929,
											"name": "DUP4"
										},
										{
											"begin": 3914,
											"end": 3930,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3914,
											"end": 3930,
											"name": "AND"
										},
										{
											"begin": 3914,
											"end": 3930,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3914,
											"end": 3930,
											"name": "AND"
										},
										{
											"begin": 3914,
											"end": 3930,
											"name": "DUP2"
										},
										{
											"begin": 3914,
											"end": 3930,
											"name": "MSTORE"
										},
										{
											"begin": 3914,
											"end": 3930,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3914,
											"end": 3930,
											"name": "ADD"
										},
										{
											"begin": 3914,
											"end": 3930,
											"name": "SWAP1"
										},
										{
											"begin": 3914,
											"end": 3930,
											"name": "DUP2"
										},
										{
											"begin": 3914,
											"end": 3930,
											"name": "MSTORE"
										},
										{
											"begin": 3914,
											"end": 3930,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3914,
											"end": 3930,
											"name": "ADD"
										},
										{
											"begin": 3914,
											"end": 3930,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3914,
											"end": 3930,
											"name": "KECCAK256"
										},
										{
											"begin": 3914,
											"end": 3930,
											"name": "SLOAD"
										},
										{
											"begin": 3907,
											"end": 3930,
											"name": "SWAP1"
										},
										{
											"begin": 3907,
											"end": 3930,
											"name": "POP"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "SWAP2"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "SWAP1"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "POP"
										},
										{
											"begin": 3832,
											"end": 3937,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "JUMPDEST"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "SWAP1"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "SLOAD"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "SWAP1"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "EXP"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "SWAP1"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "DIV"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "AND"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "DUP2"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "JUMPDEST"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "MLOAD"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "DUP1"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "ADD"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "MSTORE"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "DUP1"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "DUP2"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "MSTORE"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "ADD"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "PUSH",
											"value": "4649584544000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "DUP2"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "MSTORE"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "POP"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "DUP2"
										},
										{
											"begin": 2446,
											"end": 2485,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "JUMPDEST"
										},
										{
											"begin": 4075,
											"end": 4087,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4127,
											"end": 4134,
											"name": "DUP2"
										},
										{
											"begin": 4103,
											"end": 4111,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4103,
											"end": 4123,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4112,
											"end": 4122,
											"name": "CALLER"
										},
										{
											"begin": 4103,
											"end": 4123,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4103,
											"end": 4123,
											"name": "AND"
										},
										{
											"begin": 4103,
											"end": 4123,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4103,
											"end": 4123,
											"name": "AND"
										},
										{
											"begin": 4103,
											"end": 4123,
											"name": "DUP2"
										},
										{
											"begin": 4103,
											"end": 4123,
											"name": "MSTORE"
										},
										{
											"begin": 4103,
											"end": 4123,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4103,
											"end": 4123,
											"name": "ADD"
										},
										{
											"begin": 4103,
											"end": 4123,
											"name": "SWAP1"
										},
										{
											"begin": 4103,
											"end": 4123,
											"name": "DUP2"
										},
										{
											"begin": 4103,
											"end": 4123,
											"name": "MSTORE"
										},
										{
											"begin": 4103,
											"end": 4123,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4103,
											"end": 4123,
											"name": "ADD"
										},
										{
											"begin": 4103,
											"end": 4123,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4123,
											"name": "KECCAK256"
										},
										{
											"begin": 4103,
											"end": 4123,
											"name": "SLOAD"
										},
										{
											"begin": 4103,
											"end": 4134,
											"name": "LT"
										},
										{
											"begin": 4103,
											"end": 4134,
											"name": "ISZERO"
										},
										{
											"begin": 4103,
											"end": 4157,
											"name": "DUP1"
										},
										{
											"begin": 4103,
											"end": 4157,
											"name": "ISZERO"
										},
										{
											"begin": 4103,
											"end": 4157,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 4103,
											"end": 4157,
											"name": "JUMPI"
										},
										{
											"begin": 4103,
											"end": 4157,
											"name": "POP"
										},
										{
											"begin": 4156,
											"end": 4157,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4146,
											"end": 4153,
											"name": "DUP3"
										},
										{
											"begin": 4146,
											"end": 4157,
											"name": "GT"
										},
										{
											"begin": 4103,
											"end": 4157,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 4103,
											"end": 4157,
											"name": "JUMPDEST"
										},
										{
											"begin": 4103,
											"end": 4394,
											"name": "DUP1"
										},
										{
											"begin": 4103,
											"end": 4394,
											"name": "ISZERO"
										},
										{
											"begin": 4103,
											"end": 4394,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 4103,
											"end": 4394,
											"name": "JUMPI"
										},
										{
											"begin": 4103,
											"end": 4394,
											"name": "POP"
										},
										{
											"begin": 4381,
											"end": 4389,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4381,
											"end": 4394,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4390,
											"end": 4393,
											"name": "DUP5"
										},
										{
											"begin": 4381,
											"end": 4394,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4381,
											"end": 4394,
											"name": "AND"
										},
										{
											"begin": 4381,
											"end": 4394,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4381,
											"end": 4394,
											"name": "AND"
										},
										{
											"begin": 4381,
											"end": 4394,
											"name": "DUP2"
										},
										{
											"begin": 4381,
											"end": 4394,
											"name": "MSTORE"
										},
										{
											"begin": 4381,
											"end": 4394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4381,
											"end": 4394,
											"name": "ADD"
										},
										{
											"begin": 4381,
											"end": 4394,
											"name": "SWAP1"
										},
										{
											"begin": 4381,
											"end": 4394,
											"name": "DUP2"
										},
										{
											"begin": 4381,
											"end": 4394,
											"name": "MSTORE"
										},
										{
											"begin": 4381,
											"end": 4394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4381,
											"end": 4394,
											"name": "ADD"
										},
										{
											"begin": 4381,
											"end": 4394,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4381,
											"end": 4394,
											"name": "KECCAK256"
										},
										{
											"begin": 4381,
											"end": 4394,
											"name": "SLOAD"
										},
										{
											"begin": 4351,
											"end": 4377,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 4369,
											"end": 4376,
											"name": "DUP4"
										},
										{
											"begin": 4351,
											"end": 4359,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4351,
											"end": 4364,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4360,
											"end": 4363,
											"name": "DUP8"
										},
										{
											"begin": 4351,
											"end": 4364,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4351,
											"end": 4364,
											"name": "AND"
										},
										{
											"begin": 4351,
											"end": 4364,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4351,
											"end": 4364,
											"name": "AND"
										},
										{
											"begin": 4351,
											"end": 4364,
											"name": "DUP2"
										},
										{
											"begin": 4351,
											"end": 4364,
											"name": "MSTORE"
										},
										{
											"begin": 4351,
											"end": 4364,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4351,
											"end": 4364,
											"name": "ADD"
										},
										{
											"begin": 4351,
											"end": 4364,
											"name": "SWAP1"
										},
										{
											"begin": 4351,
											"end": 4364,
											"name": "DUP2"
										},
										{
											"begin": 4351,
											"end": 4364,
											"name": "MSTORE"
										},
										{
											"begin": 4351,
											"end": 4364,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4351,
											"end": 4364,
											"name": "ADD"
										},
										{
											"begin": 4351,
											"end": 4364,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4364,
											"name": "KECCAK256"
										},
										{
											"begin": 4351,
											"end": 4364,
											"name": "SLOAD"
										},
										{
											"begin": 4351,
											"end": 4368,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 4351,
											"end": 4368,
											"name": "SWAP1"
										},
										{
											"begin": 4351,
											"end": 4377,
											"name": "SWAP2"
										},
										{
											"begin": 4351,
											"end": 4377,
											"name": "SWAP1"
										},
										{
											"begin": 4351,
											"end": 4377,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4351,
											"end": 4377,
											"name": "AND"
										},
										{
											"begin": 4351,
											"end": 4377,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4351,
											"end": 4377,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 4351,
											"end": 4377,
											"name": "JUMPDEST"
										},
										{
											"begin": 4350,
											"end": 4394,
											"name": "GT"
										},
										{
											"begin": 4103,
											"end": 4394,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 4103,
											"end": 4394,
											"name": "JUMPDEST"
										},
										{
											"begin": 4099,
											"end": 4788,
											"name": "ISZERO"
										},
										{
											"begin": 4099,
											"end": 4788,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 4099,
											"end": 4788,
											"name": "JUMPI"
										},
										{
											"begin": 4481,
											"end": 4514,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 4506,
											"end": 4513,
											"name": "DUP3"
										},
										{
											"begin": 4481,
											"end": 4489,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4481,
											"end": 4501,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4490,
											"end": 4500,
											"name": "CALLER"
										},
										{
											"begin": 4481,
											"end": 4501,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4481,
											"end": 4501,
											"name": "AND"
										},
										{
											"begin": 4481,
											"end": 4501,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4481,
											"end": 4501,
											"name": "AND"
										},
										{
											"begin": 4481,
											"end": 4501,
											"name": "DUP2"
										},
										{
											"begin": 4481,
											"end": 4501,
											"name": "MSTORE"
										},
										{
											"begin": 4481,
											"end": 4501,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4481,
											"end": 4501,
											"name": "ADD"
										},
										{
											"begin": 4481,
											"end": 4501,
											"name": "SWAP1"
										},
										{
											"begin": 4481,
											"end": 4501,
											"name": "DUP2"
										},
										{
											"begin": 4481,
											"end": 4501,
											"name": "MSTORE"
										},
										{
											"begin": 4481,
											"end": 4501,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4481,
											"end": 4501,
											"name": "ADD"
										},
										{
											"begin": 4481,
											"end": 4501,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4481,
											"end": 4501,
											"name": "KECCAK256"
										},
										{
											"begin": 4481,
											"end": 4501,
											"name": "SLOAD"
										},
										{
											"begin": 4481,
											"end": 4505,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 4481,
											"end": 4505,
											"name": "SWAP1"
										},
										{
											"begin": 4481,
											"end": 4514,
											"name": "SWAP2"
										},
										{
											"begin": 4481,
											"end": 4514,
											"name": "SWAP1"
										},
										{
											"begin": 4481,
											"end": 4514,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4481,
											"end": 4514,
											"name": "AND"
										},
										{
											"begin": 4481,
											"end": 4514,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4481,
											"end": 4514,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 4481,
											"end": 4514,
											"name": "JUMPDEST"
										},
										{
											"begin": 4458,
											"end": 4466,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4458,
											"end": 4478,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4467,
											"end": 4477,
											"name": "CALLER"
										},
										{
											"begin": 4458,
											"end": 4478,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4458,
											"end": 4478,
											"name": "AND"
										},
										{
											"begin": 4458,
											"end": 4478,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4458,
											"end": 4478,
											"name": "AND"
										},
										{
											"begin": 4458,
											"end": 4478,
											"name": "DUP2"
										},
										{
											"begin": 4458,
											"end": 4478,
											"name": "MSTORE"
										},
										{
											"begin": 4458,
											"end": 4478,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4458,
											"end": 4478,
											"name": "ADD"
										},
										{
											"begin": 4458,
											"end": 4478,
											"name": "SWAP1"
										},
										{
											"begin": 4458,
											"end": 4478,
											"name": "DUP2"
										},
										{
											"begin": 4458,
											"end": 4478,
											"name": "MSTORE"
										},
										{
											"begin": 4458,
											"end": 4478,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4458,
											"end": 4478,
											"name": "ADD"
										},
										{
											"begin": 4458,
											"end": 4478,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4458,
											"end": 4478,
											"name": "KECCAK256"
										},
										{
											"begin": 4458,
											"end": 4514,
											"name": "DUP2"
										},
										{
											"begin": 4458,
											"end": 4514,
											"name": "SWAP1"
										},
										{
											"begin": 4458,
											"end": 4514,
											"name": "SSTORE"
										},
										{
											"begin": 4458,
											"end": 4514,
											"name": "POP"
										},
										{
											"begin": 4609,
											"end": 4635,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 4627,
											"end": 4634,
											"name": "DUP3"
										},
										{
											"begin": 4609,
											"end": 4617,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4609,
											"end": 4622,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4621,
											"name": "DUP7"
										},
										{
											"begin": 4609,
											"end": 4622,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4609,
											"end": 4622,
											"name": "AND"
										},
										{
											"begin": 4609,
											"end": 4622,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4609,
											"end": 4622,
											"name": "AND"
										},
										{
											"begin": 4609,
											"end": 4622,
											"name": "DUP2"
										},
										{
											"begin": 4609,
											"end": 4622,
											"name": "MSTORE"
										},
										{
											"begin": 4609,
											"end": 4622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4609,
											"end": 4622,
											"name": "ADD"
										},
										{
											"begin": 4609,
											"end": 4622,
											"name": "SWAP1"
										},
										{
											"begin": 4609,
											"end": 4622,
											"name": "DUP2"
										},
										{
											"begin": 4609,
											"end": 4622,
											"name": "MSTORE"
										},
										{
											"begin": 4609,
											"end": 4622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4609,
											"end": 4622,
											"name": "ADD"
										},
										{
											"begin": 4609,
											"end": 4622,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4609,
											"end": 4622,
											"name": "KECCAK256"
										},
										{
											"begin": 4609,
											"end": 4622,
											"name": "SLOAD"
										},
										{
											"begin": 4609,
											"end": 4626,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 4609,
											"end": 4626,
											"name": "SWAP1"
										},
										{
											"begin": 4609,
											"end": 4635,
											"name": "SWAP2"
										},
										{
											"begin": 4609,
											"end": 4635,
											"name": "SWAP1"
										},
										{
											"begin": 4609,
											"end": 4635,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4609,
											"end": 4635,
											"name": "AND"
										},
										{
											"begin": 4609,
											"end": 4635,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4609,
											"end": 4635,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 4609,
											"end": 4635,
											"name": "JUMPDEST"
										},
										{
											"begin": 4593,
											"end": 4601,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4593,
											"end": 4606,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4602,
											"end": 4605,
											"name": "DUP6"
										},
										{
											"begin": 4593,
											"end": 4606,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4593,
											"end": 4606,
											"name": "AND"
										},
										{
											"begin": 4593,
											"end": 4606,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4593,
											"end": 4606,
											"name": "AND"
										},
										{
											"begin": 4593,
											"end": 4606,
											"name": "DUP2"
										},
										{
											"begin": 4593,
											"end": 4606,
											"name": "MSTORE"
										},
										{
											"begin": 4593,
											"end": 4606,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4593,
											"end": 4606,
											"name": "ADD"
										},
										{
											"begin": 4593,
											"end": 4606,
											"name": "SWAP1"
										},
										{
											"begin": 4593,
											"end": 4606,
											"name": "DUP2"
										},
										{
											"begin": 4593,
											"end": 4606,
											"name": "MSTORE"
										},
										{
											"begin": 4593,
											"end": 4606,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4593,
											"end": 4606,
											"name": "ADD"
										},
										{
											"begin": 4593,
											"end": 4606,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4593,
											"end": 4606,
											"name": "KECCAK256"
										},
										{
											"begin": 4593,
											"end": 4635,
											"name": "DUP2"
										},
										{
											"begin": 4593,
											"end": 4635,
											"name": "SWAP1"
										},
										{
											"begin": 4593,
											"end": 4635,
											"name": "SSTORE"
										},
										{
											"begin": 4593,
											"end": 4635,
											"name": "POP"
										},
										{
											"begin": 4688,
											"end": 4691,
											"name": "DUP3"
										},
										{
											"begin": 4667,
											"end": 4701,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4667,
											"end": 4701,
											"name": "AND"
										},
										{
											"begin": 4676,
											"end": 4686,
											"name": "CALLER"
										},
										{
											"begin": 4667,
											"end": 4701,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4667,
											"end": 4701,
											"name": "AND"
										},
										{
											"begin": 4667,
											"end": 4701,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 4693,
											"end": 4700,
											"name": "DUP5"
										},
										{
											"begin": 4667,
											"end": 4701,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4667,
											"end": 4701,
											"name": "MLOAD"
										},
										{
											"begin": 4667,
											"end": 4701,
											"name": "DUP1"
										},
										{
											"begin": 4667,
											"end": 4701,
											"name": "DUP3"
										},
										{
											"begin": 4667,
											"end": 4701,
											"name": "DUP2"
										},
										{
											"begin": 4667,
											"end": 4701,
											"name": "MSTORE"
										},
										{
											"begin": 4667,
											"end": 4701,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4667,
											"end": 4701,
											"name": "ADD"
										},
										{
											"begin": 4667,
											"end": 4701,
											"name": "SWAP2"
										},
										{
											"begin": 4667,
											"end": 4701,
											"name": "POP"
										},
										{
											"begin": 4667,
											"end": 4701,
											"name": "POP"
										},
										{
											"begin": 4667,
											"end": 4701,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4667,
											"end": 4701,
											"name": "MLOAD"
										},
										{
											"begin": 4667,
											"end": 4701,
											"name": "DUP1"
										},
										{
											"begin": 4667,
											"end": 4701,
											"name": "SWAP2"
										},
										{
											"begin": 4667,
											"end": 4701,
											"name": "SUB"
										},
										{
											"begin": 4667,
											"end": 4701,
											"name": "SWAP1"
										},
										{
											"begin": 4667,
											"end": 4701,
											"name": "LOG3"
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4715,
											"end": 4726,
											"name": "SWAP1"
										},
										{
											"begin": 4715,
											"end": 4726,
											"name": "POP"
										},
										{
											"begin": 4715,
											"end": 4726,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 4715,
											"end": 4726,
											"name": "JUMP"
										},
										{
											"begin": 4099,
											"end": 4788,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 4099,
											"end": 4788,
											"name": "JUMPDEST"
										},
										{
											"begin": 4772,
											"end": 4777,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4765,
											"end": 4777,
											"name": "SWAP1"
										},
										{
											"begin": 4765,
											"end": 4777,
											"name": "POP"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "JUMPDEST"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "SWAP3"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "SWAP2"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "POP"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "POP"
										},
										{
											"begin": 4011,
											"end": 4794,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "JUMPDEST"
										},
										{
											"begin": 6747,
											"end": 6764,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6783,
											"end": 6790,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6783,
											"end": 6798,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6797,
											"name": "DUP5"
										},
										{
											"begin": 6783,
											"end": 6798,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6783,
											"end": 6798,
											"name": "AND"
										},
										{
											"begin": 6783,
											"end": 6798,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6783,
											"end": 6798,
											"name": "AND"
										},
										{
											"begin": 6783,
											"end": 6798,
											"name": "DUP2"
										},
										{
											"begin": 6783,
											"end": 6798,
											"name": "MSTORE"
										},
										{
											"begin": 6783,
											"end": 6798,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6783,
											"end": 6798,
											"name": "ADD"
										},
										{
											"begin": 6783,
											"end": 6798,
											"name": "SWAP1"
										},
										{
											"begin": 6783,
											"end": 6798,
											"name": "DUP2"
										},
										{
											"begin": 6783,
											"end": 6798,
											"name": "MSTORE"
										},
										{
											"begin": 6783,
											"end": 6798,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6783,
											"end": 6798,
											"name": "ADD"
										},
										{
											"begin": 6783,
											"end": 6798,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6783,
											"end": 6798,
											"name": "KECCAK256"
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6799,
											"end": 6807,
											"name": "DUP4"
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "AND"
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "AND"
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "DUP2"
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "MSTORE"
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "ADD"
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "SWAP1"
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "DUP2"
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "MSTORE"
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "ADD"
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "KECCAK256"
										},
										{
											"begin": 6783,
											"end": 6808,
											"name": "SLOAD"
										},
										{
											"begin": 6776,
											"end": 6808,
											"name": "SWAP1"
										},
										{
											"begin": 6776,
											"end": 6808,
											"name": "POP"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "SWAP3"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "SWAP2"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "POP"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "POP"
										},
										{
											"begin": 6673,
											"end": 6815,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMPDEST"
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP1"
										},
										{
											"begin": 927,
											"end": 928,
											"name": "DUP3"
										},
										{
											"begin": 923,
											"end": 924,
											"name": "DUP5"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "ADD"
										},
										{
											"begin": 911,
											"end": 928,
											"name": "SWAP1"
										},
										{
											"begin": 911,
											"end": 928,
											"name": "POP"
										},
										{
											"begin": 951,
											"end": 952,
											"name": "DUP4"
										},
										{
											"begin": 946,
											"end": 947,
											"name": "DUP2"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "LT"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "ISZERO"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPI"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "REVERT"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPDEST"
										},
										{
											"begin": 1002,
											"end": 1003,
											"name": "DUP1"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "SWAP2"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP3"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP2"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "JUMPDEST"
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 1362,
											"end": 1363,
											"name": "DUP4"
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "DUP4"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MLOAD"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP1"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "ADD"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MSTORE"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP1"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP2"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MSTORE"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "ADD"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP2"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MSTORE"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "POP"
										},
										{
											"begin": 1358,
											"end": 1361,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "JUMPDEST"
										},
										{
											"begin": 1351,
											"end": 1401,
											"name": "SWAP1"
										},
										{
											"begin": 1351,
											"end": 1401,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "SWAP3"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "SWAP2"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "JUMPDEST"
										},
										{
											"begin": 1818,
											"end": 1825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1851,
											"name": "DUP4"
										},
										{
											"begin": 1845,
											"end": 1846,
											"name": "DUP4"
										},
										{
											"begin": 1845,
											"end": 1851,
											"name": "GT"
										},
										{
											"begin": 1845,
											"end": 1851,
											"name": "ISZERO"
										},
										{
											"begin": 1853,
											"end": 1865,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPI"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "AND"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ISZERO"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPI"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "EXP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "NOT"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "AND"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPDEST"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "REVERT"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPDEST"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1876,
											"end": 1885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1893,
											"name": "DUP4"
										},
										{
											"begin": 1888,
											"end": 1889,
											"name": "DUP6"
										},
										{
											"begin": 1888,
											"end": 1893,
											"name": "SUB"
										},
										{
											"begin": 1876,
											"end": 1893,
											"name": "SWAP1"
										},
										{
											"begin": 1876,
											"end": 1893,
											"name": "POP"
										},
										{
											"begin": 1911,
											"end": 1912,
											"name": "DUP1"
										},
										{
											"begin": 1904,
											"end": 1912,
											"name": "SWAP2"
										},
										{
											"begin": 1904,
											"end": 1912,
											"name": "POP"
										},
										{
											"begin": 1904,
											"end": 1912,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "SWAP4"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "SWAP3"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/FixedSupplyToken.sol\":\"FixedSupplyToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FixedSupplyToken.sol\":{\"keccak256\":\"0xc76329d36e173150d97fa7a4183606ef5fabc37e419446cfa5c06059999ed099\",\"urls\":[\"bzz-raw://77d4430a5a8ef1e44de6b05ec83683332112786d73f868414c31188f9c37f60d\",\"dweb:/ipfs/QmXZ3LmWCRLVDeAAt74ef9p75ZDjbWGa4Ui6jPiHxbR1RM\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 83,
								"contract": "contracts/FixedSupplyToken.sol:FixedSupplyToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 88,
								"contract": "contracts/FixedSupplyToken.sol:FixedSupplyToken",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 92,
								"contract": "contracts/FixedSupplyToken.sol:FixedSupplyToken",
								"label": "balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 98,
								"contract": "contracts/FixedSupplyToken.sol:FixedSupplyToken",
								"label": "allowed",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":589:5297  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":589:5297  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820b1b06cc0c7e83338d77cb2b31b4d689fd7695bc9069c6d7b59db8259af90fbc164736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820b1b06cc0c7e83338d77cb2b31b4d689fd7695bc9069c6d7b59db8259af90fbc164736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xB1 0xB0 PUSH13 0xC0C7E83338D77CB2B31B4D689F 0xD7 PUSH10 0x5BC9069C6D7B59DB8259 0xAF SWAP1 0xFB 0xC1 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "589:4708:1:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820b1b06cc0c7e83338d77cb2b31b4d689fd7695bc9069c6d7b59db8259af90fbc164736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xB1 0xB0 PUSH13 0xC0C7E83338D77CB2B31B4D689F 0xD7 PUSH10 0x5BC9069C6D7B59DB8259 0xAF SWAP1 0xFB 0xC1 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "589:4708:1:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 589,
									"end": 5297,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 589,
									"end": 5297,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820b1b06cc0c7e83338d77cb2b31b4d689fd7695bc9069c6d7b59db8259af90fbc164736f6c63430005110032",
									".code": [
										{
											"begin": 589,
											"end": 5297,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "ADDRESS"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "EQ"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "MSTORE"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "DUP1"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/FixedSupplyToken.sol": {
				"ast": {
					"absolutePath": "contracts/FixedSupplyToken.sol",
					"exportedSymbols": {
						"ERC20Interface": [
							69
						],
						"FixedSupplyToken": [
							352
						]
					},
					"id": 353,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 353,
							"sourceUnit": 540,
							"src": "909:112:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 69,
							"linearizedBaseContracts": [
								69
							],
							"name": "ERC20Interface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 7,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1107:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "1131:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1131:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1130:9:0"
									},
									"scope": 69,
									"src": "1087:53:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 14,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "1235:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1234:16:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "1272:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1272:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1271:9:0"
									},
									"scope": 69,
									"src": "1216:65:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 23,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "1356:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "1369:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1369:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1355:29:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "1401:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 20,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1401:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1400:14:0"
									},
									"scope": 69,
									"src": "1338:77:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1513:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1513:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1528:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1541:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1512:44:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1573:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 31,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1573:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1572:14:0"
									},
									"scope": 69,
									"src": "1491:96:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 43,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1853:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1871:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1852:34:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1903:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 40,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1903:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1902:14:0"
									},
									"scope": 69,
									"src": "1836:81:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 52,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2024:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2024:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2040:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2040:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2023:34:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"name": "remaining",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2079:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2079:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2078:19:0"
									},
									"scope": 69,
									"src": "2005:93:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 60,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"indexed": true,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2165:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2165:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"indexed": true,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2188:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2188:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"indexed": false,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2209:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2164:60:0"
									},
									"src": "2150:75:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 68,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"indexed": true,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "2325:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"indexed": true,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "2349:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2349:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"indexed": false,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "2375:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2324:66:0"
									},
									"src": "2310:81:0"
								}
							],
							"scope": 353,
							"src": "1023:1370:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 70,
										"name": "ERC20Interface",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 69,
										"src": "2425:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Interface_$69",
											"typeString": "contract ERC20Interface"
										}
									},
									"id": 71,
									"nodeType": "InheritanceSpecifier",
									"src": "2425:14:0"
								}
							],
							"contractDependencies": [
								69
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 352,
							"linearizedBaseContracts": [
								352,
								69
							],
							"name": "FixedSupplyToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 74,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "2446:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 72,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2446:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4649584544",
										"id": 73,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2478:7:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_30ea4be232861f7555116fcc950136f9a04cb61860a8c2bc4b1f7869fc756d12",
											"typeString": "literal_string \"FIXED\""
										},
										"value": "FIXED"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 77,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "2491:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 75,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2491:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "4578616d706c6520466978656420537570706c7920546f6b656e",
										"id": 76,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2521:28:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_bb9c3319413d3ba6031e2ada8c5734434921f54973b7e9c9cdcde2469242268e",
											"typeString": "literal_string \"Example Fixed Supply Token\""
										},
										"value": "Example Fixed Supply Token"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 80,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "2555:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 78,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2555:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 79,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2588:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 83,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "2595:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 81,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2595:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31303030303030",
										"id": 82,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2618:7:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000_by_1",
											"typeString": "int_const 1000000"
										},
										"value": "1000000"
									},
									"visibility": "internal"
								},
								{
									"id": 86,
									"libraryName": {
										"contractScope": null,
										"id": 84,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 539,
										"src": "2738:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$539",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "2732:27:0",
									"typeName": {
										"id": 85,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2751:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 88,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "2795:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 87,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2795:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 92,
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "2855:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 91,
										"keyType": {
											"id": 89,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2864:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2855:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 90,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2875:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 98,
									"name": "allowed",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "2977:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 97,
										"keyType": {
											"id": 93,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2986:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2977:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 96,
											"keyType": {
												"id": 94,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3006:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2997:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 95,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3017:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "3132:56:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 101,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 554,
																	"src": "3150:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3150:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 103,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "3164:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3150:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 100,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															557,
															558
														],
														"referencedDeclaration": 557,
														"src": "3142:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3142:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "3142:28:0"
											},
											{
												"id": 107,
												"nodeType": "PlaceholderStatement",
												"src": "3180:1:0"
											}
										]
									},
									"documentation": null,
									"id": 109,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3129:2:0"
									},
									"src": "3111:77:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "3572:107:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 112,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "3614:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 113,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "3622:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3622:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "3614:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "3614:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 117,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "3642:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 119,
														"indexExpression": {
															"argumentTypes": null,
															"id": 118,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "3651:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3642:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 120,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "3660:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3642:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "3642:30:0"
											}
										]
									},
									"documentation": null,
									"id": 124,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3562:2:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3572:0:0"
									},
									"scope": 352,
									"src": "3551:128:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "3738:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 129,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 83,
													"src": "3755:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 128,
												"id": 130,
												"nodeType": "Return",
												"src": "3748:19:0"
											}
										]
									},
									"documentation": null,
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3705:2:0"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "3729:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3728:9:0"
									},
									"scope": 352,
									"src": "3685:89:0",
									"stateMutability": "view",
									"superFunction": 7,
									"visibility": "public"
								},
								{
									"body": {
										"id": 143,
										"nodeType": "Block",
										"src": "3897:40:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 139,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "3914:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 141,
													"indexExpression": {
														"argumentTypes": null,
														"id": 140,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "3923:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3914:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 138,
												"id": 142,
												"nodeType": "Return",
												"src": "3907:23:0"
											}
										]
									},
									"documentation": null,
									"id": 144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "3851:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3850:16:0"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "3888:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3888:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3887:9:0"
									},
									"scope": 352,
									"src": "3832:105:0",
									"stateMutability": "view",
									"superFunction": 14,
									"visibility": "public"
								},
								{
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "4089:705:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 153,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 92,
																	"src": "4103:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 156,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 154,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 554,
																		"src": "4112:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4112:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4103:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 157,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 148,
																"src": "4127:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4103:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 159,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 148,
																"src": "4146:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4156:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4146:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "4103:54:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 167,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 148,
																			"src": "4369:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 163,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 92,
																				"src": "4351:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 165,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 164,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 146,
																				"src": "4360:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4351:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 379,
																		"src": "4351:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4351:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 169,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4350:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 170,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 92,
																"src": "4381:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 172,
															"indexExpression": {
																"argumentTypes": null,
																"id": 171,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4390:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4381:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4350:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4103:291:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 211,
													"nodeType": "Block",
													"src": "4751:37:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4772:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 152,
															"id": 210,
															"nodeType": "Return",
															"src": "4765:12:0"
														}
													]
												},
												"id": 212,
												"nodeType": "IfStatement",
												"src": "4099:689:0",
												"trueBody": {
													"id": 208,
													"nodeType": "Block",
													"src": "4396:341:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 175,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 92,
																		"src": "4458:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 178,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 176,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 554,
																			"src": "4467:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "4467:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4458:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 184,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 148,
																			"src": "4506:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 179,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 92,
																				"src": "4481:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 182,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 180,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 554,
																					"src": "4490:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 181,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "4490:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4481:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 395,
																		"src": "4481:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4481:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4458:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 187,
															"nodeType": "ExpressionStatement",
															"src": "4458:56:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 188,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 92,
																		"src": "4593:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 190,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 189,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4602:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4593:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 195,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 148,
																			"src": "4627:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 191,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 92,
																				"src": "4609:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 193,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 192,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 146,
																				"src": "4618:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4609:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 379,
																		"src": "4609:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4609:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4593:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 198,
															"nodeType": "ExpressionStatement",
															"src": "4593:42:0"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 200,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 554,
																			"src": "4676:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "4676:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 202,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "4688:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 203,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 148,
																		"src": "4693:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 199,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "4667:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4667:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 205,
															"nodeType": "EmitStatement",
															"src": "4662:39:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4722:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 152,
															"id": 207,
															"nodeType": "Return",
															"src": "4715:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "4029:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "4042:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4042:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4028:30:0"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "4075:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 150,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4075:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4074:14:0"
									},
									"scope": 352,
									"src": "4011:783:0",
									"stateMutability": "nonpayable",
									"superFunction": 23,
									"visibility": "public"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "5379:885:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 225,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 92,
																		"src": "5515:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 227,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 226,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "5524:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5515:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 228,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "5534:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5515:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 230,
																			"name": "allowed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 98,
																			"src": "5553:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 232,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 231,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 216,
																			"src": "5561:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5553:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 235,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 233,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 554,
																			"src": "5568:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "5568:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5553:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 236,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "5583:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5553:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5515:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 239,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "5602:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5612:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5602:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5515:98:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 247,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "5700:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 243,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 92,
																		"src": "5682:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 245,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 244,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 218,
																		"src": "5691:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5682:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 379,
																"src": "5682:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5682:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 249,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 92,
																"src": "5711:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 251,
															"indexExpression": {
																"argumentTypes": null,
																"id": 250,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "5720:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5711:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5682:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5515:209:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 304,
													"nodeType": "Block",
													"src": "6221:37:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6242:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 224,
															"id": 303,
															"nodeType": "Return",
															"src": "6235:12:0"
														}
													]
												},
												"id": 305,
												"nodeType": "IfStatement",
												"src": "5511:747:0",
												"trueBody": {
													"id": 301,
													"nodeType": "Block",
													"src": "5726:481:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 254,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 92,
																		"src": "5783:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 256,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 255,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "5792:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5783:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 261,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 220,
																			"src": "5821:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 257,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 92,
																				"src": "5801:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 259,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 258,
																				"name": "_from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 216,
																				"src": "5810:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5801:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 395,
																		"src": "5801:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5801:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5783:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 264,
															"nodeType": "ExpressionStatement",
															"src": "5783:46:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 265,
																			"name": "allowed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 98,
																			"src": "5921:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 269,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 266,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 216,
																			"src": "5929:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5921:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 270,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 267,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 554,
																			"src": "5936:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "5936:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5921:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 278,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 220,
																			"src": "5981:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 271,
																					"name": "allowed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 98,
																					"src": "5950:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 273,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 272,
																					"name": "_from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 216,
																					"src": "5958:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5950:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 276,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 274,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 554,
																					"src": "5965:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 275,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "5965:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5950:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 395,
																		"src": "5950:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5950:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5921:68:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 281,
															"nodeType": "ExpressionStatement",
															"src": "5921:68:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 282,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 92,
																		"src": "6068:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 284,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 283,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 218,
																		"src": "6077:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6068:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 289,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 220,
																			"src": "6102:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 285,
																				"name": "balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 92,
																				"src": "6084:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 287,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 286,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 218,
																				"src": "6093:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6084:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 379,
																		"src": "6084:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6084:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6068:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 292,
															"nodeType": "ExpressionStatement",
															"src": "6068:42:0"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 294,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "6151:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 295,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 218,
																		"src": "6158:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 296,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6163:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 293,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "6142:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6142:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "6137:34:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6192:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 224,
															"id": 300,
															"nodeType": "Return",
															"src": "6185:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "5299:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5299:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "5318:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5318:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "5335:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5335:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5293:63:0"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "5373:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 222,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5373:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5372:6:0"
									},
									"scope": 352,
									"src": "5272:992:0",
									"stateMutability": "nonpayable",
									"superFunction": 34,
									"visibility": "public"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "6536:131:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 316,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "6546:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 320,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 317,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 554,
																	"src": "6554:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6554:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6546:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 321,
														"indexExpression": {
															"argumentTypes": null,
															"id": 319,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6566:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6546:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 322,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "6578:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6546:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "6546:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 326,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "6609:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6609:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 328,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6621:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 329,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "6631:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "6600:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6600:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 331,
												"nodeType": "EmitStatement",
												"src": "6595:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6656:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 315,
												"id": 333,
												"nodeType": "Return",
												"src": "6649:11:0"
											}
										]
									},
									"documentation": null,
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "6471:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "6489:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6470:35:0"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "6522:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 313,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6522:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6521:14:0"
									},
									"scope": 352,
									"src": "6454:213:0",
									"stateMutability": "nonpayable",
									"superFunction": 43,
									"visibility": "public"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "6766:49:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 344,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "6783:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 346,
														"indexExpression": {
															"argumentTypes": null,
															"id": 345,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "6791:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6783:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 348,
													"indexExpression": {
														"argumentTypes": null,
														"id": 347,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "6799:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6783:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 343,
												"id": 349,
												"nodeType": "Return",
												"src": "6776:32:0"
											}
										]
									},
									"documentation": null,
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "6692:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6692:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "6708:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6708:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6691:34:0"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"name": "remaining",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "6747:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6747:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6746:19:0"
									},
									"scope": 352,
									"src": "6673:142:0",
									"stateMutability": "view",
									"superFunction": 52,
									"visibility": "public"
								}
							],
							"scope": 353,
							"src": "2396:4422:0"
						}
					],
					"src": "0:6819:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							539
						]
					},
					"id": 540,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 354,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 539,
							"linearizedBaseContracts": [
								539
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "901:109:1",
										"statements": [
											{
												"assignments": [
													364
												],
												"declarations": [
													{
														"constant": false,
														"id": 364,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 378,
														"src": "911:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 363,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "911:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 368,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 365,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "923:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 366,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "927:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "923:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "911:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 370,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "946:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 371,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "951:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "946:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "954:29:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 369,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															557,
															558
														],
														"referencedDeclaration": 558,
														"src": "938:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "938:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 375,
												"nodeType": "ExpressionStatement",
												"src": "938:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 376,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 364,
													"src": "1002:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 362,
												"id": 377,
												"nodeType": "Return",
												"src": "995:8:1"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n- Addition cannot overflow.",
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "847:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "858:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "846:22:1"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "892:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "891:9:1"
									},
									"scope": 539,
									"src": "834:176:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "1341:67:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 389,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "1362:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 390,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "1365:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1368:32:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 388,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															395,
															422
														],
														"referencedDeclaration": 422,
														"src": "1358:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1358:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 387,
												"id": 393,
												"nodeType": "Return",
												"src": "1351:50:1"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.",
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1287:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1298:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1286:22:1"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1332:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1331:9:1"
									},
									"scope": 539,
									"src": "1274:134:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "1827:92:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 407,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "1845:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 408,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "1850:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1845:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 410,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "1853:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 406,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															557,
															558
														],
														"referencedDeclaration": 558,
														"src": "1837:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1837:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "1837:29:1"
											},
											{
												"assignments": [
													414
												],
												"declarations": [
													{
														"constant": false,
														"id": 414,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "1876:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 413,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1876:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 418,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 415,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "1888:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 416,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "1892:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1888:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1876:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 419,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 414,
													"src": "1911:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 405,
												"id": 420,
												"nodeType": "Return",
												"src": "1904:8:1"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.\n     * _Available since v2.4.0._",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1745:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1745:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1756:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1767:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 400,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1744:50:1"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "1818:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1818:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1817:9:1"
									},
									"scope": 539,
									"src": "1732:187:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "2226:392:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 431,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "2458:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 432,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2463:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 437,
												"nodeType": "IfStatement",
												"src": "2454:45:1",
												"trueBody": {
													"id": 436,
													"nodeType": "Block",
													"src": "2466:33:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2487:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 430,
															"id": 435,
															"nodeType": "Return",
															"src": "2480:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													439
												],
												"declarations": [
													{
														"constant": false,
														"id": 439,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 455,
														"src": "2509:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 438,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2509:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 443,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 440,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "2521:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 441,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "2525:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2521:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2509:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 445,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 439,
																	"src": "2544:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 446,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "2548:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2544:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 448,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 426,
																"src": "2553:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2544:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2556:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 444,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															557,
															558
														],
														"referencedDeclaration": 558,
														"src": "2536:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2536:56:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "2536:56:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 453,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 439,
													"src": "2610:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 430,
												"id": 454,
												"nodeType": "Return",
												"src": "2603:8:1"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n- Multiplication cannot overflow.",
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "2172:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2172:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "2183:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2171:22:1"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "2217:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2217:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2216:9:1"
									},
									"scope": 539,
									"src": "2159:459:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "3140:63:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 466,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "3161:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 467,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "3164:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3167:28:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 465,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															472,
															499
														],
														"referencedDeclaration": 499,
														"src": "3157:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3157:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 464,
												"id": 470,
												"nodeType": "Return",
												"src": "3150:46:1"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3086:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3086:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3097:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3085:22:1"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3131:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3131:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3130:9:1"
									},
									"scope": 539,
									"src": "3073:130:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "3813:243:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 484,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "3897:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3901:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3897:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 487,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "3904:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 483,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															557,
															558
														],
														"referencedDeclaration": 558,
														"src": "3889:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3889:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "3889:28:1"
											},
											{
												"assignments": [
													491
												],
												"declarations": [
													{
														"constant": false,
														"id": 491,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 498,
														"src": "3927:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 490,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3927:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 495,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 492,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "3939:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 493,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "3943:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3939:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3927:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 496,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 491,
													"src": "4048:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 482,
												"id": 497,
												"nodeType": "Return",
												"src": "4041:8:1"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.\n     * _Available since v2.4.0._",
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3731:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3731:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3742:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3742:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3753:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 477,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3753:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3730:50:1"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3804:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3804:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3803:9:1"
									},
									"scope": 539,
									"src": "3718:338:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "4567:61:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 509,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "4588:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 510,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "4591:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4594:26:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 508,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															515,
															538
														],
														"referencedDeclaration": 538,
														"src": "4584:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4584:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 507,
												"id": 513,
												"nodeType": "Return",
												"src": "4577:44:1"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4513:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4524:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4524:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4512:22:1"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4558:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4558:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4557:9:1"
									},
									"scope": 539,
									"src": "4500:128:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "5227:68:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 527,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "5245:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5250:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5245:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 530,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "5253:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 526,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															557,
															558
														],
														"referencedDeclaration": 558,
														"src": "5237:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5237:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 532,
												"nodeType": "ExpressionStatement",
												"src": "5237:29:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 533,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "5283:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 534,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "5287:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5283:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 525,
												"id": 536,
												"nodeType": "Return",
												"src": "5276:12:1"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.\n     * _Available since v2.4.0._",
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "5145:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5145:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "5156:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5156:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "5167:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 520,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5167:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5144:50:1"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "5218:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5218:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5217:9:1"
									},
									"scope": 539,
									"src": "5132:163:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 540,
							"src": "589:4708:1"
						}
					],
					"src": "0:5298:1"
				},
				"id": 1
			}
		}
	}
}